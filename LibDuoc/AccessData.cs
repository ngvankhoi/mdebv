using Microsoft.Win32;
using System;
using System.Xml;
using System.Data;
using System.IO;
using System.Security.Cryptography;
using dichso;
using System.Diagnostics;
using System.Text;
using Npgsql;
using NpgsqlTypes;
using System.Collections.Generic;

namespace LibDuoc
{
    public class AccessData
    {
        public const int i_maxlength_mabn = 8, i_maxlength_makp = 3;
        public string s_ngonngu = "";
        public string Msg = "Quản lý kho";
        public int iHaophi = 5;
        public string insert = "ins", delete = "del", dutru = "dutru", duyet = "duyet";
        public const string links_userid = "links", links_pass = "link7155019s20";
        private string sConn_server = "Server=192.168.1.14;Port=5432;User Id=medisoft;Password=links1920;Database=medisoft;Encoding=UNICODE;Pooling=true;";
        private int iRownum = 1;
        private bool bFound = false;
        string sConn = "Server=192.168.1.14;Port=5432;User Id=medisoft;Password=links1920;Database=medisoft;Encoding=UNICODE;Pooling=true;";
        NpgsqlDataAdapter dest;
        NpgsqlConnection con;
        NpgsqlCommand cmd;
        string sComputer = null;
        string sql = "", schema = "", owner = "medisoft", password = "links1920", userid = "medibv", database = "medisoft", xxxxx = "Ð§Ì©Î«³²°Ô£";
        string sHost = "", sPort = "";//linh 02012013
        DataSet ds = null;
        public AccessData()
        {
            sComputer = System.Environment.MachineName.Trim().ToUpper();
            if (Maincode("Con") != "") sConn = Maincode("Con");
            Msg = Thongso("kho").Trim();
            //linh 02012013
            string s_Key = Maincode("Key");
            if (s_Key == "1")
            {
                if (Maincode("Ip") != "") sHost = DeCode(Maincode("Ip"), key);
                if (Maincode("Post") != "") sPort = DeCode(Maincode("Post"), key);
                if (Maincode("UserID") != "") owner = DeCode(Maincode("UserID"), key);
                if (Maincode("Password") != "") password = DeCode(Maincode("Password"), key);
                if (Maincode("Database") != "") database = DeCode(Maincode("Database"), key);
            }
            else
            {
                if (Maincode("Ip") != "") sHost = Maincode("Ip");
                if (Maincode("Post") != "") sPort = Maincode("Post");
                if (Maincode("UserID") != "") owner = Maincode("UserID");
                if (Maincode("Password") != "") password = Maincode("Password");
                if (Maincode("Database") != "") database = Maincode("Database");
            }
            if (Maincode("User") != "") userid = Maincode("User");
            if (Maincode("ngonngu") != "") s_ngonngu = Maincode("ngonngu");
            userid = userid + s_ngonngu;
            //if (Maincode("xxxxx") == "*****") password = decode(xxxxx).ToLower();
            sConn = "Server=" + sHost + ";Port=" + sPort + ";User Id=" + owner + ";Password=" + password + ";Database=" + database + ";Encoding=UNICODE;Pooling=true;";
            //hien them sConn_server : dung lam chuoi ket noi toi ser ver trung tam
            try
            {
                string _userid = "medibv", _owner = "medisoft", _password = "links1920", _database = "medisoft";
                if (MaincodeServer("Con") != "") sConn_server = MaincodeServer("Con");
                if (MaincodeServer("User") != "") _userid = MaincodeServer("User");
                if (MaincodeServer("UserID") != "") _owner = MaincodeServer("UserID");
                if (MaincodeServer("Password") != "") _password = MaincodeServer("Password");
                if (MaincodeServer("Database") != "") _database = MaincodeServer("Database");
                if (MaincodeServer("xxxxx") == "*****") _password = decode(xxxxx).ToLower();
                sConn_server = "Server=" + MaincodeServer("Ip") + ";Port=" + MaincodeServer("Post") + ";User Id=" + _owner + ";Password=" + _password + ";Database=" + _database + ";Encoding=UNICODE;Pooling=true;";
            }
            catch
            { }
            // end hien
            if (!upd_dmcomputer())
            {
                System.Windows.Forms.MessageBox.Show("Không kết nối được Server !", Msg);
                System.Windows.Forms.Application.Exit();
            }
            ds = get_data("select id,computer from " + userid + ".dmcomputer");
            DataRow r = getrowbyid(ds.Tables[0], "computer='" + sComputer + "'");
            if (r != null) iRownum = iRownum = int.Parse(i_Chinhanh_hientai.ToString() + r["id"].ToString().PadLeft(5, '0'));//linh 28052012
        }

        #region get_chieudai_mabn_makp
        private int iChieudai_makp
        {
            get
            {
                try
                {
                    int ilen = 2;
                    DataSet ds = get_data("select ten from " + user + ".thongso where id=-98");
                    ilen = int.Parse(ds.Tables[0].Rows[0][0].ToString());
                    if (ilen < 2) ilen = 2;
                    else if (ilen > 3) ilen = 3;
                    return ilen;
                }
                catch { return 2; }
            }
        }
        private int iChieudai_mabn
        {
            get
            {
                try
                {
                    int ilen = 8;
                    DataSet ds = get_data("select ten from " + user + ".thongso where id=-99");
                    ilen = int.Parse(ds.Tables[0].Rows[0][0].ToString());
                    if (ilen < 8) ilen = 8;
                    else if (ilen > 10) ilen = 10;
                    return ilen;
                }
                catch { return 8; }
            }
        }
        #endregion get_chieudai_mabn_makp
        public bool upd_dmcomputer()
        {
            bool bnew = true;
            DataSet ads = get_data("select id, computer from " + user + ".dmcomputer where computer='" + System.Environment.MachineName + "'");
            if (ads != null && ads.Tables.Count > 0 && ads.Tables[0].Rows.Count > 0)
            {
                bnew = false;
            }
            
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            try
            {
                if (bnew == false)
                {
                    //sql = "update " + user + ".dmcomputer set computer=:m_computer where computer=:m_computer";
                    //con = new NpgsqlConnection(sConn);

                    //con.Open();
                    //cmd = new NpgsqlCommand(sql, con);
                    //cmd.CommandType = CommandType.Text;
                    //cmd.Parameters.Add("m_computer", NpgsqlDbType.Varchar).Value = System.Environment.MachineName;
                    //int irec = cmd.ExecuteNonQuery();
                    //cmd.Dispose();
                    //con.Close(); con.Dispose();
                }
                else
                {
                    sql = "insert into " + user + ".dmcomputer(id,computer) values (" + get_id_dmcomputer + ",'" + System.Environment.MachineName + "')";
                    execute_data(sql);
                }
            }
            catch (NpgsqlException ex)
            {

                Console.WriteLine(ex.Message);
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_danglaysolieu(int m_makp, int m_phieu, string m_ngay, int m_userid)//gam 07/01/2012
        {
            sql = "update " + user + ".d_danglaysolieu set userid=:m_userid, computer=:m_computer where ";
            sql += "makp=:m_makp and phieu=:m_phieu and to_char(ngay,'dd/mm/yyyy')=:m_ngay ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_userid", NpgsqlDbType.Numeric).Value = m_userid;
                cmd.Parameters.Add("m_computer", NpgsqlDbType.Text).Value = System.Environment.MachineName;
                cmd.Parameters.Add("m_makp", NpgsqlDbType.Numeric).Value = m_makp;
                cmd.Parameters.Add("m_phieu", NpgsqlDbType.Numeric).Value = m_phieu;
                cmd.Parameters.Add("m_ngay", NpgsqlDbType.Text).Value = m_ngay;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_danglaysolieu(makp,phieu,ngay,userid,computer,ngayud) ";
                    sql += "values (:m_makp,:m_phieu,:m_ngay,:m_userid,:m_computer,now())";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("m_makp", NpgsqlDbType.Numeric).Value = m_makp;
                    cmd.Parameters.Add("m_phieu", NpgsqlDbType.Numeric).Value = m_phieu;
                    //cmd.Parameters.Add("m_ngay", NpgsqlDbType.Text).Value = m_ngay;
                    cmd.Parameters.Add("m_ngay", NpgsqlDbType.Timestamp).Value = StringToDate(m_ngay);
                    cmd.Parameters.Add("m_userid", NpgsqlDbType.Numeric).Value = m_userid;
                    cmd.Parameters.Add("m_computer", NpgsqlDbType.Text).Value = System.Environment.MachineName;
                    irec = cmd.ExecuteNonQuery();
                }
            }
            catch (NpgsqlException ex)
            {

                upd_error(ex.Message.ToString().Trim(), sComputer, "d_danglaysolieu");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool del_danglaysolieu(int m_makp, int m_phieu, string m_ngay)//gam 07/01/2012
        {
            sql = "delete from " + user + ".d_danglaysolieu where makp=:m_makp and phieu=:m_phieu and to_char(ngay,'dd/mm/yyyy')=:m_ngay ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_makp", NpgsqlDbType.Numeric).Value = m_makp;
                cmd.Parameters.Add("m_phieu", NpgsqlDbType.Numeric).Value = m_phieu;
                cmd.Parameters.Add("m_ngay", NpgsqlDbType.Text).Value = m_ngay;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();

            }
            catch (NpgsqlException ex)
            {

                upd_error(ex.Message.ToString().Trim(), sComputer, "d_danglaysolieu");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool del_danglaysolieu(string d_comp_name)//gam 07/01/2012
        {
            sql = "delete from " + user + ".d_danglaysolieu where computer='" + d_comp_name + "' ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;               
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();

            }
            catch (NpgsqlException ex)
            {

                upd_error(ex.Message.ToString().Trim(), sComputer, "d_danglaysolieu");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public string Mabv
        {
            get
            {
                try
                {
                    DataTable tmp = get_data("select ten from " + user + ".thongso where id=2").Tables[0];
                    if (tmp.Rows[0]["ten"].ToString().Trim().Length == 8) return tmp.Rows[0]["ten"].ToString();
                    else
                    {
                        XmlDocument doc = new XmlDocument();
                        doc.Load("..//..//..//xml//maincode.xml");
                        XmlNodeList nodeLst = doc.GetElementsByTagName("Mabv");
                        return (nodeLst.Item(0).InnerText == "") ? "701.1.01" : nodeLst.Item(0).InnerText;
                    }
                }
                catch
                {
                    XmlDocument doc = new XmlDocument();
                    doc.Load("..//..//..//xml//maincode.xml");
                    XmlNodeList nodeLst = doc.GetElementsByTagName("Mabv");
                    return (nodeLst.Item(0).InnerText == "") ? "701.1.01" : nodeLst.Item(0).InnerText;
                }
            }
        }

        public string Mabv_xml
        {
            get
            {
                XmlDocument doc = new XmlDocument();
                doc.Load("..//..//..//xml//maincode.xml");
                XmlNodeList nodeLst = doc.GetElementsByTagName("Mabv");
                return (nodeLst.Item(0).InnerText == "") ? "701.1.01" : nodeLst.Item(0).InnerText;
            }
        }

        public int Mabv_so
        {
            get
            {
                string mabv = (Mabv != "") ? Mabv : Mabv_xml, s = "";
                for (int i = 0; i < mabv.Length; i++)
                    s += (mabv.Substring(i, 1) == ".") ? "" : mabv.Substring(i, 1);
                return int.Parse(s);
            }
        }

        public string user { get { return userid; } }
        public string Maincode(string sql)
        {
            try
            {
                XmlDocument doc = new XmlDocument();
                doc.Load("..//..//..//xml//maincode.xml");
                XmlNodeList nodeLst = doc.GetElementsByTagName(sql);
                return nodeLst.Item(0).InnerText;
            }
            catch
            {
                ds = new DataSet();
                ds.ReadXml("..//..//..//xml//maincode.xml");
                DataColumn dc = new DataColumn();
                dc.ColumnName = sql;
                dc.DataType = Type.GetType("System.String");
                ds.Tables[0].Columns.Add(dc);
                ds.Tables[0].Rows[0][sql] = "";
                ds.WriteXml("..//..//..//xml//maincode.xml");
                return "";
            }
        }
        public string MaincodeServer(string sql)
        {
            try
            {
                XmlDocument doc = new XmlDocument();
                doc.Load("..//..//..//xml//maincode_server.xml");
                XmlNodeList nodeLst = doc.GetElementsByTagName(sql);
                return nodeLst.Item(0).InnerText;
            }
            catch
            {
                ds = new DataSet();
                ds.ReadXml("..//..//..//xml//maincode_server.xml");
                DataColumn dc = new DataColumn();
                dc.ColumnName = sql;
                dc.DataType = Type.GetType("System.String");
                ds.Tables[0].Columns.Add(dc);
                ds.Tables[0].Rows[0][sql] = "";
                ds.WriteXml("..//..//..//xml//maincode.xml");
                return "";
            }
        }

        public string ngayhienhanh_server
        {
            get
            {
                return get_data("select to_char(now(),'dd/mm/yyyy hh24:mi')").Tables[0].Rows[0][0].ToString();
            }
        }

        public string Ngay_hethong { get { return ngayhienhanh_server.Substring(0, 10); } }
        public string Ngay_hethong_gio { get { return ngayhienhanh_server; } }
        public string Syte
        {
            get
            {
                try
                {
                    return get_data("select ten from " + user + ".thongso where id=4").Tables[0].Rows[0]["ten"].ToString();
                }
                catch
                {
                    return Maincode("Syte");
                }
            }
        }
        public string Tenbv
        {
            get
            {
                try
                {
                    return get_data("select ten from " + user + ".thongso where id=3").Tables[0].Rows[0]["ten"].ToString();
                }
                catch
                {
                    return Maincode("Tenbv");
                }
            }
        }
        public string Diachi
        {
            get
            {
                try
                {
                    return get_data("select ten from " + user + ".thongso where id=5").Tables[0].Rows[0]["ten"].ToString();
                }
                catch
                {
                    return Maincode("Diachi");
                }
            }
        }

        public void MaskDigit(System.Windows.Forms.KeyPressEventArgs e)
        {
            if (Char.IsDigit(e.KeyChar) || e.KeyChar == 8) e.Handled = false;
            else e.Handled = true;
        }
        public void MaskDecimal(System.Windows.Forms.KeyPressEventArgs e)
        {
            if (Char.IsDigit(e.KeyChar) || e.KeyChar == '.' || e.KeyChar == 8) e.Handled = false;
            else e.Handled = true;
        }

        public string Thongso(string sql)
        {
            try
            {
                XmlDocument doc = new XmlDocument();
                doc.Load("..//..//..//xml//d_thongso.xml");
                XmlNodeList nodeLst = doc.GetElementsByTagName(sql);
                return nodeLst.Item(0).InnerText;
            }
            catch
            {
                ds = new DataSet();
                ds.ReadXml("..//..//..//xml//d_thongso.xml");
                DataColumn dc = new DataColumn();
                dc.ColumnName = sql;
                dc.DataType = Type.GetType("System.String");
                ds.Tables[0].Columns.Add(dc);
                ds.Tables[0].Rows[0][sql] = "0";
                ds.WriteXml("..//..//..//xml//d_thongso.xml");
                return "0";
            }
        }

        public string Thongso(string tenfile, string cot)
        {
            try
            {
                XmlDocument doc = new XmlDocument();
                doc.Load("..//..//..//xml//" + tenfile + ".xml");
                XmlNodeList nodeLst = doc.GetElementsByTagName(cot);
                return nodeLst.Item(0).InnerText;
            }
            catch { return ""; }
        }

        public string MaxNgay(string ngay1, string ngay2)
        {
            DateTime t1 = StringToDate(ngay1), t2 = StringToDate(ngay2);
            return (t1 > t2) ? ngay1 : ngay2;
        }

        public string MinNgay(string ngay1, string ngay2)
        {
            DateTime t1 = StringToDate(ngay1), t2 = StringToDate(ngay2);
            return (t1 > t2) ? ngay2 : ngay1;
        }

        public bool bNgay(string ngayvao, string ngaysinh)
        {
            int d1 = DateTime.Now.Day;
            int m1 = DateTime.Now.Month;
            int y1 = DateTime.Now.Year;
            if (ngayvao != "")
            {
                y1 = int.Parse(ngayvao.Substring(6, 4));
                m1 = int.Parse(ngayvao.Substring(3, 2));
                d1 = int.Parse(ngayvao.Substring(0, 2));
            }
            int d2 = int.Parse(ngaysinh.Substring(0, 2));
            int m2 = int.Parse(ngaysinh.Substring(3, 2));
            int y2 = int.Parse(ngaysinh.Substring(6, 4));

            if (y2 > y1) return false;
            else if (y2 < y1) return true;
            if (m2 > m1) return false;
            else if (m2 < m1) return true;
            if (d2 > d1) return false;
            return true;
        }
        public bool bNgay(string ngay)
        {
            try
            {
                if (ngay.IndexOf("_") != -1) return false;
                int len = ngay.Length;
                if (len == 0) return false;
                string dd = ngay.Substring(0, 2), mm = ngay.Substring(3, 2), yyyy = ngay.Substring(6, 4);
                string s31 = "01+03+05+07+08+10+12+", s30 = "04+06+09+11+", s2829 = (int.Parse(yyyy) % 4 == 0) ? "29" : "28";
                if (int.Parse(yyyy.Substring(0, 1)) < 1) return false;
                if (int.Parse(mm) < 1 || int.Parse(mm) > 12) return false;
                if (s31.IndexOf(mm + "+") > -1)
                {
                    if (int.Parse(dd) < 0 || int.Parse(dd) > 31) return false;
                }
                else if (s30.IndexOf(mm + "+") > -1)
                {
                    if (int.Parse(dd) < 0 || int.Parse(dd) > 30) return false;
                }
                else if (int.Parse(dd) < 0 || int.Parse(dd) > int.Parse(s2829)) return false;
                if (len > 10)
                {
                    string hh = ngay.Substring(11, 2), MM = ngay.Substring(14, 2);
                    if (int.Parse(hh) > 23) return false;
                    if (int.Parse(MM) > 59) return false;
                }
                return true;
            }
            catch { return false; };
        }
        /// <summary>
        /// Get khoang cach ngay ra va ngay vao: d_ngayra - d_ ngayvao
        /// </summary>
        /// <param name="d_ngayra"></param>
        /// <param name="d_ngayvao"></param>
        /// <param name="congthem"></param>
        /// <returns></returns>
        public Int64 songay(DateTime d_ngayra, DateTime d_ngayvao, int congthem)
        {
            try
            {
                return Convert.ToInt64(d_ngayra.ToOADate() - d_ngayvao.ToOADate() + congthem);
            }
            catch { return 0; }
        }
        public bool ngay(DateTime d1, DateTime d2, int so)
        {
            return (Math.Abs(songay(d1, StringToDate(d2.Day.ToString().PadLeft(2, '0') + "/" + d2.Month.ToString().PadLeft(2, '0') + "/" + d2.Year.ToString()), 0)) <= so);
        }

        public System.DateTime StringToDate(string s)
        {
            s = (s == "") ? ngayhienhanh_server.Substring(0, 10) : s;
            string[] format ={ "dd/MM/yyyy" };
            return System.DateTime.ParseExact(s.ToString().Substring(0, 10), format, System.Globalization.DateTimeFormatInfo.CurrentInfo, System.Globalization.DateTimeStyles.None);
        }

        public string DateToString(System.DateTime date)
        {
            string format = "dd/MM/yyyy";
            return date.ToString(format, System.Globalization.DateTimeFormatInfo.CurrentInfo);
        }

        public string onlyso(string s)
        {
            string ret = "", s1 = " 0123456789";
            for (int i = 0; i < s.Length; i++)
                if (s1.IndexOf(s.Substring(i, 1)) != -1) ret += s.Substring(i, 1);
            return ret;
        }

        public string Mmyy_truoc(string d_mmyy)
        {
            int t_mm, t_yy;
            string mm = d_mmyy.Substring(0, 2), yy = d_mmyy.Substring(2, 2);
            if (mm == "01")
            {
                t_mm = 12; t_yy = int.Parse(yy) - 1;
            }
            else
            {
                t_mm = int.Parse(mm) - 1; t_yy = int.Parse(yy);
            }
            return t_mm.ToString().PadLeft(2, '0') + t_yy.ToString().PadLeft(2, '0');
        }

        public string Mmyy_sau(string d_mmyy)
        {
            int t_mm, t_yy;
            string mm = d_mmyy.Substring(0, 2), yy = d_mmyy.Substring(2, 2);
            if (mm == "12")
            {
                t_mm = 01; t_yy = int.Parse(yy) + 1;
            }
            else
            {
                t_mm = int.Parse(mm) + 1; t_yy = int.Parse(yy);
            }
            return t_mm.ToString().PadLeft(2, '0') + t_yy.ToString().PadLeft(2, '0');
        }

        public string Ktngaygio(string s, int len)
        {
            try
            {
                string s1 = onlyso(s);
                if (len == 10)
                    return s1.Substring(0, 2).Trim().PadLeft(2, '0') + "/" + s1.Substring(2, 2).Trim().PadLeft(2, '0') + "/" + s1.Substring(4).Trim().PadLeft(4, '0');
                else
                    return s1.Substring(0, 2).Trim().PadLeft(2, '0') + "/" + s1.Substring(2, 2).Trim().PadLeft(2, '0') + "/" + s1.Substring(4, 4).Trim().PadLeft(4, '0') + " " + s1.Substring(9, 2).Trim().PadLeft(2, '0') + ":" + s1.Substring(11, 2).Trim().PadLeft(2, '0');
            }
            catch { return s; }
        }
        private string Mabd(string s, int so)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//khongdau.xml");
            string s1 = s.Trim().ToUpper(), s2 = "";
            DataRow r;
            for (int i = 0; i < s1.Length; i++)
            {
                if (s1[i].ToString().Trim() != "")
                {
                    r = getrowbyid(ds.Tables[0], "codau='" + s1[i].ToString() + "'");
                    if (r != null) s2 += r[1].ToString();
                    else s2 += s1[i];
                }
                if (s2.Length == so) break;
            }
            return s2.PadRight(3, '0');
        }

        public string getMabd1(string table, string s, int manhom)
        {
            s = s.Replace(",", "").Replace("'", "").Replace("(", "").Replace(")", "").Replace(".", "");
            string s1 = Mabd(s, 3);
            int i = 1;
            try
            {
                sql = "select max(substr(ma,4)) from " + user + "." + table + " where substr(ma,1,3)='" + s1.ToUpper() + "' and length(ma)=6";
                sql += " and substr(ma,4,1) in('0','1','2','3','4','5','6','7','8','9')";
                sql += " and substr(ma,5,1) in('0','1','2','3','4','5','6','7','8','9')";
                sql += " and substr(ma,6,1) in('0','1','2','3','4','5','6','7','8','9')";
                if (manhom > 0) sql += " and nhom=" + manhom;
                string stt = get_data(sql).Tables[0].Rows[0][0].ToString();
                i = int.Parse(stt) + 1;
            }
            catch { }
            return s1 + i.ToString().PadLeft(6 - s1.Length, '0');
        }

        public string getMabd(string table, string s, int manhom)
        {
            s = s.Replace(",", "").Replace("'", "").Replace("(", "").Replace(")", "").Replace(".", "");
            string s1 = Mabd(s, 3), s_ma = ""; ;
            int i = 1;
            try
            {
                sql = "select ma from " + user + "." + table + " where substr(ma,1,3)='" + s1.ToUpper() + "' and length(ma)=6";
                DataSet lds = get_data(sql);
                if (lds == null || lds.Tables.Count <= 0)
                {
                    s_ma = s1 + i.ToString().PadLeft(6 - s1.Length, '0');
                }
                else
                {
                    string exp = "";
                    DataRow dr;
                    for (int j = 1; j < 1000; j++)
                    {
                        exp = s1 + j.ToString().PadLeft(3, '0');
                        dr = getrowbyid(lds.Tables[0], "ma='" + exp + "'");
                        if (dr == null) { s_ma = exp; break; }
                    }
                }
            }
            catch { s_ma = s1 + i.ToString().PadLeft(6 - s1.Length, '0'); }
            return s_ma;
        }
        public string Caps(string s)
        {
            if (s.Length == 0) return null;
            System.Text.StringBuilder sb = new System.Text.StringBuilder(s.ToLower());
            sb[0] = Char.ToUpper(sb[0]);
            string ret = null;
            int num = 0; int ispace = 0;
            while (num < sb.Length)
            {
                if (Char.IsWhiteSpace(sb[num])) ispace++;
                if (!Char.IsWhiteSpace(sb[num]))
                {
                    if (ispace > 0 && num > 0)
                    {
                        sb[num] = Char.ToUpper(sb[num]);
                        ispace = 0;
                    }
                }
                num++;
            }
            num = 0;
            ispace = 0;
            while (num < sb.Length)
            {
                if (Char.IsWhiteSpace(sb[num]))
                {
                    if (ispace < 1 && num > 0) ret += sb[num];
                    ispace++;
                }
                else
                {
                    ret += sb[num];
                    ispace = 0;
                }
                num++;
            }
            return ret;
        }
        public string getIndex(int i)
        {
            string[] map = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
							   "AA", "AB", "AC", "AD", "AE", "AF", "AG", "AH", "AI", "AJ", "AK", "AL", "AM", "AN", "AO", "AP", "AQ", "AR", "AS", "AT", "AU", "AV", "AW", "AX", "AY", "AZ",
							   "BA", "BB", "BC", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BK", "BL", "BM", "BN", "BO", "BP", "BQ", "BR", "BS", "BT", "BU", "BV", "BW", "BX", "BY", "BZ",
							   "CA", "CB", "CC", "CD", "CE", "CF", "CG", "CH", "CI", "CJ", "CK", "CL", "CM", "CN", "CO", "CP", "CQ", "CR", "CS", "CT", "CU", "CV", "CW", "CX", "CY", "CZ",
							   "DA", "DB", "DC", "DD", "DE", "DF", "DG", "DH", "DI", "DJ", "DK", "DL", "DM", "DN", "DO", "DP", "DQ", "DR", "DS", "DT", "DU", "DV", "DW", "DX", "DY", "DZ",
							   "EA", "EB", "EC", "ED", "EE", "EF", "EG", "EH", "EI", "EJ", "EK", "EL", "EM", "EN", "EO", "EP", "EQ", "ER", "ES", "ET", "EU", "EV", "EW", "EX", "EY", "EZ",
							   "FA", "FB", "FC", "FD", "FE", "FF", "FG", "FH", "FI", "FJ", "FK", "FL", "FM", "FN", "FO", "FP", "FQ", "FR", "FS", "FT", "FU", "FV", "FW", "FX", "FY", "FZ",
							   "GA", "GB", "GC", "GD", "GE", "GF", "GG", "GH", "GI", "GJ", "GK", "GL", "GM", "GN", "GO", "GP", "GQ", "GR", "GS", "GT", "GU", "GV", "GW", "GX", "GY", "GZ",
							   "HA", "HB", "HC", "HD", "HE", "HF", "HG", "HH", "HI", "HJ", "HK", "HL", "HM", "HN", "HO", "HP", "HQ", "HR", "HS", "HT", "HU", "HV", "HW", "HX", "HY", "HZ",
							   "IA", "IB", "IC", "ID", "IE", "IF", "IG", "IH", "II", "IJ", "IK", "IL", "IM", "IN", "IO", "IP", "IQ", "IR", "IS", "IT", "IU", "IV", "IW", "IX", "IY", "IZ",
							   "JA", "JB", "JC", "JD", "JE", "JF", "JG", "JH", "JI", "JJ", "JK", "JL", "JM", "JN", "JO", "JP", "JQ", "JR", "JS", "JT", "JU", "JV", "JW", "JX", "JY", "JZ",
							   "KA", "KB", "KC", "KD", "KE", "KF", "KG", "KH", "KI", "KJ", "KK", "KL", "KM", "KN", "KO", "KP", "KQ", "KR", "KS", "KT", "KU", "KV", "KW", "KX", "KY", "KZ",
							   "LA", "LB", "LC", "LD", "LE", "LF", "LG", "LH", "LI", "LJ", "LK", "LL", "LM", "LN", "LO", "LP", "LQ", "LR", "LS", "LT", "LU", "LV", "LW", "LX", "LY", "LZ",
							   "MA", "MB", "MC", "MD", "ME", "MF", "MG", "MH", "MI", "MJ", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ",
							   "NA", "NB", "NC", "ND", "NE", "NF", "NG", "NH", "NI", "NJ", "NK", "NL", "NM", "NN", "NO", "NP", "NQ", "NR", "NS", "NT", "NU", "NV", "NW", "NX", "NY", "NZ",
							   "OA", "OB", "OC", "OD", "OE", "OF", "OG", "OH", "OI", "OJ", "OK", "OL", "OM", "ON", "OO", "OP", "OQ", "OR", "OS", "OT", "OU", "OV", "OW", "OX", "OY", "OZ",
							   "PA", "PB", "PC", "PD", "PE", "PF", "PG", "PH", "PI", "PJ", "PK", "PL", "PM", "PN", "PO", "PP", "PQ", "PR", "PS", "PT", "PU", "PV", "PW", "PX", "PY", "PZ",
							   "QA", "QB", "QC", "QD", "QE", "QF", "QG", "QH", "QI", "QJ", "QK", "QL", "QM", "QN", "QO", "QP", "QQ", "QR", "QS", "QT", "QU", "QV", "QW", "QX", "QY", "QZ",
							   "RA", "RB", "RC", "RD", "RE", "RF", "RG", "RH", "RI", "RJ", "RK", "RL", "RM", "RN", "RO", "RP", "RQ", "RR", "RS", "RT", "RU", "RV", "RW", "RX", "RY", "RZ",
							   "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SP", "SQ", "SR", "SS", "ST", "SU", "SV", "SW", "SX", "SY", "SZ",
							   "TA", "TB", "TC", "TD", "TE", "TF", "TG", "TH", "TI", "TJ", "TK", "TL", "TM", "TN", "TO", "TP", "TQ", "TR", "TS", "TT", "TU", "TV", "TW", "TX", "TY", "TZ",
							   "UA", "UB", "UC", "UD", "UE", "UF", "UG", "UH", "UI", "UJ", "UK", "UL", "UM", "UN", "UO", "UP", "UQ", "UR", "US", "UT", "UU", "UV", "UW", "UX", "UY", "UZ",
							   "VA", "VB", "VC", "VD", "VE", "VF", "VG", "VH", "VI", "VJ", "VK", "VL", "VM", "VN", "VO", "VP", "VQ", "VR", "VS", "VT", "VU", "VV", "VW", "VX", "VY", "VZ",
							   "WA", "WB", "WC", "WD", "WE", "WF", "WG", "WH", "WI", "WJ", "WK", "WL", "WM", "WN", "WO", "WP", "WQ", "WR", "WS", "WT", "WU", "WV", "WW", "WX", "WY", "WZ",
							   "XA", "XB", "XC", "XD", "XE", "XF", "XG", "XH", "XI", "XJ", "XK", "XL", "XM", "XN", "XO", "XP", "XQ", "XR", "XS", "XT", "XU", "XV", "XW", "XX", "XY", "XZ",
							   "YA", "YB", "YC", "YD", "YE", "YF", "YG", "YH", "YI", "YJ", "YK", "YL", "YM", "YN", "YO", "YP", "YQ", "YR", "YS", "YT", "YU", "YV", "YW", "YX", "YY", "YZ",
							   "ZA", "ZB", "ZC", "ZD", "ZE", "ZF", "ZG", "ZH", "ZI", "ZJ", "ZK", "ZL", "ZM", "ZN", "ZO", "ZP", "ZQ", "ZR", "ZS", "ZT", "ZU", "ZV", "ZW", "ZX", "ZY", "ZZ"};

            return map[i];
        }
        public string Export_Excel(DataSet dset, string tenfile)
        {
            try
            {
                string dirPath = AppDomain.CurrentDomain.BaseDirectory + "Excel";
                string filePath = dirPath + "\\" + tenfile + ".xls";
                if (!System.IO.Directory.Exists(dirPath)) System.IO.Directory.CreateDirectory(dirPath);
                System.IO.StreamWriter sw = new System.IO.StreamWriter(filePath, false, System.Text.Encoding.Unicode);
                string astr = "";
                astr = "<Table>";//"<Table border=1>";
                astr = astr + "<tr>";
                for (int i = 0; i < dset.Tables[0].Columns.Count; i++)
                {
                    astr = astr + "<th>";
                    astr = astr + dset.Tables[0].Columns[i].ColumnName;
                    astr = astr + "</th>";
                }
                astr = astr + "</tr>";
                sw.Write(astr);
                for (int i = 0; i < dset.Tables[0].Rows.Count; i++)
                {
                    astr = "<tr>";
                    for (int j = 0; j < dset.Tables[0].Columns.Count; j++)
                    {
                        astr = astr + "<td>";
                        astr = astr + dset.Tables[0].Rows[i][j].ToString();
                        astr = astr + "</td>";
                    }
                    astr = astr + "</tr>";
                    sw.Write(astr);
                }
                astr = "</Table>";
                sw.Write(astr);
                sw.Close();
                return filePath;
            }
            catch (Exception ex)
            {
                upd_error(ex.Message, sComputer, tenfile);
                return "";
            }
        }

        public string Export_Excel(DataTable dt, string tenfile)
        {
            try
            {
                string dirPath = AppDomain.CurrentDomain.BaseDirectory + "Excel";
                string filePath = dirPath + "\\" + tenfile + ".xls";
                if (!System.IO.Directory.Exists(dirPath)) System.IO.Directory.CreateDirectory(dirPath);
                System.IO.StreamWriter sw = new System.IO.StreamWriter(filePath, false, System.Text.Encoding.Unicode);
                string astr = "";
                astr = "<Table>";//"<Table border=1>";
                astr = astr + "<tr>";
                for (int i = 0; i < dt.Columns.Count; i++)
                {
                    astr = astr + "<th>";
                    astr = astr + dt.Columns[i].ColumnName;
                    astr = astr + "</th>";
                }
                astr = astr + "</tr>";
                sw.Write(astr);
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    astr = "<tr>";
                    for (int j = 0; j < dt.Columns.Count; j++)
                    {
                        astr = astr + "<td>";
                        astr = astr + dt.Rows[i][j].ToString();
                        astr = astr + "</td>";
                    }
                    astr = astr + "</tr>";
                    sw.Write(astr);
                }
                astr = "</Table>";
                sw.Write(astr);
                sw.Close();
                return filePath;
            }
            catch (Exception ex)
            {
                upd_error(ex.Message, sComputer, tenfile);
                return "";
            }
        }

        public void writeXml(string tenfile, string cot, string s)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//" + tenfile + ".xml");
            try
            {
                ds.Tables[0].Rows[0][cot] = s;
            }
            catch
            {
                DataColumn dc = new DataColumn();
                dc.ColumnName = cot;
                dc.DataType = Type.GetType("System.String");
                ds.Tables[0].Columns.Add(dc);
                ds.Tables[0].Rows[0][cot] = s;
            }
            ds.WriteXml("..//..//..//xml//" + tenfile + ".xml");
        }

        public bool get_nhom(string sothe, string ma, int nhom)
        {
            int m161 = 4, m162 = 2, pos = 0;
            string ma16 = ma16_vitri.ToString();
            try
            {
                if (ma16 != "")
                {
                    pos = ma16.IndexOf(",");
                    if (pos != -1)
                    {
                        m161 = int.Parse(ma16.Substring(0, pos)) - 1;
                        m162 = int.Parse(ma16.Substring(pos + 1));
                    }
                }
            }
            catch { m161 = 4; m162 = 2; }
            return ma.IndexOf(sothe.Substring(m161, m162)) != -1;
        }
        //ThanhCuong - 17/08/2012 - kỹ thuật cao
        public bool get_nhom_ktcao(string sothe, string ma, int nhom)
        {
            int m161 = 4, m162 = 2, pos = 0;
            string ma13 = ma13_vitri.ToString();
            try
            {
                if (ma13 != "")
                {
                    pos = ma13.IndexOf(",");
                    if (pos != -1)
                    {
                        m161 = int.Parse(ma13.Substring(0, pos)) - 1;
                        m162 = int.Parse(ma13.Substring(pos + 1));
                    }
                }
            }
            catch { m161 = 4; m162 = 2; }
            return ma.IndexOf(sothe.Substring(m161, m162)) != -1;
        }
        //

        public string mathecu_95
        {
            get
            {
                try
                {
                    ds = get_data("select ten from " + user + ".thongso where id=442");
                    if (ds.Tables[0].Rows.Count == 0) return "GL+JL+HN+HL";
                    else return ds.Tables[0].Rows[0]["ten"].ToString();
                }
                catch
                {
                    return "GL+JL+HN+HL";
                }
            }
        }

        public int get_maphu(string sothe)
        {
            try
            {
                string ma13 = ma13_vitri.ToString(), ma16 = ma16_vitri.ToString();
                int m131 = 4, m132 = 1, m161 = 4, m162 = 2, pos = 0;
                try
                {
                    if (ma13 != "")
                    {
                        pos = ma13.IndexOf(",");
                        if (pos != -1)
                        {
                            m131 = int.Parse(ma13.Substring(0, pos)) - 1;
                            m132 = int.Parse(ma13.Substring(pos + 1));
                        }
                    }
                    if (ma16 != "")
                    {
                        pos = ma16.IndexOf(",");
                        if (pos != -1)
                        {
                            m161 = int.Parse(ma16.Substring(0, pos)) - 1;
                            m162 = int.Parse(ma16.Substring(pos + 1));
                        }
                    }
                }
                catch { m131 = 4; m132 = 1; m161 = 4; m162 = 2; }
                if (sothe.Trim().Length == 18 || sothe.Trim().Length == 13)
                {
                    string _mathecu_95 = mathecu_95;
                    return (_mathecu_95.IndexOf(sothe.Trim().Substring(m161, m162)) != -1) ? 2 : (get_ma16.IndexOf(sothe.Trim().Substring(m161, m162)) != -1) ? 1 : 0;
                }
                else if (sothe.Trim().Length == 16) //the cu truoc nam 2007
                    return 0;
                else
                    return (get_ma13.IndexOf(sothe.Trim().Substring(m131, m132)) != -1) ? 1 : (get_ma16_95.IndexOf(sothe.Trim().Substring(m131, m132)) != -1) ? 2 : 0;
            }
            catch { return 0; }
            //0: bhyt 100%
            //1: BHYT 80%
            //2 BHYT 95%
        }

        public decimal get_maql(string ngay, string mabn)
        {
            ds = get_data("select maql from " + user + mmyy(ngay) + ".tiepdon where mabn='" + mabn + "'" + " order by maql desc");
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }
        public string f_ngay
        {
            get
            {
                ds = get_data("select ten from " + user + ".thongso where id=-2");
                if (ds.Tables[0].Rows.Count > 0) return ds.Tables[0].Rows[0]["ten"].ToString().Trim();
                else return "dd/mm/yyyy";
            }
        }
        public string f_ngaygio
        {
            get
            {
                ds = get_data("select ten from " + user + ".thongso where id=-3");
                if (ds.Tables[0].Rows.Count > 0) return ds.Tables[0].Rows[0]["ten"].ToString().Trim();
                else return "dd/mm/yyyy hh24:mi";
            }
        }

        private string get_ma13 { get { return get_data("select ten from " + user + ".thongso where id=49").Tables[0].Rows[0][0].ToString(); } }
        private string get_ma16 { get { return get_data("select ten from " + user + ".thongso where id=50").Tables[0].Rows[0][0].ToString(); } }
        private string get_ma16_95 { get { return get_data("select ten from " + user + ".thongso where id=-50").Tables[0].Rows[0][0].ToString(); } }
        public bool bDanhmuc { get { return Thongso("c01") == "1"; } }
        public bool bMabd { get { return Thongso("c02") == "1"; } }
        public bool bPreview { get { return Thongso("c05") == "1"; } }
        public bool bDmbd { get { return Thongso("c06") == "1"; } }
        public int Ngaylv_Ngayht { get { return int.Parse(Thongso("c10")); } }
        public int Ngaylanh_Ngaytra { get { return int.Parse(Thongso("c22")); } }
        public bool bNhombc { get { return Thongso("c11") == "1"; } }
        public bool bNhomkt { get { return Thongso("c12") == "1"; } }
        public string Giamdoc(int nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=7 and nhom=" + nhom);
            if (ds.Tables[0].Rows.Count > 0) return ds.Tables[0].Rows[0]["ten"].ToString().Trim();
            else return "";
        }
        public string Phutrach(int nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=8 and nhom=" + nhom);
            if (ds.Tables[0].Rows.Count > 0) return ds.Tables[0].Rows[0]["ten"].ToString().Trim();
            else return "";
        }
        public string Thongke(int nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=9 and nhom=" + nhom);
            if (ds.Tables[0].Rows.Count > 0) return ds.Tables[0].Rows[0]["ten"].ToString().Trim();
            else return "";
        }
        public string Thukho(int nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=16 and nhom=" + nhom);
            if (ds.Tables[0].Rows.Count > 0) return ds.Tables[0].Rows[0]["ten"].ToString().Trim();
            else return "";
        }
        public string Ketoan(int nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=15 and nhom=" + nhom);
            if (ds.Tables[0].Rows.Count > 0) return ds.Tables[0].Rows[0]["ten"].ToString().Trim();
            else return "";
        }
        public string Ketoantruong(int nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=32 and nhom=" + nhom);
            if (ds.Tables[0].Rows.Count > 0) return ds.Tables[0].Rows[0]["ten"].ToString().Trim();
            else return "";
        }

        public int Ngay_in_phieu(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=44 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString());
            else return 1;
        }
        public bool bDongia(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=4 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bGiaban(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=14 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bQuanlynguon(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=17 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bQuanlynhomcc(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=18 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bQuanlyhandung(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=19 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bQuanlylosx(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=20 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bQuidoi(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=45 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bPrintDialog { get { return Thongso("c21") == "1"; } }
        public bool bHoatchat { get { return Thongso("c23") == "1"; } }
        public bool bHotennt { get { return Thongso("c24") == "1"; } }
        public bool bNamsinhnt { get { return Thongso("c25") == "1"; } }
        public bool bNhapmaso { get { return Thongso("c26") == "1"; } }
        public bool bSothe { get { return Thongso("c27") == "1"; } }
        public bool bLoclinh { get { return Thongso("c28") == "1"; } }
        public bool bLochoantra { get { return Thongso("c29") == "1"; } }
        public bool bLocbaohiem { get { return Thongso("c30") == "1"; } }
        public bool bLocngoaitru { get { return Thongso("c31") == "1"; } }
        public bool bLocxuatcstt { get { return Thongso("c37") == "1"; } }
        public bool bDutrumua_thangtruoc(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=33 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bBaobiem_makp { get { return Thongso("c34") == "1"; } }
        public bool bBaobiem_bacsi { get { return Thongso("c35") == "1"; } }
        public bool bBaohiem_icd { get { return Thongso("c36") == "1"; } }
        public bool bNgtru_khoa { get { return Thongso("c38") == "1"; } }
        public bool bNgtru_bacsi { get { return Thongso("c39") == "1"; } }
        public bool bNgtru_mabn { get { return Thongso("c40") == "1"; } }
        public bool bUserid { get { return Thongso("c41") == "1"; } }
        public bool bBbankiemso { get { return Thongso("c95") == "1"; } }
        public bool bNguoigiao { get { return Thongso("c96") == "1"; } }
        public bool bDinhkhoan { get { return Thongso("c97") == "1"; } }
        public bool bSort_mabd { get { return Thongso("c101") == "1"; } }
        public bool bSLYeucau(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=42 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bSLDuyet(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=43 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bSLDuyet_nho_yeucau(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=78 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bKhoaso(int d_nhom, string d_mmyy)
        {
            return get_data("select * from " + user + ".d_khoaso where nhom=" + d_nhom + " and mmyy='" + d_mmyy + "'").Tables[0].Rows.Count > 0;
        }

        public int bKiemtrasolieu(int d_nhom, string d_mmyy, int d_userid)
        {
            //m = new LibMedi.AccessData();
            if (!bMmyy(d_mmyy))
            {
                string mmyys = ngayhienhanh_server.Substring(3, 2) + ngayhienhanh_server.Substring(8, 2);
                int so = int.Parse(mmyys.Substring(0, 2)) - int.Parse(d_mmyy.Substring(0, 2));
                if (mmyys.Substring(2, 2) == d_mmyy.Substring(2, 2))
                {
                    if (Math.Abs(so) > 1)
                    {
                        System.Windows.Forms.MessageBox.Show("Tạo số liệu tháng " + d_mmyy.Substring(0, 2) + " năm 20" + d_mmyy.Substring(2, 2) + " không hợp lệ !", Msg);
                        return -1;
                    }
                }
                else
                {
                    if (Math.Abs(so) < 11)
                    {
                        System.Windows.Forms.MessageBox.Show("Tạo số liệu tháng " + d_mmyy.Substring(0, 2) + " năm 20" + d_mmyy.Substring(2, 2) + " không hợp lệ !", Msg);
                        return -1;
                    }
                }
                //try
                //{
                //    tao_schema(d_mmyy, d_userid);
                //}
                //catch (Exception ex)
                //{
                //    System.Windows.Forms.MessageBox.Show(ex.Message);
                //}
            }
            if (bMmyy(d_mmyy))
            {
                sql = "select a.makho from " + user + d_mmyy + ".d_tonkhoth a," + user + ".d_dmkho b where a.makho=b.id and b.hide=0 and  b.nhom=" + d_nhom;
                sql += " union all ";
                sql += "select a.makho from " + user + d_mmyy + ".d_tutructh a," + user + ".d_dmkho b where a.makho=b.id and b.hide=0 and b.nhom=" + d_nhom;
                return get_data(sql).Tables[0].Rows.Count;
            }
            else return 0;
        }

        public string get_dmkho(int loai)
        {
            try
            {
                return get_data("select kho from " + user + ".d_dmphieu where id=" + loai).Tables[0].Rows[0][0].ToString();
            }
            catch { return ""; }
        }

        public string get_dmkho_khoa(string m_makp)
        {
            try
            {
                string s_makho = "";
                DataSet lds = get_data("select makho from " + user + ".d_duockp where makp='" + m_makp + "'");
                foreach (DataRow r in lds.Tables[0].Rows)
                {
                    s_makho += r["makho"].ToString().Trim().Trim(',') + ",";
                }
                return s_makho;
            }
            catch { return ""; }

        }

        public string get_manguon(int loai)
        {
            try
            {
                return get_data("select nguon from " + user + ".d_dmphieu where id=" + loai).Tables[0].Rows[0][0].ToString();
            }
            catch { return ""; }
        }

        public string get_manguon_doituong(int madoituong)
        {
            try
            {
                return get_data("select nguon from " + user + ".d_doituong where madoituong=" + madoituong).Tables[0].Rows[0][0].ToString();
            }
            catch { return ""; }
        }

        public bool bBucstt_nguon(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=54 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bcstt_linh(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=60 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bcstt_haophi(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=61 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bMabn_bhyt(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=62 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bPhattron(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=63 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bLoc_bhyt(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=70 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bKho_ngoaitru(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=71 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bNhomin_mabd(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=72 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bChuyenkho_inrieng(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=73 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bPhieulinh_ngang(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=74 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bLocphieu_duyet(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=75 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bYlenh_cachdung(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=76 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bBaocao_dot(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=77 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bKiemtra_phat_thuhoi(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=80 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bNhom_nhapxuat(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=81 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bcongkham_bhyt(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=82 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public string thetrongtinh(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=83 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return "50";
            return ds.Tables[0].Rows[0][0].ToString();
        }

        public string thetrongtinh_vitri(int d_nhom)
        {
            string ret = "2,2";
            ds = get_data("select ten from " + user + ".d_thongso where id=84 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0)
            {
                ret = ds.Tables[0].Rows[0][0].ToString().Trim();
                int pos = ret.IndexOf(",");
                if (pos != -1)
                {
                    int p1 = int.Parse(ret.Substring(0, pos)) - 1;
                    int p2 = int.Parse(ret.Substring(pos + 1));
                    ret = p1.ToString() + "," + p2.ToString();
                }
            }
            return ret;
        }

        public string thetunguyen(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=120 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return "SS,RR,TT";
            return ds.Tables[0].Rows[0][0].ToString();
        }

        public string thetunguyen_vitri(int d_nhom)
        {
            string ret = "4,2";
            ds = get_data("select ten from " + user + ".d_thongso where id=121 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0)
            {
                ret = ds.Tables[0].Rows[0][0].ToString().Trim();
                int pos = ret.IndexOf(",");
                if (pos != -1)
                {
                    int p1 = int.Parse(ret.Substring(0, pos)) - 1;
                    int p2 = int.Parse(ret.Substring(pos + 1));
                    ret = p1.ToString() + "," + p2.ToString();
                }
            }
            return ret;
        }

        public string thetunguyen_vitri_ora(int d_nhom)
        {
            string ret = "5,2";
            ds = get_data("select ten from " + user + ".d_thongso where id=121 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0) ret = ds.Tables[0].Rows[0][0].ToString().Trim();
            return ret;
        }


        public bool bThongbao_bhyt(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=85 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bChandoan_bhyt(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=86 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bSotien_bhyt(int d_nhom)
        {
            return true;
        }

        public bool bKinhphi(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=88 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bPhieunhap_sophieu(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=89 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bXuatban_user(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=90 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bThekho_sophieu(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=91 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bTrucoso(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=92 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bInHangNuoc_Nhapxuat(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=93 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bChandoan_xuatban(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=94 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bDongia_thekho(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=98 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public int Ngay_toa_bhyt(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=99 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString());
            else return 1;
        }

        public bool bChenhlech_thuoc_dannhmuc
        {
            get
            {
                try
                {
                    DataSet ds = get_data("select ten from " + user + ".thongso where id=384");
                    return int.Parse(ds.Tables[0].Rows[0][0].ToString()) == 1;
                }
                catch { return true; }
            }
        }

        public int iNgaykiemke
        {
            get
            {
                int i_ngaykiemke = 0;
                ds = get_data("select distinct ten from " + user + ".d_thongso where id=105 and ten is not null");
                foreach (DataRow r in ds.Tables[0].Rows)
                {
                    if (i_ngaykiemke < int.Parse(r["ten"].ToString()))
                        i_ngaykiemke = int.Parse(r["ten"].ToString());
                }
                //if (ds.Tables[0].Rows.Count>0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString());
                //else return 7;
                if (i_ngaykiemke == 0) i_ngaykiemke = 7;
                return i_ngaykiemke;
            }
        }

        public bool bGia_bh_quydinh
        {
            get
            {
                try
                {
                    DataSet ds = get_data("select ten from " + user + ".thongso where id=347");
                    return ds.Tables[0].Rows[0][0].ToString() == "1";
                }
                catch { return false; }
            }
        }

        public bool bDoituong_Phieulinh(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=100 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bIndieutreem(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=102 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bInPhieuxuatban(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=103 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return true;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bMaso_ten(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=104 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bBacsy_xuatban(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=106 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bSophieunhap_tudong(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=107 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bSophieuxuat_tudong(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=154 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bDuyettoa_ketthuc(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=155 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bChuyenkham_congkham(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=156 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bDuyetcap_sotien(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=157 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bPhieulinh_dongia_losx_date(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=158 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bNhaptruocxuat(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=159 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return true;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bXuat_date(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=160 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public string dutrunam_nhomin(int d_nhom)
        {
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=161 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count == 0) return "";
                return ds.Tables[0].Rows[0][0].ToString().Trim();
            }
            catch { return ""; }
        }


        public int sothangdate(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=162 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            return int.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public bool bTrathuoc_xuatban(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=163 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public int songayduyet(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=164 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            return int.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public bool bDmtyleban(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=165 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bSophieu_theokho(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=137 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bInphieu_ngay(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=138 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bPhieunhap_ngay(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=139 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bPhieunhap_user(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=179 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bChietkhau(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=140 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public int soprocess(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=141 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 1;
            return Math.Max(1, int.Parse(ds.Tables[0].Rows[0][0].ToString()));
        }
        public int solaninphieulinh(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=177 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 3;
            return Math.Max(1, int.Parse(ds.Tables[0].Rows[0][0].ToString()));
        }

        public bool bChitra_ndot(int d_nhom)
        {
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=178 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }

        public bool bKhongkiemtraXuatthangsau(int d_nhom)
        {
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1001 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return true;
            }
            catch { return true; }
        }
        public bool bXuatkhac_chochondotxuat(int d_nhom)
        {
            //True: Duoc phep lua chon dot nhap de xuat
            //false: nhap truoc xuat truoc
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1002 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return true;
            }
            catch { return true; }
        }

        public bool bSophieu_mau38_tangtheonam(int d_nhom)
        {
            //True: Duoc phep lua chon dot nhap de xuat
            //false: nhap truoc xuat truoc
            //D7
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1003 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }

        public bool bSophieu_mau38_tangtheonam_tinhtuthang12(int d_nhom)
        {
            //True: Duoc phep lua chon dot nhap de xuat
            //false: nhap truoc xuat truoc
            //D7.1
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1012 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }

        public bool bSophieu_mau38_tangtheothang(int d_nhom)
        {
            //Tab4
            //True: Duoc phep lua chon dot nhap de xuat
            //false: nhap truoc xuat truoc
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1004 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }

        public bool bSophieu_mau38_tangtheothang_tinhtuthangtruoc(int d_nhom)
        {
            //D8.1
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1014 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }

        public bool bQuanly_xuatban_theomavach(int d_nhom)
        {
            //True: Duung ma vah doc tren hop thuoc--> de chon dung ngay sttt de xuat
            //false: nhap truoc xuat truoc
            //E06
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1015 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }
        public bool bLocphieu_bu_khiduyet(int d_nhom)
        {
            //True: Duung ma vah doc tren hop thuoc--> de chon dung ngay sttt de xuat
            //false: nhap truoc xuat truoc
            //E7
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1016 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return true;
            }
            catch { return true; }
        }

        public bool bkhongChoDuyetToaBNHen_E8(int d_nhom)
        {
            
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1031 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }

        public bool bChiAdminMoiDuocPhepHuyPhieuNhapKho_E9(int d_nhom)
        {

            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1032 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }
        public bool bNguoiduyet_nguoithuhoi(int d_nhom)
        {
            //True: Duoc phep lua chon dot nhap de xuat
            //false: nhap truoc xuat truoc
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1005 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return true; }
        }

        public bool bSuasoluong_khiduyetkhocap(int d_nhom)
        {
            //True: Duoc phep lua chon dot nhap de xuat
            //false: nhap truoc xuat truoc
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1006 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }
        public bool bKhoa_nhom_duocbv(int d_nhom)
        {
            //True: Khoa khong cho sua nhom duoc bv
            //false: 
            //tab 3
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1007 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return true;
            }
            catch { return true; }
        }
        public bool bThuchenhlechtruoc_duyettoasau(int d_nhom)
        {
            //tab5 - cot 1 - dong 1           

            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1009 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }

        }
        public bool bKhoa_phanloai(int d_nhom)
        {
            //True: Khoa khong cho sua phan loai
            //false: nhap truoc xuat truoc
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1008 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return true;
            }
            catch { return true; }
        }
        public bool bNhapkho_sotien_nhapVAT_1lan(int d_nhom)
        {
            //True: Khoa khong cho sua phan loai
            //false: nhap truoc xuat truoc
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1010 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return true;
            }
            catch { return true; }
        }

        public bool bDuocBV_Xuat_tinhnguoncungcap(int d_nhom)
        {
            //True: Khoa khong cho sua phan loai
            //false: nhap truoc xuat truoc
            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=1011 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }



        public bool bHuyxuatban_userthuoc_duocphep(int d_nhom)
        {

            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=601 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }

        public bool bXuatban_sua_trenluoi(int d_nhom)
        {

            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=602 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }
        /// <summary>
        /// Oprtion :D10
        /// </summary>
        /// <param name="d_nhom"></param>
        /// <returns></returns>
        public bool bPhaiThutienMoiHienDSchophatthuoc_d10(int d_nhom)
        {

            try
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=603 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
                else return false;
            }
            catch { return false; }
        }

        public bool bMabd_doituong(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=142 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bGiaban_noi_ngtru(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=143 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bIntheocstt(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=144 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bIncstt(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=145 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bCongkham_pl(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=146 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bNgayylenh_phieulinh(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=147 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bGiaban_danhmuc(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=148 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bGiamgia(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=149 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public string Stkgiamgia(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=150 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return "";
            return ds.Tables[0].Rows[0][0].ToString();
        }

        public bool bBienlai_sohieu(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=152 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bAuto_tonkho(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=153 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public int iSobanin(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=151 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 1;
            return int.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public bool bBienlai_nhathuoc(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=108 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public int iLanin_xuatban(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=109 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString());
            else return 3;
        }
        public bool bLockytu_traiphai(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=110 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bTinnhan(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=111 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bTinnhan_sound(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=166 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bChuky_phieu(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=167 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bInchiphi_chandoan_bacsy(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=168 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bTreole_duyetrieng(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=169 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
            else return false;
        }
        public bool bThuhoi_kiemtra_tutruc(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=170 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
            else return true;
        }

        public bool bChuakham_choduyet(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=171 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
            else return false;
        }

        public bool bBhyt_20_vp_phat(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=172 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
            else return false;
        }

        public bool bXuatban_vienphi(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=174 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
            else return false;
        }

        public bool bBhyt_admin(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=176 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["ten"].ToString()) == 1;
            else return true;
        }

        public string sDomain(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=112 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return System.Environment.UserDomainName;
            return ds.Tables[0].Rows[0][0].ToString().Trim();
        }
        public bool bThekho_congdon(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=113 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bKiemke_c14(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=114 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bNgoaitru_phieulinh(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=115 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bNhacc_dmbd(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=116 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public bool bInBHYT_nhomvp(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=117 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public string hinh_ttb(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=118 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return "..//..//..//hinh_ttb";
            return ds.Tables[0].Rows[0][0].ToString().Trim();
        }
        public bool bTru_tonao(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=119 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
        }
        public string kho_truao(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=173 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return "";
            else return ds.Tables[0].Rows[0][0].ToString();
        }

        public bool bCapnhat_tonkho(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=122 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
        }
        public bool bNoiNgoai_Nuoc(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=123 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
        }
        public bool bIncachdung_xuatban(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=124 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
        }
        public bool bBucstt_tronso(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=125 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
        }
        public bool bGiaban_theodot(int d_nhom)
        {
            if (Mabv.Substring(0, 3) == "701") return false;
            else
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=126 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count == 0) return false;
                return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
            }
        }
        public int iMavp_congkham(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=127 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            return int.Parse(ds.Tables[0].Rows[0][0].ToString().Trim());
        }
        public int iBhyt_inrieng(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=128 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            return int.Parse(ds.Tables[0].Rows[0][0].ToString().Trim());
        }

        public bool bChonloaiphieu_xuat(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=129 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
        }
        public bool bSophieu_nam(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=130 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
        }
        public bool bEdit_donthuoc(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=131 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
        }

        public bool bPhattron_congdondoituong(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=69 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bDutrucap_kho(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=64 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool bPhieulinh_dongia(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=65 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        public int bHoten_docGN(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=66 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=132 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count == 0) return 0;
                else return int.Parse(ds.Tables[0].Rows[0][0].ToString());
            }
        }
        public int bHoten_docHTT(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=67 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=133 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count == 0) return 0;
                else return int.Parse(ds.Tables[0].Rows[0][0].ToString());
            }
        }
        public int bHoten_docAB(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=68 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=134 and nhom=" + d_nhom);
                if (ds.Tables[0].Rows.Count == 0) return 0;
                else return int.Parse(ds.Tables[0].Rows[0][0].ToString());
            }
        }

        public int iKhotoithieu(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=135 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else return int.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public bool bKiemtra_duyet(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=136 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
        }

        public bool bQuyenso(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=46 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public decimal Congkham(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=47 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 3000;
            return (ds.Tables[0].Rows[0][0].ToString() == "") ? 0 : decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        //public string ma13_ngtru(int d_nhom)
        //{
        //    ds = get_data("select ten from " + user + ".d_thongso where id=48 and nhom=" + d_nhom);
        //    if (ds.Tables[0].Rows.Count == 0) return "";
        //    return ds.Tables[0].Rows[0][0].ToString().Trim();
        //}

        public string ma16_ngtru(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=49 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return "";
            return ds.Tables[0].Rows[0][0].ToString().Trim();
        }

        public decimal ma13_st(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=50 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 97500;
            return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public decimal ma16_st(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=51 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 97500;
            return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public string ma13_vitri
        {
            get
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=52");
                if (ds.Tables[0].Rows.Count == 0) return "5,1";
                return ds.Tables[0].Rows[0][0].ToString().Trim();
            }
        }

        public string ma16_vitri
        {
            get
            {
                ds = get_data("select ten from " + user + ".d_thongso where id=53");
                if (ds.Tables[0].Rows.Count == 0) return "5,2";
                return ds.Tables[0].Rows[0][0].ToString().Trim();
            }
        }

        //id=55: true: Thuoc NOI/Ngoai phan biet theo Hang sx; false: theo dm phan loai
        public bool bNoiNgoai_Hang(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=55 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }
        //lay so le
        public int d_soluong_le(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=57 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 2;
            return int.Parse(ds.Tables[0].Rows[0][0].ToString());
        }
        public int d_giaban_le(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=79 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            return int.Parse(ds.Tables[0].Rows[0][0].ToString());
        }
        public int d_dongia_le(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=58 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 2;
            return int.Parse(ds.Tables[0].Rows[0][0].ToString());
        }
        public int d_thanhtien_le(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=59 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return 2;
            return int.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public string format_sotien(int d_nhom)
        {
            string ret = "###,###,###,##0";
            int n = d_thanhtien_le(d_nhom);
            if (n > 0) ret += ".";
            for (int i = 0; i < n; i++) ret += "0";
            return ret;
        }

        public string format_soluong(int d_nhom)
        {
            string ret = "###,###,###,##0";
            int n = d_soluong_le(d_nhom);
            if (n > 0) ret += ".";
            for (int i = 0; i < n; i++) ret += "0";
            return ret;
        }

        public string format_giaban(int d_nhom)
        {
            string ret = "###,###,###,##0";
            int n = d_giaban_le(d_nhom);
            if (n > 0) ret += ".";
            for (int i = 0; i < n; i++) ret += "0";
            return ret;
        }

        public string format_dongia(int d_nhom)
        {
            string ret = "###,###,###,##0";
            int n = d_dongia_le(d_nhom);
            if (n > 0) ret += ".";
            for (int i = 0; i < n; i++) ret += "0";
            return ret;
        }
        public string format_dongia_sole(int d_sole)
        {
            string ret = "###,###,###,##0";
            int n = d_sole;
            if (n > 0) ret += ".";
            for (int i = 0; i < n; i++) ret += "0";
            return ret;
        }

        public bool get_data_mmyy_dec(string str, string tu, string den, bool khoangcach)
        {
            DateTime dt1 = (khoangcach) ? StringToDate(tu).AddDays(-iNgaykiemke) : StringToDate(tu);
            DateTime dt2 = (khoangcach) ? StringToDate(den).AddDays(iNgaykiemke) : StringToDate(den);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            string nam = "", mmyy = "";
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(mmyy)) nam += mmyy + "+";
                }
            }
            return get_data_nam_dec(nam, str).Tables[0].Rows.Count > 0;
        }

        public DataSet get_data_mmyy(string str, string tu, string den, bool khoangcach)
        {
            DataSet tmp = new DataSet();
            DateTime dt1 = (khoangcach) ? StringToDate(tu).AddDays(-iNgaykiemke) : StringToDate(tu);
            DateTime dt2 = (khoangcach) ? StringToDate(den).AddDays(iNgaykiemke) : StringToDate(den);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            string mmyy = "", sql1 = "";
            bool be = true;
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(mmyy))
                    {
                        sql1 = str.Replace("xxx", user + mmyy);
                        if (be)
                        {
                            tmp = get_data(sql1);
                            be = false;
                        }
                        else tmp.Merge(get_data(sql1));
                    }
                }
            }
            return tmp;
        }

        public DataSet get_data_mmyy(string str, string tu, string den, int iNgaykiemke)
        {
            DataSet tmp = new DataSet();
            DateTime dt1 = (iNgaykiemke != 0) ? StringToDate(tu).AddDays(-iNgaykiemke) : StringToDate(tu);
            DateTime dt2 = (iNgaykiemke != 0) ? StringToDate(den).AddDays(iNgaykiemke) : StringToDate(den);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            string mmyy = "";
            bool be = true;
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(mmyy))
                    {
                        sql = str.Replace("xxx", user + mmyy);
                        if (be)
                        {
                            tmp = get_data(sql);
                            be = false;
                        }
                        else tmp.Merge(get_data(sql));
                    }
                }
            }
            return tmp;
        }

        public DataSet get_data(string asql)
        {
            DataSet ds1 = new DataSet();
            try
            {
                if (ds1 != null)
                {
                    ds1.Dispose();
                    ds1 = null;
                }
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                ds1 = new DataSet();

                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(asql, con);
                cmd.CommandType = CommandType.Text;
                dest = new NpgsqlDataAdapter(cmd);
                dest.Fill(ds1);
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(asql + "-" + ex.Message.ToString().Trim(), sComputer, "?");
            }
            return ds1;
        }

        public string Change_Title(string s_title)
        {
            if (s_title.Trim() == "") return s_title.Trim();
            string[] a_title;
            char[] achar = new char[] { ' ' };
            a_title = s_title.Trim().Split(achar);
            string b_Title = "";
            for (int i = 0; i < a_title.GetLength(0); i++)
            {
                string s = a_title[i].Trim();
                if (s != "")
                    b_Title = (b_Title == "") ? s.Substring(0, 1).ToUpper() + s.Substring(1) : b_Title + " " + s.Substring(0, 1).ToUpper() + s.Substring(1);
            }
            return b_Title;
        }

        public void execute_data_mmyy(string str, string tu, string den, bool khoangcach)
        {
            //tu = "20/04/2012";
            DateTime dt1 = (khoangcach) ? StringToDate(tu).AddDays(-iNgaykiemke) : StringToDate(tu);
            DateTime dt2 = (khoangcach) ? StringToDate(den).AddDays(iNgaykiemke) : StringToDate(den);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            string mmyy = "";
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(mmyy))
                    {
                        sql = str.Replace("xxx", user + mmyy);
                        execute_data(sql);
                    }
                }
            }
        }

        public void execute_data_mmyy(string str, string tu, string den, int iNgaykiemke)
        {
            DateTime dt1 = (iNgaykiemke != 0) ? StringToDate(tu).AddDays(-iNgaykiemke) : StringToDate(tu);
            DateTime dt2 = (iNgaykiemke != 0) ? StringToDate(den).AddDays(iNgaykiemke) : StringToDate(den);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            string mmyy = "";
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(mmyy))
                    {
                        sql = str.Replace("xxx", user + mmyy);
                        execute_data(sql);
                    }
                }
            }
        }

        public void execute_data(string sql)
        {
            try
            {
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "?");
            }
        }

        public void execute_data(string sql, bool bLuu_error)
        {
            try
            {
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            catch (NpgsqlException ex)
            {
                if (bLuu_error) upd_error(ex.Message.ToString().Trim(), sComputer, "?");
            }
        }

        public int execute_data_efect(string sql)
        {
            int i_effect = 0;
            try
            {
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                i_effect = cmd.ExecuteNonQuery();
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "?");
            }
            return i_effect;
        }

        public void delrec(DataTable dt, string exp)
        {
            try
            {
                DataRow[] r = dt.Select(exp);
                for (int i = 0; i < r.Length; i++) r[i].Delete();
            }
            catch { }
        }

        public DataRow getrowbyid(DataTable dt, string exp)
        {
            try
            {
                DataRow[] r = dt.Select(exp);
                return r[0];
            }
            catch { return null; }
        }

        public void upd_error(string m_message, string m_computer, string m_table)
        {
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            string asql = "insert into " + user + ".d_error(message,computer,tables) values (:m_message,:m_computer,:m_table)";
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(asql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_message", NpgsqlDbType.Text).Value = m_message;
                cmd.Parameters.Add("m_computer", NpgsqlDbType.Varchar, 20).Value = m_computer;
                cmd.Parameters.Add("m_table", NpgsqlDbType.Varchar, 20).Value = m_table;
                cmd.ExecuteNonQuery();
            }
            catch { }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
        }

        public void upd_error(string m_mmyy, string m_message, string m_computer, string m_table)
        {
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            string asql = "insert into " + user + m_mmyy + ".d_error(message,computer,tables) values (:m_message,:m_computer,:m_table)";
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(asql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_message", NpgsqlDbType.Text).Value = m_message;
                cmd.Parameters.Add("m_computer", NpgsqlDbType.Varchar, 20).Value = m_computer;
                cmd.Parameters.Add("m_table", NpgsqlDbType.Varchar, 20).Value = m_table;
                cmd.ExecuteNonQuery();
            }
            catch { }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
        }

        public void updrec_chandoan(DataTable dt, string maicd, string chandoan)
        {
            string exp = "maicd='" + maicd + "'";
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["maicd"] = maicd;
                nrow["chandoan"] = chandoan;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["chandoan"] = chandoan;
            }
        }

        public void updrec(DataTable dt, decimal id, string userid, string password, string right, int nhomkho, string makho, string makp)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["userid"] = userid;
                nrow["password_"] = password;
                nrow["right_"] = right;
                nrow["nhomkho"] = nhomkho;
                nrow["makho"] = makho;
                nrow["makp"] = makp;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["right_"] = right;
            }
        }

        public void updrec_right(DataTable dt, decimal id, string right)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow[0] = id;
                nrow[4] = right;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0][4] = right;
            }
        }

        public void updrec_thekho(DataTable dt, int mabd, string ma, string ten, string tenhc, string dang, string tenhang, decimal soluong, decimal stt)
        {
            string exp = "mabd=" + mabd;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenhang"] = tenhang;
                nrow["toncuoi"] = soluong;
                nrow["stt"] = stt;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                //if (dr.Length>0) dr[0]["toncuoi"] = decimal.Parse(dr[0]["toncuoi"].ToString())+soluong; //gam 19/09/2011 comment vi neu xem the kho nhieu thang ton cuoi = ton cuoi nhieu thang cong lai => sai so lieu 
                if (dr.Length > 0) dr[0]["toncuoi"] = soluong;
            }
        }

        public void updrec_nhapslll(DataTable dt, decimal id, string sophieu, string ngaysp, string sohd, string ngayhd, string nguoigiao, int madv, int makho)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["sophieu"] = sophieu;
                nrow["ngaysp"] = ngaysp;
                nrow["sohd"] = sohd;
                nrow["ngayhd"] = ngayhd;
                nrow["nguoigiao"] = nguoigiao;
                nrow["madv"] = madv;
                nrow["makho"] = makho;
                nrow["done"] = 0;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["sophieu"] = sophieu;
                dr[0]["ngaysp"] = ngaysp;
                dr[0]["sohd"] = sohd;
                dr[0]["ngayhd"] = ngayhd;
                dr[0]["nguoigiao"] = nguoigiao;
                dr[0]["madv"] = madv;
                dr[0]["makho"] = makho;
            }
        }

        public void updrec_nhapslct(DataTable dt, decimal stt, int mabd, string ma, string ten, string tenhc, string dang, string handung, string losx, decimal soluong, decimal sl1, decimal sl2)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["sl1"] = sl1;
                nrow["sl2"] = sl2;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["sl1"] = sl1;
                dr[0]["sl2"] = sl2;
            }
        }

        public void updrec_nhapll(DataTable dt, decimal id, string sophieu, string ngaysp, string sohd, string ngayhd, string bbkiem, string ngaykiem, string nguoigiao, int madv, int makho, int manguon, string no, string co, int lydo, decimal chietkhau)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["sophieu"] = sophieu;
                nrow["ngaysp"] = ngaysp;
                nrow["sohd"] = sohd;
                nrow["ngayhd"] = ngayhd;
                nrow["bbkiem"] = bbkiem;
                nrow["ngaykiem"] = ngaykiem;
                nrow["nguoigiao"] = nguoigiao;
                nrow["madv"] = madv;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["no"] = no;
                nrow["co"] = co;
                nrow["lydo"] = lydo;
                nrow["chietkhau"] = chietkhau;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["sophieu"] = sophieu;
                dr[0]["ngaysp"] = ngaysp;
                dr[0]["sohd"] = sohd;
                dr[0]["ngayhd"] = ngayhd;
                dr[0]["bbkiem"] = bbkiem;
                dr[0]["ngaykiem"] = ngaykiem;
                dr[0]["nguoigiao"] = nguoigiao;
                dr[0]["madv"] = madv;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["no"] = no;
                dr[0]["co"] = co;
                dr[0]["lydo"] = lydo;
                dr[0]["chietkhau"] = chietkhau;
            }
        }
        public void updrec_nhapct(DataTable dt, decimal stt, int mabd, string ma, string ten, string tenhc, string dang, string handung, string losx, decimal soluong,
            decimal dongia, decimal sotien, int vat, decimal sotienvat, decimal giaban, decimal giamua, decimal sl1, decimal sl2, decimal tyle,
            decimal cuocvc, decimal chaythu, decimal namsx, string tailieu, int baohanh, int nguongoc, int tinhtrang, string sothe, decimal giabancu,
            decimal giamuacu, decimal giaban2, decimal tyle2, decimal tyle_ggia, decimal st_ggia, decimal tongtien)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["vat"] = vat;
                nrow["sotienvat"] = sotienvat;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["sl1"] = sl1;
                nrow["sl2"] = sl2;
                nrow["tyle"] = tyle;
                nrow["cuocvc"] = cuocvc;
                nrow["chaythu"] = chaythu;
                nrow["namsx"] = namsx;
                nrow["tailieu"] = tailieu;
                nrow["baohanh"] = baohanh;
                nrow["nguongoc"] = nguongoc;
                nrow["tinhtrang"] = tinhtrang;
                nrow["sothe"] = sothe;
                nrow["giabancu"] = giabancu;
                nrow["giamuacu"] = giamuacu;
                nrow["giaban2"] = giaban2;
                nrow["tyle2"] = tyle2;
                nrow["tyle_ggia"] = tyle_ggia;
                nrow["st_ggia"] = st_ggia;
                nrow["tongtien"] = tongtien;
                //nrow["haohut"] = tylehaohut;
                //nrow["giahaohut"] = giadahaohut;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["vat"] = vat;
                dr[0]["sotienvat"] = sotienvat;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["sl1"] = sl1;
                dr[0]["sl2"] = sl2;
                dr[0]["tyle"] = tyle;
                dr[0]["cuocvc"] = cuocvc;
                dr[0]["chaythu"] = chaythu;
                dr[0]["namsx"] = namsx;
                dr[0]["tailieu"] = tailieu;
                dr[0]["baohanh"] = baohanh;
                dr[0]["nguongoc"] = nguongoc;
                dr[0]["tinhtrang"] = tinhtrang;
                dr[0]["sothe"] = sothe;
                dr[0]["giabancu"] = giabancu;
                dr[0]["giamuacu"] = giamuacu;
                dr[0]["giaban2"] = giaban2;
                dr[0]["tyle2"] = tyle2;
                dr[0]["tyle_ggia"] = tyle_ggia;
                dr[0]["st_ggia"] = st_ggia;
                dr[0]["tongtien"] = tongtien;
                //dr[0]["haohut"] = tylehaohut;
                //dr[0]["giahaohut"] = giadahaohut;
            }
        }

        public void updrec_nhapct(DataTable dt, decimal stt, int mabd, string ma, string ten, string tenhc, string dang, string handung, string losx, decimal soluong,
            decimal dongia, decimal sotien, int vat, decimal sotienvat, decimal giaban, decimal giamua, decimal sl1, decimal sl2, decimal tyle,
            decimal cuocvc, decimal chaythu, decimal namsx, string tailieu, int baohanh, int nguongoc, int tinhtrang, string sothe, decimal giabancu, 
            decimal giamuacu, decimal giaban2, decimal tyle2, decimal tyle_ggia, decimal st_ggia, decimal tongtien,decimal tylehaohut,decimal giadahaohut,string sodangky)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["vat"] = vat;
                nrow["sotienvat"] = sotienvat;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["sl1"] = sl1;
                nrow["sl2"] = sl2;
                nrow["tyle"] = tyle;
                nrow["cuocvc"] = cuocvc;
                nrow["chaythu"] = chaythu;
                nrow["namsx"] = namsx;
                nrow["tailieu"] = tailieu;
                nrow["baohanh"] = baohanh;
                nrow["nguongoc"] = nguongoc;
                nrow["tinhtrang"] = tinhtrang;
                nrow["sothe"] = sothe;
                nrow["giabancu"] = giabancu;
                nrow["giamuacu"] = giamuacu;
                nrow["giaban2"] = giaban2;
                nrow["tyle2"] = tyle2;
                nrow["tyle_ggia"] = tyle_ggia;
                nrow["st_ggia"] = st_ggia;
                nrow["tongtien"] = tongtien;
                nrow["haohut"] = tylehaohut;
                nrow["giahaohut"] = giadahaohut;
                nrow["sodangky"] = sodangky;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["vat"] = vat;
                dr[0]["sotienvat"] = sotienvat;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["sl1"] = sl1;
                dr[0]["sl2"] = sl2;
                dr[0]["tyle"] = tyle;
                dr[0]["cuocvc"] = cuocvc;
                dr[0]["chaythu"] = chaythu;
                dr[0]["namsx"] = namsx;
                dr[0]["tailieu"] = tailieu;
                dr[0]["baohanh"] = baohanh;
                dr[0]["nguongoc"] = nguongoc;
                dr[0]["tinhtrang"] = tinhtrang;
                dr[0]["sothe"] = sothe;
                dr[0]["giabancu"] = giabancu;
                dr[0]["giamuacu"] = giamuacu;
                dr[0]["giaban2"] = giaban2;
                dr[0]["tyle2"] = tyle2;
                dr[0]["tyle_ggia"] = tyle_ggia;
                dr[0]["st_ggia"] = st_ggia;
                dr[0]["tongtien"] = tongtien;
                dr[0]["haohut"] = tylehaohut;
                dr[0]["giahaohut"] = giadahaohut;
                dr[0]["sodangky"] = sodangky;
            }
        }

        public void updrec_nhapct_QLThuocMuaThau(DataTable dt, decimal stt, int mabd, string ma, string ten, string tenhc, string dang, string handung, string losx, decimal soluong,
            decimal dongia, decimal sotien, int vat, decimal sotienvat, decimal giaban, decimal giamua, decimal sl1, decimal sl2, decimal tyle,
            decimal cuocvc, decimal chaythu, decimal namsx, string tailieu, int baohanh, int nguongoc, int tinhtrang, string sothe, decimal giabancu,
            decimal giamuacu, decimal giaban2, decimal tyle2, decimal tyle_ggia, decimal st_ggia, decimal tongtien, decimal tylehaohut, decimal giadahaohut,int muathau,string sodangky)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["vat"] = vat;
                nrow["sotienvat"] = sotienvat;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["sl1"] = sl1;
                nrow["sl2"] = sl2;
                nrow["tyle"] = tyle;
                nrow["cuocvc"] = cuocvc;
                nrow["chaythu"] = chaythu;
                nrow["namsx"] = namsx;
                nrow["tailieu"] = tailieu;
                nrow["baohanh"] = baohanh;
                nrow["nguongoc"] = nguongoc;
                nrow["tinhtrang"] = tinhtrang;
                nrow["sothe"] = sothe;
                nrow["giabancu"] = giabancu;
                nrow["giamuacu"] = giamuacu;
                nrow["giaban2"] = giaban2;
                nrow["tyle2"] = tyle2;
                nrow["tyle_ggia"] = tyle_ggia;
                nrow["st_ggia"] = st_ggia;
                nrow["tongtien"] = tongtien;
                nrow["haohut"] = tylehaohut;
                nrow["giahaohut"] = giadahaohut;
                nrow["muathau"] = muathau;
                nrow["sodangky"] = sodangky;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["vat"] = vat;
                dr[0]["sotienvat"] = sotienvat;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["sl1"] = sl1;
                dr[0]["sl2"] = sl2;
                dr[0]["tyle"] = tyle;
                dr[0]["cuocvc"] = cuocvc;
                dr[0]["chaythu"] = chaythu;
                dr[0]["namsx"] = namsx;
                dr[0]["tailieu"] = tailieu;
                dr[0]["baohanh"] = baohanh;
                dr[0]["nguongoc"] = nguongoc;
                dr[0]["tinhtrang"] = tinhtrang;
                dr[0]["sothe"] = sothe;
                dr[0]["giabancu"] = giabancu;
                dr[0]["giamuacu"] = giamuacu;
                dr[0]["giaban2"] = giaban2;
                dr[0]["tyle2"] = tyle2;
                dr[0]["tyle_ggia"] = tyle_ggia;
                dr[0]["st_ggia"] = st_ggia;
                dr[0]["tongtien"] = tongtien;
                dr[0]["haohut"] = tylehaohut;
                dr[0]["giahaohut"] = giadahaohut;
                dr[0]["muathau"] = muathau;
                dr[0]["sodangky"] = sodangky;
            }
        }

        public void updrec_nhapct_qlnguonthuoc(DataTable dt, decimal stt, int mabd, string ma, string ten, string tenhc, string dang, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, int vat, decimal sotienvat, decimal giaban, decimal giamua, decimal sl1, decimal sl2, decimal tyle, decimal cuocvc, decimal chaythu, string namsx, string tailieu, int baohanh, int nguongoc, int tinhtrang, string sothe, decimal giabancu, decimal giamuacu, decimal giaban2, decimal tyle2, decimal tyle_ggia, decimal st_ggia, decimal tongtien,string tc_chatluong,string hansudung,decimal haohut,decimal giadahaohut,string sodangky)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["vat"] = vat;
                nrow["sotienvat"] = sotienvat;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["sl1"] = sl1;
                nrow["sl2"] = sl2;
                nrow["tyle"] = tyle;
                nrow["cuocvc"] = cuocvc;
                nrow["chaythu"] = chaythu;
                nrow["namsx"] = namsx;
                nrow["tailieu"] = tailieu;
                nrow["baohanh"] = baohanh;
                nrow["nguongoc"] = nguongoc;
                nrow["tinhtrang"] = tinhtrang;
                nrow["sothe"] = sothe;
                nrow["giabancu"] = giabancu;
                nrow["giamuacu"] = giamuacu;
                nrow["giaban2"] = giaban2;
                nrow["tyle2"] = tyle2;
                nrow["tyle_ggia"] = tyle_ggia;
                nrow["st_ggia"] = st_ggia;
                nrow["tongtien"] = tongtien;
                nrow["tc_chatluong"] = tc_chatluong;
                nrow["hansudung"] = hansudung;
                nrow["haohut"] = haohut;
                nrow["giahaohut"] = giadahaohut;
                nrow["sodangky"] = sodangky;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["vat"] = vat;
                dr[0]["sotienvat"] = sotienvat;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["sl1"] = sl1;
                dr[0]["sl2"] = sl2;
                dr[0]["tyle"] = tyle;
                dr[0]["cuocvc"] = cuocvc;
                dr[0]["chaythu"] = chaythu;
                dr[0]["namsx"] = namsx;
                dr[0]["tailieu"] = tailieu;
                dr[0]["baohanh"] = baohanh;
                dr[0]["nguongoc"] = nguongoc;
                dr[0]["tinhtrang"] = tinhtrang;
                dr[0]["sothe"] = sothe;
                dr[0]["giabancu"] = giabancu;
                dr[0]["giamuacu"] = giamuacu;
                dr[0]["giaban2"] = giaban2;
                dr[0]["tyle2"] = tyle2;
                dr[0]["tyle_ggia"] = tyle_ggia; 
                dr[0]["st_ggia"] = st_ggia;
                dr[0]["tongtien"] = tongtien;
                dr[0]["tc_chatluong"] = tc_chatluong;
                dr[0]["hansudung"] = hansudung;
                dr[0]["haohut"] = haohut;
                dr[0]["giahaohut"] = giadahaohut;
                dr[0]["sodangky"] = sodangky;
            }
        }

        public void updrec_xuatll(DataTable dt, decimal id, string sophieu, string ngay, int khox, int khon, string lydo,string nguoinhan)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["sophieu"] = sophieu;
                nrow["ngay"] = ngay;
                nrow["khox"] = khox;
                nrow["khon"] = khon;
                nrow["lydo"] = lydo;
                nrow["nguoinhan"] = nguoinhan;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["sophieu"] = sophieu;
                dr[0]["ngay"] = ngay;
                dr[0]["khox"] = khox;
                dr[0]["khon"] = khon;
                dr[0]["lydo"] = lydo;
                dr[0]["nguoinhan"] = nguoinhan;
            }
        }

        public void updrec_dutrucapll(DataTable dt, decimal id, string sophieu, string ngay, int khox, int khon)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["sophieu"] = sophieu;
                nrow["ngay"] = ngay;
                nrow["khox"] = khox;
                nrow["khon"] = khon;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["sophieu"] = sophieu;
                dr[0]["ngay"] = ngay;
                dr[0]["khox"] = khox;
                dr[0]["khon"] = khon;
            }
        }

        public void updrec_dutrucapct(DataTable dt, int mabd, string ma, string ten, string tenhc, string dang, string tennguon, decimal soluong, int manguon, DataTable dtton)
        {
            string exp = "mabd=" + mabd + " and manguon=" + manguon;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tennguon"] = tennguon;
                nrow["soluong"] = soluong;
                nrow["manguon"] = manguon;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, mabd, manguon, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, mabd, manguon, soluong, "-");
                }
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tennguon"] = tennguon;
                dr[0]["soluong"] = soluong;
                dr[0]["manguon"] = manguon;
            }
        }

        public void updrec_tonkhoct_ncc(DataTable dt, decimal sttt, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("sttt=" + sttt);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_xuatct_ncc(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, int manguon, int nhomcc, string sothe, string mabs, string tenbs, string hotenbn, DataTable dtton)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["sothe"] = sothe;
                nrow["mabs"] = mabs;
                nrow["tenbs"] = tenbs;
                nrow["hotenbn"] = hotenbn;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkhoct_ncc(dtton, sttt, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkhoct_ncc(dtton, sttt, sl, "+");
                    updrec_tonkhoct_ncc(dtton, sttt, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["sothe"] = sothe;
                dr[0]["mabs"] = mabs;
                dr[0]["tenbs"] = tenbs;
                dr[0]["hotenbn"] = hotenbn;
            }
        }

        public decimal get_slton_tonkhoct(DataTable dt, decimal sttt, decimal soluong)
        {
            DataRow r = getrowbyid(dt, "sttt='" + sttt+"'");
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public void updrec_xuatct(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, int manguon, int nhomcc, string sothe, string mabs, string tenbs, string hotenbn, DataTable dtton)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["sothe"] = sothe;
                nrow["mabs"] = mabs;
                nrow["tenbs"] = tenbs;
                nrow["hotenbn"] = hotenbn;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, mabd, manguon, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["sothe"] = sothe;
                dr[0]["mabs"] = mabs;
                dr[0]["tenbs"] = tenbs;
                dr[0]["hotenbn"] = hotenbn;
            }
        }
        public void updrec_xuatct(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, int manguon, int nhomcc, string sothe, string mabs, string tenbs, string hotenbn, DataTable dtton, int makho, int nhom)
        {
            // gam 28-05-2011
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["sothe"] = sothe;
                nrow["mabs"] = mabs;
                nrow["tenbs"] = tenbs;
                nrow["hotenbn"] = hotenbn;
                //nrow["makho"] = makho;//Tu
                dt.Rows.Add(nrow);
                if (dtton != null && !bQuanly_xuatban_theomavach(nhom)) updrec_tonkho_nguon(dtton, mabd, manguon, soluong, "-");
                else if (dtton != null && bQuanly_xuatban_theomavach(nhom)) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, sttt, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    if (dtton != null && !bQuanly_xuatban_theomavach(nhom))
                    {
                        updrec_tonkho_nguon(dtton, mabd, manguon, sl, "+");
                        updrec_tonkho_nguon(dtton, mabd, manguon, soluong, "-");
                    }
                    else if (dtton != null && bQuanly_xuatban_theomavach(nhom))
                    {
                        updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, sttt, "+");
                        updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, sttt, "-");
                    }
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["sothe"] = sothe;
                dr[0]["mabs"] = mabs;
                dr[0]["tenbs"] = tenbs;
                dr[0]["hotenbn"] = hotenbn;
                //  dr[0]["makho"] = makho;//Tu
            }
        }

        //Phuoc
        public void updrec_xuatct(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, int manguon, decimal nhomcc, string sothe, string mabs, string tenbs, string hotenbn, DataTable dtton, int makho, int nhom, decimal slton, string mavach, string vat)
        {
            // gam 28-05-2011
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["sothe"] = sothe;
                nrow["mabs"] = mabs;
                nrow["tenbs"] = tenbs;
                nrow["hotenbn"] = hotenbn;
                try
                {
                    nrow["mavach"] = (mavach == "" ? 0 : decimal.Parse(mavach));
                    nrow["slton"] = slton;
                    nrow["vat"] = (vat == "" ? 0 : decimal.Parse(vat));
                }
                catch { }

                //nrow["makho"] = makho;//Tu
                dt.Rows.Add(nrow);
                //if (dtton != null && !bQuanly_xuatban_theomavach(nhom)) 
                updrec_tonkho_nguon(dtton, mabd, manguon, soluong, "-");
                //else if (dtton != null && bQuanly_xuatban_theomavach(nhom)) 
                //    updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, sttt, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    if (dtton != null && !bQuanly_xuatban_theomavach(nhom))
                    {
                        updrec_tonkho_nguon(dtton, mabd, manguon, sl, "+");
                        updrec_tonkho_nguon(dtton, mabd, manguon, soluong, "-");
                    }
                    else if (dtton != null && bQuanly_xuatban_theomavach(nhom))
                    {
                        updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, sttt, "+");
                        updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, sttt, "-");
                    }
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["sothe"] = sothe;
                dr[0]["mabs"] = mabs;
                dr[0]["tenbs"] = tenbs;
                dr[0]["hotenbn"] = hotenbn;
                try
                {
                    dr[0]["mavach"] = (mavach == "" ? "0" : mavach);
                    dr[0]["slton"] = slton;
                    dr[0]["vat"] = vat;
                }
                catch (Exception ex) { string s = ex.ToString(); }
                //  dr[0]["makho"] = makho;//Tu
            }
        }
        //phuoc

        //phuoc
        // Hien Xuat theo ma vach 10092011
        public void upd_tonkhoct_xuatct_mavach(string tt, string mmyy, string loai, int khox, int khon, decimal stt, int manguon, int nhomcc, int mabd, string handung, string losx, decimal soluong, decimal sotien, decimal giaban, decimal giamua, bool bMavach)
        {
            if (tt == delete)
            {
                if (loai == "CK" || loai == "BS" || loai == "XK" || loai == "LC" || loai == "XC" || loai == "CN")//linh lc
                {
                    if (bMavach)
                    {
                        execute_data("update " + user + mmyy + ".d_tonkhoct set slxuatmv=slxuatmv-(" + soluong + ") where makho=" + khox + " and stt=" + stt);
                        upd_tonkhoth(tt, mmyy, khox, mabd, manguon, soluong, "slxuatmv");
                    }
                    else
                    {
                        execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat-(" + soluong + ") where makho=" + khox + " and stt=" + stt);
                        upd_tonkhoth(tt, mmyy, khox, mabd, manguon, soluong, "slxuat");
                    }
                }
                else if (loai == "TH" || loai == "HT")
                {
                    execute_data("update " + user + mmyy + ".d_tutrucct set slxuatmv=slxuatmv-(" + soluong + ") where makp=" + khox + " and makho=" + khon + " and stt=" + stt);
                    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slxuatmv");
                }
                else if (loai == "TT")//Tu:20/07/2011 xuat chuyen tu truc nay sang tu truc khac loai="TT"
                {
                    //tu truc xuat
                    execute_data("update " + user + mmyy + ".d_tutrucct set slxuat=slxuat-(" + soluong + ") where makp=" + khox + " and makho=" + khon + " and stt=" + stt);
                    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slxuat");
                }//end Tu
                if (loai == "TH" || loai == "HT" || loai == "NC")//linh :nc//loai == "CK" ||
                {
                    execute_data("update " + user + mmyy + ".d_tonkhoct set slnhap=slnhap-(" + soluong + ")	where makho=" + khon + " and stt=" + stt);
                    upd_tonkhoth(tt, mmyy, khon, mabd, manguon, soluong, "slnhap");
                }
                else if (loai == "BS")
                {
                    //if (bMavach)
                    //{
                    execute_data("update " + user + mmyy + ".d_tutrucct set slnhap=slnhap-(" + soluong + ")	where makp=" + khon + " and makho=" + khox + " and stt=" + stt);
                    upd_tutructh(tt, mmyy, khon, khox, mabd, manguon, soluong, "slnhap");
                    //}
                }
                else if (loai == "CK")
                {
                    //if (bMavach)
                    //{
                    execute_data("update " + user + mmyy + ".d_tonkhoct set slnhap=slnhap-(" + soluong + ")	where makho=" + khon + " and stt=" + stt);
                    upd_tonkhoth(tt, mmyy, khon, mabd, manguon, soluong, "slnhap");
                    //}
                }
                //else if (loai == "TT")
                //{
                //    //tu truc xuat
                //    execute_data("update " + user + mmyy + ".d_tutrucct set slxuat=slxuat-(" + soluong + ")	where makp=" + khon + " and makho=" + khox + " and stt=" + stt);
                //    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slxuat");
                //}
            }
            else if (tt == insert)
            {
                if (loai == "CK" || loai == "BS" || loai == "XK" || loai == "CD" || loai == "LC" || loai == "XC")//linh lc
                {
                    /// kho
                    if (bMavach)
                    {
                        execute_data("update " + user + mmyy + ".d_tonkhoct set slxuatmv=slxuatmv+" + soluong + "	where makho=" + khox + " and stt=" + stt);
                        upd_tonkhoth(tt, mmyy, khox, mabd, manguon, soluong, "slxuatmv");
                    }
                    else
                    {
                        execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat+" + soluong + "	where makho=" + khox + " and stt=" + stt);
                        upd_tonkhoth(tt, mmyy, khox, mabd, manguon, soluong, "slxuat");
                    }
                }
                else if (loai == "TH" || loai == "HT")
                {
                    execute_data("update " + user + mmyy + ".d_tutrucct set slxuat=slxuat+" + soluong + " where makp=" + khox + " and makho=" + khon + " and stt=" + stt);
                    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slxuat");
                }
                //else if (loai == "TT")//Tu:20/07/2011 xuat chuyen tu truc nay sang tu truc khac loai="TT"
                //{
                //    //tu truc nhan ve
                //    execute_data("update " + user + mmyy + ".d_tutrucct set slnhap=slnhap+" + soluong + " where makp=" + khox + " and makho=" + khon + " and stt=" + stt);
                //    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slnhap");
                //}//end Tu
                if (loai == "CK" || loai == "TH" || loai == "HT" || loai == "NC")//linh nc
                {
                    //if (bMavach)
                    //{
                    upd_tonkhoct(mmyy, khon, stt, mabd, soluong, "slnhap");
                    upd_tonkhoth(tt, mmyy, khon, mabd, manguon, soluong, "slnhap");
                    //}
                }
                else if (loai == "BS")
                {
                    upd_tutrucct(mmyy, khon, khox, stt, mabd, soluong, "slnhap");
                    upd_tutructh(tt, mmyy, khon, khox, mabd, manguon, soluong, "slnhap");
                }
                else if (loai == "TT")
                {
                    //tu truc nhan
                    upd_tutrucct(mmyy, khox, khon, stt, mabd, soluong, "slnhap");
                    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slnhap");
                }
            }
        }
        //Phuoc

        //Phuoc
        public DataTable get_xuatct_mavach_lc(DataTable dtct, string mmyy, string str, decimal id, string loai, int khox, int khon, decimal duyet, int nhom, bool bVattu)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatct.xml");
            try
            {
                ds.Tables[0].Columns.Add("mavach", typeof(string)).DefaultValue = "0";
                ds.Tables[0].Columns.Add("vat", typeof(int)).DefaultValue = 0;
                try { string ss = dtct.Columns["soluongmoi"].ColumnName; }
                catch { dtct.Columns.Add("soluongmoi", typeof(decimal)).DefaultValue = 0; }
            }
            catch { }
            DataSet dstmp = ds.Copy();
            dstmp.Tables[0].Clear();
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            decimal sl, sltx, sttx, slton, dongia, sl_mv, sl_moi = 0, sltx_moi = 0;
            DataTable dttonct, dttonmv;
            bool _bNhaptruocxuat = bNhaptruocxuat(nhom);
            foreach (DataRow r in dtct.Select(""))
            {
                sl = decimal.Parse(r["soluong"].ToString());
                sl_mv = decimal.Parse(r["soluong"].ToString());
                sl_moi = decimal.Parse(r["soluong"].ToString()) - decimal.Parse(r["soluongmoi"].ToString() == "" ? "0" : r["soluongmoi"].ToString());
                if (loai == "QT")
                    sql = str + " and a.tondau+a.slvay-a.slquyettoan>0 and a.mabd=" + int.Parse(r["mabd"].ToString()) + " and a.manguon=" + int.Parse(r["manguon"].ToString());
                else
                    sql = str + " and a.tondau+a.slnhap-a.slxuat>0 and a.mabd=" + r["mabd"].ToString();// +" and t.manguon=" + r["manguon"].ToString();
                dttonct = get_data(sql).Tables[0];
                dr = dttonct.Select("");
                irec = dr.Length;
                #region xuat theo khong ma vach
                for (int i = 0; i < irec; i++)
                {
                    slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                    dongia = decimal.Parse(dr[i]["giamua"].ToString());
                    sltx = Math.Min(sl, slton);
                    sltx_moi = Math.Min(sl_moi, slton);//Tu+05102011
                    if (sltx > 0)
                    {
                        //stt = get_stt(dstmp.Tables[0]);
                        stt = int.Parse(r["stt"].ToString() == "" ? "1" : r["stt"].ToString());//Tu:06102011
                        if (stt == 0) stt = get_stt(dstmp.Tables[0]);
                        sttx = sltx * dongia;
                        dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                        // bo doan nay vi xuat theo ma vach

                        updrec_xuatct_lc(dstmp.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()),
                            r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), dr[i]["tennguon"].ToString(),
                            dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx,
                            decimal.Parse(dr[i]["giaban"].ToString()), dongia, int.Parse(dr[i]["manguon"].ToString()),
                            int.Parse(dr[i]["nhomcc"].ToString()), r["sothe"].ToString(), r["mabs"].ToString(), r["tenbs"].ToString(),
                            r["hotenbn"].ToString(), null, r["mavach"].ToString(), r["vat"].ToString());
                        //
                        upd_xuatct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), sltx, r["mabs"].ToString(), r["hotenbn"].ToString(), decimal.Parse(r["giaban"].ToString()));
                        if (loai == "VA" || loai == "QT")
                            upd_tonkhoct_vay(insert, mmyy, loai, khox, khon, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                        else
                        {
                            upd_tonkhoct_xuatct_mavach(insert, mmyy, loai, khox, khon, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx_moi, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), false);
                        }
                        if (duyet != 0)
                            execute_data("update " + user + mmyy + ".d_dutrucapct set slthuc=slthuc+" + sltx + " where id=" + duyet + " and manguon=" + int.Parse(dr[i]["manguon"].ToString()) + " and mabd=" + int.Parse(r["mabd"].ToString()));
                        //
                    }
                    sl -= sltx;
                    if (sl <= 0) break;
                }
                #endregion
                if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "xuatct", 0, 0);
                ///------------------------------------------- xuat theo ma vach --------------------------------///
                #region Xuat theo ma vach
                if (r["mavach"].ToString() != "" && r["mavach"].ToString() != "0" && r["mavach"].ToString() != "0.0")
                {
                    sl = sl_mv;
                    if (loai == "QT")
                        sql = str + " and a.tondau+a.slvay-a.slquyettoan>0 and a.mabd=" + int.Parse(r["mabd"].ToString()) + " and a.manguon=" + int.Parse(r["manguon"].ToString());
                    else
                        sql = str + " and a.tondaumv+a.slnhap-a.slxuatmv>0 and a.mabd=" + r["mabd"].ToString();// +" and t.manguon=" + r["manguon"].ToString();
                    if (!bVattu) sql += " and t.mavach=" + (r["mavach"].ToString() == "" ? "0" : r["mavach"].ToString());
                    dttonmv = get_data(sql).Tables[0];
                    dr = dttonmv.Select("");
                    irec = dr.Length;
                    for (int i = 0; i < irec; i++)
                    {
                        slton = decimal.Parse(dr[i]["tondaumv"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuatmv"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        sltx = Math.Min(sl, slton);
                        sltx_moi = Math.Min(sl_moi, slton);//Tu:05102011
                        if (sltx > 0)
                        {
                            stt = get_stt(ds.Tables[0]);
                            sttx = sltx * dongia;
                            dr[i]["slxuatmv"] = decimal.Parse(dr[i]["slxuatmv"].ToString()) + sltx;
                            updrec_xuatct_lc(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()),
                                r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), dr[i]["tennguon"].ToString(),
                                dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx,
                                decimal.Parse(dr[i]["giaban"].ToString()), dongia, int.Parse(dr[i]["manguon"].ToString()),
                                int.Parse(dr[i]["nhomcc"].ToString()), r["sothe"].ToString(), r["mabs"].ToString(), r["tenbs"].ToString(),
                                r["hotenbn"].ToString(), null, r["mavach"].ToString(), r["vat"].ToString());
                            // cap nhat xuong table d_xuat_mavachct
                            upd_xuat_mavachct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), sltx, r["mabs"].ToString(), r["hotenbn"].ToString(), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["mavach"].ToString().Trim() == "" ? "0" : r["mavach"].ToString().Trim()));
                            if (loai == "VA" || loai == "QT")
                                upd_tonkhoct_vay(insert, mmyy, loai, khox, khon, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                            else
                            {
                                upd_tonkhoct_xuatct_mavach(insert, mmyy, loai, khox, khon, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx_moi, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), true);
                            }
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                    if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "xuatct", 0, 0);
                }
                #endregion
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        //phuoc
        public bool upd_chonhapct_lc(string d_mmyy, decimal d_id, decimal d_stt, int d_mabd, string d_handung, string d_losx, int d_vat, decimal d_soluong, decimal d_dongia, decimal d_sotien, decimal d_giaban, decimal d_giamua, int d_manguon, int d_nhomcc, int d_idchinhanhnhan, string d_mavach)
        {
            string s_datalink = getDBLink(d_idchinhanhnhan);

            //id,stt,mabd,handung,losx,vat,soluong,dongia,sotien,giaban,giamua,manguon,nhomcc
            foreach (DataRow row in get_data("select * from " + user + ".dmchinhanh where id=" + d_idchinhanhnhan + "").Tables[0].Rows)//??
            {
                string sConn1 = "Server=192.168.1.14;Port=5432;User Id=medisoft;Password=links1920;Database=medisoft;Encoding=UNICODE;Pooling=true;";
                string s_ip = row["ip"].ToString();
                string s_database = row["database_local"].ToString();
                string s_port = row["port"].ToString();
                sConn1 = "Server=" + s_ip + ";Port=" + s_port + ";User Id=" + User_database + ";Password=" + Password_database + ";Database=" + s_database + ";Encoding=UNICODE;Pooling=true;";
                s_datalink = row["database"].ToString().Trim('@');
                //
                if (d_idchinhanhnhan == i_Chinhanh_hientai)
                {
                    s_datalink = "";
                }
                if (s_datalink.Trim('@') != "") s_datalink = "@" + s_datalink;
                //
                string sql = "update " + user + ".d_chonhapct" + s_datalink + " set mabd=:d_mabd,handung=:d_handung,";//@" + s_datalink + "
                sql += "losx=:d_losx,vat=:d_vat,soluong=:d_soluong,dongia=:d_dongia,sotien=:d_sotien,giaban=:d_giaban,";
                sql += "giamua=:d_giamua,manguon=:d_manguon,nhomcc=:d_nhomcc,mavach=" + ((d_mavach == "" || d_mavach == "0") ? "0" : d_mavach.Substring(0, 13)) + " where id=:d_id and stt=:d_stt";
                //con = new NpgsqlConnection(sConn1);
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                try
                {
                    con.Open();
                    int irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    if (irec == 0)
                    {
                        sql = "insert into " + user + ".d_chonhapct" + s_datalink + "(id,stt,mabd,handung,losx,vat,";//@" + s_datalink + " 
                        sql += "soluong,dongia,sotien,giaban,giamua,manguon,nhomcc,mavach)";
                        sql += "values (:d_id,:d_stt,:d_mabd,:d_handung,:d_losx,:d_vat,:d_soluong,";
                        sql += ":d_dongia,:d_sotien,:d_giaban,:d_giamua,:d_manguon,:d_nhomcc," + ((d_mavach == "" || d_mavach == "0") ? "0" : d_mavach.Substring(0, 13)) + ")";
                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                        cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                        cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                        cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                        cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                        cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
                        cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                        cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                        cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                        cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                        cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                        cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                        cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();
                    }
                }
                catch (NpgsqlException ex)
                {
                    upd_error(d_mmyy, ex.Message, sComputer, "d_chonhapct");
                    return false;
                }
                finally
                {
                    cmd.Dispose();
                    con.Close(); con.Dispose();
                }
            }
            return true;
        }

        public void updrec_xuatll(DataTable dt, decimal id, string sophieu, string ngay, int khox, int khon, string lydo, int d_idchinhanh, string d_idkhdathang)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["sophieu"] = sophieu;
                nrow["ngay"] = ngay;
                nrow["khox"] = khox;
                nrow["khon"] = khon;
                nrow["lydo"] = lydo;
                nrow["idchinhanh"] = d_idchinhanh;
                try { nrow["id_kehoachdathang"] = d_idkhdathang; }
                catch { }
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["sophieu"] = sophieu;
                dr[0]["ngay"] = ngay;
                dr[0]["khox"] = khox;
                dr[0]["khon"] = khon;
                dr[0]["lydo"] = lydo;
                dr[0]["idchinhanh"] = d_idchinhanh;
                dr[0]["id_kehoachdathang"] = (d_idkhdathang == "") ? "0" : d_idkhdathang;
            }
        }
        public bool upd_chonhapct_lc(string d_mmyy, decimal d_id, decimal d_stt, int d_mabd, string d_handung, string d_losx, int d_vat, decimal d_soluong, decimal d_dongia, decimal d_sotien, decimal d_giaban, decimal d_giamua, int d_manguon, int d_nhomcc, int d_idchinhanhnhan, string d_mavach, decimal d_sttt)
        {
            string s_datalink = getDBLink(d_idchinhanhnhan);

            //id,stt,mabd,handung,losx,vat,soluong,dongia,sotien,giaban,giamua,manguon,nhomcc
            foreach (DataRow row in get_data("select * from " + user + ".dmchinhanh where id=" + d_idchinhanhnhan + "").Tables[0].Rows)//??
            {
                string sConn1 = "Server=192.168.1.14;Port=5432;User Id=medisoft;Password=links1920;Database=medisoft;Encoding=UNICODE;Pooling=true;";
                string s_ip = row["ip"].ToString();
                string s_database = row["database_local"].ToString();
                string s_port = row["port"].ToString();
                sConn1 = "Server=" + s_ip + ";Port=" + s_port + ";User Id=" + User_database + ";Password=" + Password_database + ";Database=" + s_database + ";Encoding=UNICODE;Pooling=true;";
                s_datalink = row["database"].ToString().Trim('@');
                //
                if (d_idchinhanhnhan == i_Chinhanh_hientai)
                {
                    s_datalink = "";
                }
                if (s_datalink.Trim('@') != "") s_datalink = "@" + s_datalink;
                string sql = "update " + user + ".d_chonhapct" + s_datalink + " set mabd=:d_mabd,handung=:d_handung,";//@" + s_datalink + "
                sql += "losx=:d_losx,vat=:d_vat,soluong=:d_soluong,dongia=:d_dongia,sotien=:d_sotien,giaban=:d_giaban,";
                sql += "giamua=:d_giamua,manguon=:d_manguon,nhomcc=:d_nhomcc,mavach=" + ((d_mavach == "" || d_mavach == "0") ? "0" : d_mavach.Substring(0, 13)) + ",sttt=" + d_sttt + " where id=:d_id and stt=:d_stt";
                //con = new NpgsqlConnection(sConn1);//
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                try
                {
                    con.Open();
                    int irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    if (irec == 0)
                    {
                        sql = "insert into " + user + ".d_chonhapct" + s_datalink + "(id,stt,mabd,handung,losx,vat,";//@" + s_datalink + " 
                        sql += "soluong,dongia,sotien,giaban,giamua,manguon,nhomcc,mavach, sttt)";
                        sql += "values (:d_id,:d_stt,:d_mabd,:d_handung,:d_losx,:d_vat,:d_soluong,";
                        sql += ":d_dongia,:d_sotien,:d_giaban,:d_giamua,:d_manguon,:d_nhomcc," + ((d_mavach == "" || d_mavach == "0") ? "0" : d_mavach.Substring(0, 13)) + "," + d_sttt + ")";
                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                        cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                        cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                        cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                        cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                        cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
                        cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                        cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                        cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                        cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                        cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                        cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                        cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();
                    }
                }
                catch (NpgsqlException ex)
                {
                    upd_error(d_mmyy, ex.Message, sComputer, "d_chonhapct");
                    return false;
                }
                finally
                {
                    cmd.Dispose();
                    con.Close(); con.Dispose();
                }
            }
            return true;
        }
        public bool upd_xuat_mavachct(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_mabd, decimal d_soluong, string d_mabs, string d_hotenbn, decimal d_giaban, decimal d_mavach)
        {
            string sql = "update " + user + d_mmyy + ".d_xuat_mavachct set sttt=:d_sttt,mabd=:d_mabd,";
            sql += "soluong=:d_soluong,mabs=:d_mabs,hotenbn=:d_hotenbn,giaban=:d_giaban,mavach=" + d_mavach + " where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
            cmd.Parameters.Add("d_hotenbn", NpgsqlDbType.Text).Value = d_hotenbn;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_xuat_mavachct(id,stt,sttt,mabd,soluong,mabs,";
                    sql += "hotenbn,giaban,mavach) values (:d_id,:d_stt,:d_sttt,:d_mabd,:d_soluong,:d_mabs,:d_hotenbn,:d_giaban," + d_mavach + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                    cmd.Parameters.Add("d_hotenbn", NpgsqlDbType.Text).Value = d_hotenbn;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xuat_mavachct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        //phuoc
        public void updrec_xuatct_lc(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, int manguon, int nhomcc, string sothe, string mabs, string tenbs, string hotenbn, DataTable dtton, string mavach, string vat)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["sothe"] = sothe;
                nrow["mabs"] = mabs;
                nrow["tenbs"] = tenbs;
                nrow["hotenbn"] = hotenbn;
                nrow["mavach"] = mavach;
                nrow["vat"] = (vat == "" ? "0" : vat);
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, mabd, manguon, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["sothe"] = sothe;
                dr[0]["mabs"] = mabs;
                dr[0]["tenbs"] = tenbs;
                dr[0]["hotenbn"] = hotenbn;
                dr[0]["mavach"] = mavach;
                dr[0]["vat"] = vat;
            }
        }
        //phuoc

        public void updrec_xuatsdll(DataTable dt, decimal id, string mabn, string ngay, int phieu, int makp, decimal idduyet, int makhoa, string ghichu)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["mabn"] = mabn;
                nrow["ngay"] = ngay;
                nrow["phieu"] = phieu;
                nrow["makp"] = makp;
                nrow["makhoa"] = makhoa;
                nrow["idduyet"] = idduyet;
                nrow["ghichu"] = ghichu;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabn"] = mabn;
                dr[0]["ngay"] = ngay;
                dr[0]["phieu"] = phieu;
                dr[0]["makp"] = makp;
                dr[0]["makhoa"] = makhoa;
                dr[0]["idduyet"] = idduyet;
                dr[0]["ghichu"] = ghichu;
            }
        }

        public void updrec_xuatsdll(DataTable dt, decimal id, string mabn, string hoten, string ngay, int phieu, int makp, decimal idduyet, int makhoa)
        {
            string exp = "id='" + id+"'";
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["mabn"] = mabn;
                nrow["hoten"] = hoten;
                nrow["ngay"] = ngay;
                nrow["phieu"] = phieu;
                nrow["makp"] = makp;
                nrow["makhoa"] = makhoa;
                nrow["idduyet"] = idduyet;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabn"] = mabn;
                dr[0]["hoten"] = hoten;
                dr[0]["ngay"] = ngay;
                dr[0]["phieu"] = phieu;
                dr[0]["makp"] = makp;
                dr[0]["makhoa"] = makhoa;
                dr[0]["idduyet"] = idduyet;
            }
        }

        public void updrec_xuatsdct(string tt, DataTable dt, decimal stt, decimal sttt, string doituong, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, int madoituong, int makho, int manguon, int nhomcc, string ngay, decimal sttduyet, int tutruc, DataTable dtton, decimal gia_bh)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["ngay"] = ngay;
                nrow["sttduyet"] = sttduyet;
                nrow["tutruc"] = tutruc;
                nrow["gia_bh"] = gia_bh;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, tt);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["ngay"] = ngay;
                dr[0]["sttduyet"] = sttduyet;
                dr[0]["tutruc"] = tutruc;
                dr[0]["gia_bh"] = gia_bh;
            }
        }

        public void updrec_xuatsdct(string tt, DataTable dt, decimal stt, decimal sttt, string doituong, int mabd, string ma,
            string ten, string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung,
            string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, int madoituong,
            int makho, int manguon, int nhomcc, string ngay, decimal sttduyet, int tutruc, decimal gianovat, DataTable dtton, decimal gia_bh)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                //dt.Columns.Add("gianovat");
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["ngay"] = ngay;
                nrow["sttduyet"] = sttduyet;
                nrow["tutruc"] = tutruc;
                nrow["gianovat"] = gianovat;
                nrow["gia_bh"] = gia_bh;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, tt);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["ngay"] = ngay;
                dr[0]["sttduyet"] = sttduyet;
                dr[0]["tutruc"] = tutruc;
                dr[0]["gianovat"] = gianovat;
                dr[0]["gia_bh"] = gia_bh;
            }
        }

        public void updrec_xuatsdct_treo(string tt, DataTable dt, decimal stt, decimal sttt, string doituong, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, int madoituong, int makho, int manguon, int nhomcc, string ngay, decimal sttduyet, int tutruc, DataTable dtton, int treo)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["ngay"] = ngay;
                nrow["sttduyet"] = sttduyet;
                nrow["tutruc"] = tutruc;
                nrow["treo"] = treo;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, tt);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["ngay"] = ngay;
                dr[0]["sttduyet"] = sttduyet;
                dr[0]["tutruc"] = tutruc;
            }
        }

        public void updrec_xuatsdctht(string tt, DataTable dt, decimal stt, decimal sttt, string doituong, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, int madoituong, int makho, int manguon, int nhomcc, string ngay, int sttduyet, int tutruc, DataTable dtton)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["ngay"] = ngay;
                nrow["sttduyet"] = sttduyet;
                nrow["tutruc"] = tutruc;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon_doituong(dtton, makho, mabd, manguon, madoituong, soluong, tt);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon_doituong(dtton, makho, mabd, manguon, madoituong, sl, "+");
                    updrec_tonkho_nguon_doituong(dtton, makho, mabd, manguon, madoituong, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["ngay"] = ngay;
                dr[0]["sttduyet"] = sttduyet;
                dr[0]["tutruc"] = tutruc;
            }
        }

        public void updrec_ngtrull(DataTable dt, decimal id, string mabn, string hoten, string namsinh, string ngay, string mabs, int makp, int loai, int done, int userid, int sotoa, decimal maql)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["mabn"] = mabn;
                nrow["hoten"] = hoten;
                nrow["namsinh"] = namsinh;
                nrow["ngay"] = ngay;
                nrow["mabs"] = mabs;
                nrow["makp"] = makp;
                nrow["loai"] = loai;
                nrow["done"] = done;
                nrow["userid"] = userid;
                nrow["sotoa"] = sotoa;
                nrow["maql"] = maql;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabn"] = mabn;
                dr[0]["hoten"] = hoten;
                dr[0]["namsinh"] = namsinh;
                dr[0]["ngay"] = ngay;
                dr[0]["mabs"] = mabs;
                dr[0]["makp"] = makp;
                dr[0]["loai"] = loai;
                dr[0]["done"] = done;
                dr[0]["userid"] = userid;
                dr[0]["sotoa"] = sotoa;
                dr[0]["maql"] = maql;
            }
        }

        public void updrec_ngtrull_ban(DataTable dt, decimal id, string mabn, string hoten, string namsinh, string ngay,
            string mabs, int makp, int loai, int done, int userid, int sotoa, decimal maql, string diachi, string ghichu, decimal songay)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["mabn"] = mabn;
                nrow["hoten"] = hoten;
                nrow["namsinh"] = namsinh;
                nrow["ngay"] = ngay;
                nrow["mabs"] = mabs;
                nrow["makp"] = makp;
                nrow["loai"] = loai;
                nrow["done"] = done;
                nrow["userid"] = userid;
                nrow["sotoa"] = sotoa;
                nrow["maql"] = maql;
                nrow["diachi"] = diachi;
                nrow["ghichu"] = ghichu;
                nrow["songay"] = songay;
                nrow["idttrv"] = 0;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabn"] = mabn;
                dr[0]["hoten"] = hoten;
                dr[0]["namsinh"] = namsinh;
                dr[0]["ngay"] = ngay;
                dr[0]["mabs"] = mabs;
                dr[0]["makp"] = makp;
                dr[0]["loai"] = loai;
                dr[0]["done"] = done;
                dr[0]["userid"] = userid;
                dr[0]["sotoa"] = sotoa;
                dr[0]["maql"] = maql;
                dr[0]["diachi"] = diachi;
                dr[0]["ghichu"] = ghichu;
                dr[0]["songay"] = songay;
                dr[0]["idttrv"] = dr[0]["idttrv"].ToString() == "" ? "0" : dr[0]["idttrv"].ToString();
            }
        }

        public void updrec_ngtruct(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, decimal sotienban, int makho, int manguon, int nhomcc, DataTable dtton, decimal soluongcu, decimal sotiencu, string d_cachdung)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["sotienban"] = sotienban;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["soluongcu"] = soluongcu;
                nrow["sotiencu"] = sotiencu;
                nrow["cachdung"] = d_cachdung;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["sotienban"] = sotienban;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["soluongcu"] = soluongcu;
                dr[0]["sotiencu"] = sotiencu;
                dr[0]["cachdung"] = d_cachdung;
            }
        }
        public void updrec_ngtruct(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, decimal sotienban, int makho, int manguon, int nhomcc, DataTable dtton, decimal soluongcu, decimal sotiencu, string d_cachdung, bool bXuattheo_Mavach)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["sotienban"] = sotienban;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["soluongcu"] = soluongcu;
                nrow["sotiencu"] = sotiencu;
                nrow["cachdung"] = d_cachdung;
                dt.Rows.Add(nrow);
                if (dtton != null)
                {
                    if (bXuattheo_Mavach == false) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                    else updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, sttt, "-");
                }
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    if (bXuattheo_Mavach == false)
                    {
                        updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, "+");
                        updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                    }
                    else
                    {
                        updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, sttt, "+");
                        updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, sttt, "-");
                    }
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["sotienban"] = sotienban;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["soluongcu"] = soluongcu;
                dr[0]["sotiencu"] = sotiencu;
                dr[0]["cachdung"] = d_cachdung;
            }
        }


        public void updrec_ngtruct_nhathuoc(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, decimal sotienban, int makho, int manguon, int nhomcc, DataTable dtton, decimal soluongcu, decimal sotiencu, decimal madoituong)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["sotienban"] = sotienban;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["soluongcu"] = soluongcu;
                nrow["sotiencu"] = sotiencu;
                nrow["madoituong"] = madoituong;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["sotienban"] = sotienban;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["soluongcu"] = soluongcu;
                dr[0]["sotiencu"] = sotiencu;
                dr[0]["madoituong"] = madoituong;
            }
        }

        public void updrec_bhytll(DataTable dt, decimal id, string mabn, decimal mavaovien, decimal maql, string hoten, string namsinh,
            string ngay, string diachi, string makp, string chandoan, string maicd, string mabs, string sothe, int maphu,
            string mabv, decimal sobienlai, decimal quyenso, decimal congkham, decimal thuoc, decimal cls, decimal chiphi,
            decimal bntra, decimal bhyttra, string tungay, string denngay, string ngay1, string ngay2, string ngay3, int traituyen)
        {
            string exp = "id='" + id+"'";
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["mabn"] = mabn;
                nrow["mavaovien"] = mavaovien;
                nrow["maql"] = maql;
                nrow["hoten"] = hoten;
                nrow["namsinh"] = namsinh;
                nrow["ngay"] = ngay;
                nrow["diachi"] = diachi;
                nrow["makp"] = makp;
                nrow["chandoan"] = chandoan;
                nrow["maicd"] = maicd;
                nrow["mabs"] = mabs;
                nrow["sothe"] = sothe;
                nrow["maphu"] = maphu;
                nrow["mabv"] = mabv;
                nrow["sobienlai"] = sobienlai;
                nrow["quyenso"] = quyenso;
                nrow["congkham"] = congkham;
                nrow["thuoc"] = thuoc;
                nrow["cls"] = cls;
                nrow["chiphi"] = chiphi;
                nrow["bntra"] = bntra;
                nrow["bhyttra"] = bhyttra;
                nrow["tungay"] = tungay;
                nrow["denngay"] = denngay;
                nrow["ngay1"] = ngay1;
                nrow["ngay2"] = ngay2;
                nrow["ngay3"] = ngay3;
                nrow["traituyen"] = traituyen;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabn"] = mabn;
                dr[0]["mavaovien"] = mavaovien;
                dr[0]["maql"] = maql;
                dr[0]["hoten"] = hoten;
                dr[0]["namsinh"] = namsinh;
                dr[0]["ngay"] = ngay;
                dr[0]["diachi"] = diachi;
                dr[0]["makp"] = makp;
                dr[0]["chandoan"] = chandoan;
                dr[0]["maicd"] = maicd;
                dr[0]["mabs"] = mabs;
                dr[0]["sothe"] = sothe;
                dr[0]["maphu"] = maphu;
                dr[0]["mabv"] = mabv;
                dr[0]["sobienlai"] = sobienlai;
                dr[0]["quyenso"] = quyenso;
                dr[0]["congkham"] = congkham;
                dr[0]["thuoc"] = thuoc;
                dr[0]["cls"] = cls;
                dr[0]["chiphi"] = chiphi;
                dr[0]["bntra"] = bntra;
                dr[0]["bhyttra"] = bhyttra;
                dr[0]["tungay"] = tungay;
                dr[0]["denngay"] = denngay;
                dr[0]["ngay1"] = ngay1;
                dr[0]["ngay2"] = ngay2;
                dr[0]["ngay3"] = ngay3;
                dr[0]["traituyen"] = traituyen;
            }
        }

        public void updrec_bhytll(DataTable dt, decimal id, int sotoa)
        {
            string exp = "id='" + id+"'";
            DataRow[] dr = dt.Select(exp);
            if (dr.Length > 0) dr[0]["sotoa"] = sotoa;
        }

        public void updrec_ngtrull(DataTable dt, decimal id, int sotoa)
        {
            string exp = "id=" + id;
            DataRow[] dr = dt.Select(exp);
            if (dr.Length > 0) dr[0]["sotoa"] = sotoa;
        }

        public void updrec_bhytll(DataTable dt, decimal id, string mabn, decimal mavaovien, decimal maql, string hoten, string namsinh,
            string ngay, string diachi, string makp, string chandoan, string maicd, string mabs, string sothe, int maphu, string mabv,
            decimal sobienlai)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["mabn"] = mabn;
                nrow["mavaovien"] = mavaovien;
                nrow["maql"] = maql;
                nrow["hoten"] = hoten;
                nrow["namsinh"] = namsinh;
                nrow["ngay"] = ngay;
                nrow["diachi"] = diachi;
                nrow["makp"] = makp;
                nrow["chandoan"] = chandoan;
                nrow["maicd"] = maicd;
                nrow["mabs"] = mabs;
                nrow["sothe"] = sothe;
                nrow["maphu"] = maphu;
                nrow["mabv"] = mabv;
                nrow["sotoa"] = 0;
                if (sobienlai != 0) nrow["sobienlai"] = sobienlai;
                else nrow["sobienlai"] = 0;
                //nrow["traituyen"] = traituyen;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabn"] = mabn;
                dr[0]["mavaovien"] = mavaovien;
                dr[0]["maql"] = maql;
                dr[0]["hoten"] = hoten;
                dr[0]["namsinh"] = namsinh;
                dr[0]["ngay"] = ngay;
                dr[0]["diachi"] = diachi;
                dr[0]["makp"] = makp;
                dr[0]["chandoan"] = chandoan;
                dr[0]["maicd"] = maicd;
                dr[0]["mabs"] = mabs;
                dr[0]["sothe"] = sothe;
                dr[0]["maphu"] = maphu;
                dr[0]["mabv"] = mabv;
                if (sobienlai != 0) dr[0]["sobienlai"] = sobienlai;
                else dr[0]["sobienlai"] = 0;
                //dr[0]["traituyen"] = traituyen;
            }
        }

        public void updrec_bhytthuoc(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotienmua, decimal giaban, decimal giamua, decimal sotien, string cachdung, int makho, int manguon, int nhomcc, DataTable dtton)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["sotienmua"] = sotienmua;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["cachdung"] = cachdung;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["sotienmua"] = sotienmua;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["cachdung"] = cachdung;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
            }
        }

        public void updrec_dutrull(DataTable dt, decimal id, string mabn, decimal mavaovien, decimal maql, decimal idkhoa, string hoten, string mabs, string manv, string ngay, decimal mach, decimal nhietdo, string huyetap, decimal nhiptho, int cannang, string phong, string giuong, string ghichu, int read, decimal songay, string ngayvv)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["mabn"] = mabn;
                nrow["mavaovien"] = mavaovien;
                nrow["maql"] = maql;
                nrow["idkhoa"] = idkhoa;
                nrow["hoten"] = hoten;
                nrow["mabs"] = mabs;
                nrow["manv"] = manv;
                nrow["ngay"] = ngay;
                nrow["mach"] = mach;
                nrow["nhietdo"] = nhietdo;
                nrow["huyetap"] = huyetap;
                nrow["nhiptho"] = nhiptho;
                nrow["cannang"] = cannang;
                nrow["phong"] = phong;
                nrow["giuong"] = giuong;
                nrow["ghichu"] = ghichu;
                nrow["read"] = read;
                nrow["songay"] = songay;
                nrow["ngayvv"] = ngayvv;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabn"] = mabn;
                dr[0]["mavaovien"] = mavaovien;
                dr[0]["maql"] = maql;
                dr[0]["idkhoa"] = idkhoa;
                dr[0]["hoten"] = hoten;
                dr[0]["mabs"] = mabs;
                dr[0]["manv"] = manv;
                dr[0]["ngay"] = ngay;
                dr[0]["mach"] = mach;
                dr[0]["nhietdo"] = nhietdo;
                dr[0]["huyetap"] = huyetap;
                dr[0]["nhiptho"] = nhiptho;
                dr[0]["cannang"] = cannang;
                dr[0]["phong"] = phong;
                dr[0]["giuong"] = giuong;
                dr[0]["ghichu"] = ghichu;
                dr[0]["read"] = read;
                dr[0]["songay"] = songay;
                dr[0]["ngayvv"] = ngayvv;
            }
        }

        public void updrec_dutruct(string tt, DataTable dt, decimal stt, string doituong, int mabd, string ma, string ten, string tenhc,
            string dang, string tenkho, decimal soluong, int madoituong, int makho, string cachdung, string mahc, int manguon,
            int tutruc, decimal idvpkhoa, decimal solan, decimal lan, DataTable dtton, int mabdcu)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["cachdung"] = cachdung;
                nrow["mahc"] = mahc;
                nrow["manguon"] = manguon;
                nrow["tutruc"] = tutruc;
                nrow["idvpkhoa"] = idvpkhoa;
                nrow["solan"] = solan;
                nrow["lan"] = lan;
                dt.Rows.Add(nrow);
                if (dtton != null && idvpkhoa == 0) updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, soluong, tt);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null && idvpkhoa == 0)
                {
                    if (mabdcu == 0 || mabdcu == mabd)
                    {
                        decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                        updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, sl, "+");
                    }
                    updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, soluong, "-");
                }
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = soluong;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["cachdung"] = cachdung;
                dr[0]["mahc"] = mahc;
                dr[0]["manguon"] = manguon;
                dr[0]["tutruc"] = tutruc;
                dr[0]["idvpkhoa"] = idvpkhoa;
                dr[0]["solan"] = solan;
                dr[0]["lan"] = lan;
            }
        }

        public void updrec_dutruct(string tt, DataTable dt, decimal stt, string doituong, int mabd, string ma, string ten, string tenhc,
            string dang, string tenkho, decimal soluong, int madoituong, int makho, string cachdung, string mahc, int manguon,
            int tutruc, decimal idvpkhoa, decimal solan, decimal lan, DataTable dtton, int mabdcu, decimal d_dongia, decimal d_giaban)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["cachdung"] = cachdung;
                nrow["mahc"] = mahc;
                nrow["manguon"] = manguon;
                nrow["tutruc"] = tutruc;
                nrow["idvpkhoa"] = idvpkhoa;
                nrow["solan"] = solan;
                nrow["lan"] = lan;
                nrow["dongia"] = d_dongia;
                nrow["giaban"] = d_giaban;
                nrow["sotien"] = d_dongia * soluong;
                nrow["sotienban"] = d_giaban * soluong;
                dt.Rows.Add(nrow);
                if (dtton != null && idvpkhoa == 0) updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, soluong, tt);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null && idvpkhoa == 0)
                {
                    if (mabdcu == 0 || mabdcu == mabd)
                    {
                        decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                        updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, sl, "+");
                    }
                    updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, soluong, "-");
                }
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = soluong;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["cachdung"] = cachdung;
                dr[0]["mahc"] = mahc;
                dr[0]["manguon"] = manguon;
                dr[0]["tutruc"] = tutruc;
                dr[0]["idvpkhoa"] = idvpkhoa;
                dr[0]["solan"] = solan;
                dr[0]["lan"] = lan;
                dr[0]["dongia"] = d_dongia;
                dr[0]["giaban"] = d_giaban;
                dr[0]["sotien"] = d_dongia * soluong;
                dr[0]["sotienban"] = d_giaban * soluong;
            }
        }

        public void updrec_dutruct(string tt, DataTable dt, decimal stt, string doituong, int mabd, string ma, string ten, string tenhc,
            string dang, string tenkho, decimal soluong, int madoituong, int makho, string cachdung, string mahc, int manguon,
            int tutruc, decimal idvpkhoa, decimal solan, decimal lan, DataTable dtton, int mabdcu, decimal d_dongia, decimal d_giaban, string d_ghichu)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["cachdung"] = cachdung;
                nrow["mahc"] = mahc;
                nrow["manguon"] = manguon;
                nrow["tutruc"] = tutruc;
                nrow["idvpkhoa"] = idvpkhoa;
                nrow["solan"] = solan;
                nrow["lan"] = lan;
                nrow["dongia"] = d_dongia;
                nrow["giaban"] = d_giaban;
                nrow["sotien"] = d_dongia * soluong;
                nrow["sotienban"] = d_giaban * soluong;
                nrow["ghichu"] = d_ghichu;
                dt.Rows.Add(nrow);
                if (dtton != null && idvpkhoa == 0) updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, soluong, tt);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null && idvpkhoa == 0)
                {
                    if (mabdcu == 0 || mabdcu == mabd)
                    {
                        decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                        updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, sl, "+");
                    }
                    updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, soluong, "-");
                }
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = soluong;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["cachdung"] = cachdung;
                dr[0]["mahc"] = mahc;
                dr[0]["manguon"] = manguon;
                dr[0]["tutruc"] = tutruc;
                dr[0]["idvpkhoa"] = idvpkhoa;
                dr[0]["solan"] = solan;
                dr[0]["lan"] = lan;
                dr[0]["dongia"] = d_dongia;
                dr[0]["giaban"] = d_giaban;
                dr[0]["sotien"] = d_dongia * soluong;
                dr[0]["sotienban"] = d_giaban * soluong;
                dr[0]["ghichu"] = d_ghichu;
            }
        }

        public void updrec_dutruct_choduyet(string tt, DataTable dt, decimal stt, string doituong, int mabd, string ma, string ten, string tenhc,
            string dang, string tenkho, decimal soluong, int madoituong, int makho, string cachdung, string mahc, int manguon,
            int tutruc, decimal idvpkhoa, decimal solan, decimal lan, DataTable dtton, int mabdcu, int choduyet)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["cachdung"] = cachdung;
                nrow["mahc"] = mahc;
                nrow["manguon"] = manguon;
                nrow["tutruc"] = tutruc;
                nrow["idvpkhoa"] = idvpkhoa;
                nrow["solan"] = solan;
                nrow["lan"] = lan;
                nrow["choduyet"] = choduyet;
                dt.Rows.Add(nrow);
                if (dtton != null && idvpkhoa == 0) updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, soluong, tt);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null && idvpkhoa == 0)
                {
                    if (mabdcu == 0 || mabdcu == mabd)
                    {
                        decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                        updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, sl, "+");
                    }
                    updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, soluong, "-");
                }
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = soluong;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["cachdung"] = cachdung;
                dr[0]["mahc"] = mahc;
                dr[0]["manguon"] = manguon;
                dr[0]["tutruc"] = tutruc;
                dr[0]["idvpkhoa"] = idvpkhoa;
                dr[0]["solan"] = solan;
                dr[0]["lan"] = lan;
                dr[0]["choduyet"] = choduyet;
            }
        }

        public void updrec_tonkho_tutruc(DataTable dt, decimal sttt, int kho, int mabd, int tutruc, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("sttt=" + sttt + " and makho=" + kho + " and id=" + mabd + " and tutruc=" + tutruc);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_tonkho_tutruc(DataTable dt, int kho, int mabd, int tutruc, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("makho=" + kho + " and id=" + mabd + " and tutruc=" + tutruc);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_tonkho_tutruc_nguon(DataTable dt, int kho, int manguon, int mabd, int tutruc, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("makho=" + kho + " and id=" + mabd + " and tutruc=" + tutruc + " and manguon=" + manguon);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_hoantrall(DataTable dt, decimal id, string mabn, decimal maql, decimal idkhoa, string hoten, int lydo, string ghichu, decimal mavaovien)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["mabn"] = mabn;
                nrow["maql"] = maql;
                nrow["mavaovien"] = mavaovien;
                nrow["idkhoa"] = idkhoa;
                nrow["hoten"] = hoten;
                nrow["lydo"] = lydo;
                nrow["ghichu"] = ghichu;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mabn"] = mabn;
                dr[0]["maql"] = maql;
                dr[0]["mavaovien"] = mavaovien;
                dr[0]["idkhoa"] = idkhoa;
                dr[0]["hoten"] = hoten;
                dr[0]["lydo"] = lydo;
                dr[0]["ghichu"] = ghichu;
            }
        }

        public void updrec_hoantract(DataTable dt, decimal stt, string doituong, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, decimal soluong, int madoituong, int makho, string ngay, string mahc, int manguon, DataTable dtton, decimal idx, int sttx, decimal soluong_cu)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["ngay"] = ngay;
                nrow["mahc"] = mahc;
                nrow["manguon"] = manguon;
                //bbbb
                nrow["idx"] = idx;
                nrow["sttx"] = sttx;
                nrow["slcu"] = soluong_cu;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho(dtton, makho, madoituong, mabd, soluong, "-", idx, sttx);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho(dtton, makho, madoituong, mabd, sl, "+", idx, sttx);
                    updrec_tonkho(dtton, makho, madoituong, mabd, soluong, "-", idx, sttx);
                }
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = soluong;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["ngay"] = ngay;
                dr[0]["mahc"] = mahc;
                dr[0]["manguon"] = manguon;
                //bbbb
                dr[0]["idx"] = idx;
                dr[0]["sttx"] = sttx;
                dr[0]["slcu"] = soluong_cu;
            }
        }
        //Thuy 03.02.2012
        public void updrec_hoantract(DataTable dt, decimal stt, string doituong, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, decimal soluong, int madoituong, int makho, string ngay, string mahc, int manguon, DataTable dtton, decimal idx, int sttx, decimal soluong_cu, int _userid)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            string exp1 = "id=" + _userid;
            DataSet dt_user = get_data("select hoten,id from " + user + ".dlogin ");
            DataRow r_user = getrowbyid(dt_user.Tables[0], exp1);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["ngay"] = ngay;
                nrow["mahc"] = mahc;
                nrow["manguon"] = manguon;
                //bbbb
                nrow["idx"] = idx;
                nrow["sttx"] = sttx;
                nrow["slcu"] = soluong_cu;
                nrow["hoten"] = r_user["hoten"];
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho(dtton, makho, madoituong, mabd, soluong, "-", idx, sttx);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho(dtton, makho, madoituong, mabd, sl, "+", idx, sttx);
                    updrec_tonkho(dtton, makho, madoituong, mabd, soluong, "-", idx, sttx);
                }
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = soluong;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["ngay"] = ngay;
                dr[0]["mahc"] = mahc;
                dr[0]["manguon"] = manguon;
                //bbbb
                dr[0]["idx"] = idx;
                dr[0]["sttx"] = sttx;
                dr[0]["slcu"] = soluong_cu;
                dr[0]["hoten"] = r_user["hoten"];
            }
        }
        //end Thuy 03.02.2012
        public void updrec_htrathuocct(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, decimal soluong, decimal giaban, decimal sotien, int madoituong, int makho, string ngay, DataTable dtton)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["giaban"] = giaban;
                nrow["sotien"] = sotien;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["ngay"] = ngay;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_sttt(dtton, sttt, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_sttt(dtton, sttt, sl, "+");
                    updrec_tonkho_sttt(dtton, sttt, soluong, "-");
                }
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = soluong;
                dr[0]["giaban"] = giaban;
                dr[0]["sotien"] = sotien;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["ngay"] = ngay;
            }
        }

        public void updrec_tonkho_sttt(DataTable dt, decimal sttt, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("sttt=" + sttt);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_haophill(DataTable dt, decimal id, string sophieu, string ghichu)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["sophieu"] = sophieu;
                nrow["ghichu"] = ghichu;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["sophieu"] = sophieu;
                dr[0]["ghichu"] = ghichu;
            }
        }

        public void updrec_haophict(DataTable dt, decimal stt, string doituong, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, decimal soluong, int madoituong, int makho, string mahc, int manguon, int tutruc, DataTable dtton)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["mahc"] = mahc;
                nrow["manguon"] = manguon;
                nrow["tutruc"] = tutruc;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_tutruc(dtton, makho, mabd, tutruc, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_tutruc(dtton, makho, mabd, tutruc, sl, "+");
                    updrec_tonkho_tutruc(dtton, makho, mabd, tutruc, soluong, "-");
                }
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = soluong;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["mahc"] = mahc;
                dr[0]["manguon"] = manguon;
                dr[0]["tutruc"] = tutruc;
            }
        }

        public void updrec_hoantra_taisan(DataTable dt, decimal stt, string doituong, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, decimal soluong, int madoituong, int makho, string mahc, int manguon, int tutruc, decimal sttt, string losx, string sothe, DataTable dtton)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["mahc"] = mahc;
                nrow["manguon"] = manguon;
                nrow["tutruc"] = tutruc;
                nrow["sttt"] = sttt;
                nrow["losx"] = losx;
                nrow["sothe"] = sothe;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_tutruc(dtton, sttt, makho, mabd, tutruc, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_tutruc(dtton, sttt, makho, mabd, tutruc, sl, "+");
                    updrec_tonkho_tutruc(dtton, sttt, makho, mabd, tutruc, soluong, "-");
                }
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = soluong;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["mahc"] = mahc;
                dr[0]["manguon"] = manguon;
                dr[0]["tutruc"] = tutruc;
                dr[0]["sttt"] = sttt;
                dr[0]["losx"] = losx;
                dr[0]["sothe"] = sothe;
            }
        }

        public void updrec_tonkho(DataTable dt, int kho, int madoituong, int mabd, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("makho=" + kho + " and madoituong=" + madoituong + " and id=" + mabd);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_tonkho(DataTable dt, int kho, int madoituong, int mabd, decimal soluong, string toantu, decimal idx, int sttx)
        {
            string asql = "makho=" + kho + " and madoituong=" + madoituong + " and id=" + mabd;
            asql += (idx > 0 ? (" and idx=" + idx) : "") + (sttx > 0 ? (" and sttx=" + sttx) : "");
            DataRow[] r = dt.Select(asql);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }
        public void updrec_tonkhoth(DataTable dt, decimal stt, string tennguon, string ma, string ten, string tenhc, string dang, string tenkho, decimal soluong, int id, int makho, int manguon)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["tennguon"] = tennguon;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["id"] = id;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["tennguon"] = tennguon;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = decimal.Parse(dr[0]["soluong"].ToString()) + soluong;
                dr[0]["id"] = id;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
            }
        }

        public void updrec_tonkhothht(DataTable dt, decimal stt, string tennguon, string ma, string ten, string tenhc, string dang, string tenkho, decimal soluong, int id, int makho, int madoituong, string doituong, int manguon, decimal idx, int sttx)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["tennguon"] = tennguon;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["id"] = id;
                nrow["makho"] = makho;
                nrow["madoituong"] = madoituong;
                nrow["doituong"] = doituong;
                nrow["manguon"] = manguon;
                //bbbb
                nrow["idx"] = idx;
                nrow["sttx"] = sttx;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["tennguon"] = tennguon;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = decimal.Parse(dr[0]["soluong"].ToString()) + soluong;
                dr[0]["id"] = id;
                dr[0]["makho"] = makho;
                dr[0]["madoituong"] = madoituong;
                dr[0]["doituong"] = doituong;
                dr[0]["manguon"] = manguon;

                dr[0]["idx"] = idx;
                dr[0]["sttx"] = sttx;
            }
        }

        public void updrec_tonkhohtra(DataTable dt, decimal stt, string ma, string ten, string dang, string tenkho, decimal soluong, decimal giaban, int id, int makho, int madoituong, decimal sttt, string tenhc)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["giaban"] = giaban;
                nrow["id"] = id;
                nrow["makho"] = makho;
                nrow["madoituong"] = madoituong;
                nrow["sttt"] = sttt;
                nrow["tenhc"] = tenhc;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = decimal.Parse(dr[0]["soluong"].ToString()) + soluong;
                dr[0]["giaban"] = giaban;
                dr[0]["id"] = id;
                dr[0]["makho"] = makho;
                dr[0]["madoituong"] = madoituong;
                dr[0]["sttt"] = sttt;
            }
        }

        public decimal get_soluongton(DataTable dt, int mabd, decimal soluong)
        {
            DataRow r = getrowbyid(dt, "id=" + mabd);
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public decimal get_slton_sttt(DataTable dt, decimal sttt, decimal soluong)
        {
            DataRow r = getrowbyid(dt, "sttt=" + sttt);
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public decimal get_slton_nguon(DataTable dt, decimal sttt, int makho, int mabd, int manguon, decimal soluong)
        {
            DataRow r = getrowbyid(dt, "sttt=" + sttt + " and makho=" + makho + " and id=" + mabd + " and manguon=" + manguon + " and soluong>0 ");
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public decimal get_slton_nguon_tutruc(DataTable dt, int makho, int mabd, int manguon, int tutruc, decimal soluong)
        {
            DataRow r = getrowbyid(dt, "makho=" + makho + " and id=" + mabd + " and manguon=" + manguon + " and tutruc=" + tutruc);
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public decimal get_slton_nguon(DataTable dt, int makho, int mabd, int manguon, decimal soluong)
        {
            DataRow r = getrowbyid(dt, "makho=" + makho + " and id=" + mabd + " and manguon=" + manguon);
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public decimal get_slton_nguon(DataTable dt, int makho, int mabd, int manguon, decimal soluong, decimal sttt)
        {
            DataRow r = getrowbyid(dt, "makho=" + makho + " and id=" + mabd + " and manguon=" + manguon + " and stt=" + sttt);
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public decimal get_slton_nguon(DataTable dt, int makho, int madoituong, int mabd, int manguon, decimal soluong)
        {
            DataRow r = getrowbyid(dt, "makho=" + makho + " and madoituong=" + madoituong + " and id=" + mabd + " and manguon=" + manguon);
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public decimal get_slton_nguon(DataTable dt, int makho, int madoituong, int mabd, int manguon, decimal soluong, decimal idx, int sttx)
        {
            DataRow r = getrowbyid(dt, "makho=" + makho + " and madoituong=" + madoituong + " and id=" + mabd + " and manguon=" + manguon + " and idx='" + idx + "' and sttx=" + sttx);
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public decimal get_soluongton(DataTable dt, int makho, int mabd, decimal soluong)
        {
            DataRow r = getrowbyid(dt, "makho=" + makho + " and id=" + mabd);
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public decimal get_soluongton(DataTable dt, int makho, int madoituong, int mabd, decimal soluong)
        {
            DataRow r = getrowbyid(dt, "makho=" + makho + " and madoituong=" + madoituong + " and id=" + mabd);
            if (r == null) return 0;
            else return decimal.Parse(r["soluong"].ToString()) + soluong;
        }

        public void updrec_tonkho(DataTable dt, int mabd, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("id=" + mabd);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_tonkho(DataTable dt, int kho, int mabd, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("makho=" + kho + " and id=" + mabd);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_tonkho_nguon(DataTable dt, int mabd, int manguon, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("id=" + mabd + " and manguon=" + manguon);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_tonkho_nguon(DataTable dt, int kho, int mabd, int manguon, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("makho=" + kho + " and id=" + mabd + " and manguon=" + manguon);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_tonkho_nguon(DataTable dt, int kho, int mabd, int manguon, decimal soluong, decimal sttt, string toantu)
        {
            DataRow[] r = dt.Select("makho=" + kho + " and id=" + mabd + " and manguon=" + manguon + " and stt=" + sttt);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_tonkho_nguon_doituong(DataTable dt, int kho, int mabd, int manguon, int madoituong, decimal soluong, string toantu)
        {
            DataRow[] r = dt.Select("makho=" + kho + " and id=" + mabd + " and manguon=" + manguon + " and madoituong=" + madoituong);
            if (r.Length > 0)
            {
                if (toantu == "+")
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                else
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
            }
        }

        public void updrec_tonkhoct(DataTable dt, decimal stt, decimal soluong, decimal sotien, string toantu)
        {
            DataRow[] r = dt.Select("stt=" + stt);
            if (r.Length > 0)
            {
                if (toantu == "+") r[0]["slxuat"] = decimal.Parse(r[0]["slxuat"].ToString()) + soluong;
                else r[0]["slxuat"] = decimal.Parse(r[0]["slxuat"].ToString()) - soluong;
            }
        }

        public void updrec_tonkhoct(DataTable dt, int kho, decimal stt, decimal soluong, decimal sotien, string toantu)
        {
            DataRow[] r = dt.Select("makho=" + kho + " and stt=" + stt);
            if (r.Length > 0)
            {
                if (toantu == "+") r[0]["slxuat"] = decimal.Parse(r[0]["slxuat"].ToString()) + soluong;
                else r[0]["slxuat"] = decimal.Parse(r[0]["slxuat"].ToString()) - soluong;
            }
        }

        public void updrec_tonkhoctht(DataTable dt, int kho, decimal stt, decimal soluong, decimal sotien, string toantu)
        {
            DataRow[] r = dt.Select("makho=" + kho + " and sttt=" + stt);
            if (r.Length > 0)
            {
                if (toantu == "+")
                {
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + soluong;
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) + sotien;
                }
                else
                {
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - soluong;
                    r[0]["soluong"] = decimal.Parse(r[0]["soluong"].ToString()) - sotien;
                }
            }
        }

        public int get_iXuat(string d_mmyy, int d_makho, decimal d_idn, int d_sttn)
        {
            ds = get_data("select mabd from " + user + d_mmyy + ".d_tonkhoct where makho=" + d_makho + " and idn=" + d_idn + " and sttn=" + d_sttn + " and slxuat>0");
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else return int.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public int get_iXuat(string d_mmyy, int d_makho, decimal d_sttt)
        {
            ds = get_data("select mabd from " + user + d_mmyy + ".d_tonkhoct where makho=" + d_makho + " and stt=" + d_sttt + " and slxuat>0");
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else return int.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public decimal get_tonkho(string d_mmyy, int d_makho, decimal d_sttt)
        {
            ds = get_data("select tondau+slnhap-slxuat as soluong from " + user + d_mmyy + ".d_tonkhoct where makho=" + d_makho + " and stt=" + d_sttt);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public decimal get_tutruc(string d_mmyy, int d_makho, int d_makp, decimal d_sttt)
        {
            ds = get_data("select tondau+slnhap-slxuat from " + user + d_mmyy + ".d_tutrucct where makho=" + d_makho + " and makp=" + d_makp + " and stt=" + d_sttt);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public int get_stt(DataTable dt, string cot)
        {
            try
            {
                if (dt.Rows.Count == 0) return 1;
                else return int.Parse(dt.Rows[dt.Rows.Count - 1][cot].ToString()) + 1;
            }
            catch { return 1; }
        }

        public int get_stt_bhyt(DataTable dt)
        {
            try
            {
                return dt.Rows.Count + 1;
            }
            catch { return 1; }
        }

        public int get_stt(DataTable dt)
        {
            if (dt.Rows.Count == 0) return 1;
            else return int.Parse(dt.Rows[dt.Rows.Count - 1]["stt"].ToString()) + 1;
        }

        public int get_stt(DataRow[] dr)
        {
            int ret = 0;
            if (dr.Length > 0)
            {
                int s2 = 1;
                for (int i = 0; i < dr.Length; i++)
                {
                    s2 = int.Parse(dr[i]["stt"].ToString());
                    if (s2 > ret) ret = s2;
                }
            }
            return ret + 1;
        }

        public DataTable get_xuatct(DataTable dtct, string mmyy, string str, decimal id, string loai, int khox, int khon, decimal duyet, int nhom)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatct.xml");
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            decimal sl, sltx, sttx, slton, dongia;
            DataTable dttonct;
            bool _bNhaptruocxuat = bNhaptruocxuat(nhom);
            foreach (DataRow r in dtct.Rows)
            {
                if (r["sttt"].ToString() != "0" && (r["sttt"].ToString() != "" && decimal.Parse(r["sttt"].ToString()) > 0)) //if (r["sttt"].ToString() != "0")
                    updrec_xuatct(ds.Tables[0], decimal.Parse(r["stt"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tennguon"].ToString(), r["tennhomcc"].ToString(), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), r["sothe"].ToString(), r["mabs"].ToString(), r["tenbs"].ToString(), r["hotenbn"].ToString(), null);
                else
                {
                    sl = decimal.Parse(r["soluong"].ToString());
                    if (loai == "QT")
                        sql = str + " and a.tondau+a.slvay-a.slquyettoan>0 and a.mabd=" + int.Parse(r["mabd"].ToString()) + " and a.manguon=" + int.Parse(r["manguon"].ToString());
                    else
                        sql = str + " and a.tondau+a.slnhap-a.slxuat>0 and a.mabd=" + int.Parse(r["mabd"].ToString()) + " and t.manguon=" + int.Parse(r["manguon"].ToString());
                    if (_bNhaptruocxuat) sql += " order by a.stt";
                    else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
                    dttonct = get_data(sql).Tables[0];
                    dr = dttonct.Select("true");
                    irec = dr.Length;
                    for (int i = 0; i < irec; i++)
                    {
                        slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        sltx = Math.Min(sl, slton);
                        if (sltx > 0)
                        {
                            stt = get_stt(ds.Tables[0]);
                            sttx = sltx * dongia;
                            dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                            updrec_xuatct(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[i]["giaban"].ToString()), dongia, int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), r["sothe"].ToString(), r["mabs"].ToString(), r["tenbs"].ToString(), r["hotenbn"].ToString(), null);
                            //
                            upd_xuatct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), sltx, r["mabs"].ToString(), r["hotenbn"].ToString(), decimal.Parse(r["giaban"].ToString()));
                            if (loai == "VA" || loai == "QT")
                                upd_tonkhoct_vay(insert, mmyy, loai, khox, khon, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                            else
                                upd_tonkhoct_xuatct(insert, mmyy, loai, khox, khon, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                            if (duyet != 0)
                                execute_data("update " + user + mmyy + ".d_dutrucapct set slthuc=slthuc+" + sltx + " where id=" + duyet + " and manguon=" + int.Parse(dr[i]["manguon"].ToString()) + " and mabd=" + int.Parse(r["mabd"].ToString()));
                            //
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                    if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "xuatct", 0, 0);
                }
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }
        //TU:22/07/2011
        public DataTable get_xuattutrucct(DataTable dtct, string mmyy, string str, decimal id, string loai, int khox, int khon, int makho, decimal duyet, int nhom)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatct.xml");
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            decimal sl, sltx, sttx, slton, dongia;
            DataTable dttonct;
            bool _bNhaptruocxuat = bNhaptruocxuat(nhom);
            foreach (DataRow r in dtct.Rows)
            {
                if (r["sttt"].ToString() != "0")
                    updrec_xuatct(ds.Tables[0], decimal.Parse(r["stt"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tennguon"].ToString(), r["tennhomcc"].ToString(), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), r["sothe"].ToString(), r["mabs"].ToString(), r["tenbs"].ToString(), r["hotenbn"].ToString(), null);
                else
                {
                    sl = decimal.Parse(r["soluong"].ToString());
                    sql = str + " and a.tondau+a.slnhap-a.slxuat>0 and a.mabd=" + int.Parse(r["mabd"].ToString()) + " and t.manguon=" + int.Parse(r["manguon"].ToString());
                    if (_bNhaptruocxuat) sql += " order by a.stt";
                    else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
                    dttonct = get_data(sql).Tables[0];
                    dr = dttonct.Select("true");
                    irec = dr.Length;
                    for (int i = 0; i < irec; i++)
                    {
                        slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        sltx = Math.Min(sl, slton);
                        if (sltx > 0)
                        {
                            stt = get_stt(ds.Tables[0]);
                            sttx = sltx * dongia;
                            dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                            updrec_xuatct(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[i]["giaban"].ToString()), dongia, int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), r["sothe"].ToString(), r["mabs"].ToString(), r["tenbs"].ToString(), r["hotenbn"].ToString(), null);
                            //
                            upd_xuatct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), sltx, r["mabs"].ToString(), r["hotenbn"].ToString(), decimal.Parse(r["giaban"].ToString()));
                            upd_tonkhoct_xuatct(insert, mmyy, loai, khon, makho, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                            upd_tonkhoct_xuatct(delete, mmyy, loai, khox, makho, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                            if (duyet != 0)
                                execute_data("update " + user + mmyy + ".d_dutrucapct set slthuc=slthuc+" + sltx + " where id=" + duyet + " and manguon=" + int.Parse(dr[i]["manguon"].ToString()) + " and mabd=" + int.Parse(r["mabd"].ToString()));
                            //
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                }
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }
        //end Tu
        public DataTable get_xuatct_mavach(DataTable dtct, string mmyy, string str, decimal id, string loai, int khox, int khon, decimal duyet, int nhom)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatct.xml");
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            decimal sl, sltx, sttx, slton, dongia;
            DataTable dttonct;
            bool _bNhaptruocxuat = bNhaptruocxuat(nhom);
            foreach (DataRow r in dtct.Rows)
            {
                sl = decimal.Parse(r["soluong"].ToString());
                if (loai == "QT")
                    sql = str + " and a.tondau+a.slvay-a.slquyettoan>0 and a.mabd=" + int.Parse(r["mabd"].ToString()) + " and a.manguon=" + int.Parse(r["manguon"].ToString());
                else
                    sql = str + " and a.tondau+a.slnhap-a.slxuat>0 and a.mabd=" + int.Parse(r["mabd"].ToString()) + " and t.manguon=" + int.Parse(r["manguon"].ToString());
                sql += " and a.stt=" + r["sttt"].ToString();
                dttonct = get_data(sql).Tables[0];
                dr = dttonct.Select("true");
                irec = dr.Length;
                for (int i = 0; i < irec; i++)
                {
                    slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                    dongia = decimal.Parse(dr[i]["giamua"].ToString());
                    sltx = Math.Min(sl, slton);
                    if (sltx > 0)
                    {
                        stt = get_stt(ds.Tables[0]);
                        sttx = sltx * dongia;
                        dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                        updrec_xuatct(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[i]["giaban"].ToString()), dongia, int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), r["sothe"].ToString(), r["mabs"].ToString(), r["tenbs"].ToString(), r["hotenbn"].ToString(), null);
                        //
                        upd_xuatct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), sltx, r["mabs"].ToString(), r["hotenbn"].ToString(), decimal.Parse(r["giaban"].ToString()));
                        if (loai == "VA" || loai == "QT")
                            upd_tonkhoct_vay(insert, mmyy, loai, khox, khon, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                        else
                            upd_tonkhoct_xuatct(insert, mmyy, loai, khox, khon, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                        if (duyet != 0)
                            execute_data("update " + user + mmyy + ".d_dutrucapct set slthuc=slthuc+" + sltx + " where id=" + duyet + " and manguon=" + int.Parse(dr[i]["manguon"].ToString()) + " and mabd=" + int.Parse(r["mabd"].ToString()));
                        //
                    }
                    sl -= sltx;
                    if (sl <= 0) break;
                }
                if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "xuatct", 0, 0);
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        public DataTable get_tutrucct_dutru(int nhom, string mmyy, int makp, string makho, string manguon, int tutruc)
        {
            string usr = user, xxx = usr + mmyy;
            upd_tontutruc(mmyy, nhom, makp);
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,t.losx,t.sothe,b.dang,";
            sql += "c.ten as tenkho,a.tondau+a.slnhap-a.slxuat as soluong,b.id,a.makho,b.bhyt,b.mahc,t.manguon,";
            sql += "1 tutruc,b.manhom,b.tenhc,a.stt as sttt ";
            sql += " from " + xxx + ".d_tutrucct a," + usr + ".d_dmbd b," + usr + ".d_dmkho c," + usr + ".d_dmnguon d," + usr + ".d_dmnhom e," + xxx + ".d_theodoi t";
            sql += " where a.stt=t.id and a.mabd=b.id and b.manhom=e.id and a.makho=c.id and t.manguon=d.id and a.makp=" + makp;
            sql += " and e.theodoi=1";
            if (tutruc == 1) sql += " and b.tutruc=1";
            if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
            if (manguon != "") sql += " and t.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
            sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + usr + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                xxx = usr + mmyys;
                sql = "select a.stt,a.makho,a.mabd,t.manguon,sum(a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end) as soluong from " + xxx + ".d_tutrucct a," + usr + ".d_dmbd b," + usr + ".d_dmnhom c," + xxx + ".d_theodoi t where a.sttt=t.id and a.mabd=b.id and b.manhom=c.id and a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end>0 and a.makp=" + makp;
                sql += " and c.theodoi=1";
                if (tutruc == 1) sql += " and b.tutruc=1";
                if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
                if (manguon != "") sql += " and t.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
                sql += " group by a.stt,a.makho,a.mabd,t.manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "sttt=" + decimal.Parse(r["stt"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoct_ncc(string mmyy, int makho)
        {
            string xxx = user + mmyy;
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.dang,t.handung,t.losx,";
            sql += "a.tondau+a.slnhap-a.slxuat as soluong,t.giamua,t.giaban,b.id,b.mahc,t.manguon,t.nhomcc,b.manhom,b.tenhc,a.stt as sttt ";
            sql += " from " + xxx + ".d_tonkhoct a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d," + user + ".d_dmnhom e," + xxx + ".d_theodoi t";
            sql += " where a.stt=t.id and a.mabd=b.id and b.manhom=e.id and a.makho=c.id and t.manguon=d.id and a.makho=" + makho;
            sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";

            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                xxx = user + mmyys;
                sql = "select a.stt,a.makho,a.mabd,t.manguon,sum(a.slxuat) soluong from " + xxx + ".d_tonkhoct a," + user + ".d_dmbd b," + user + ".d_dmnhom c," + xxx + ".d_theodoi t where a.stt=t.id and a.mabd=b.id and b.manhom=c.id and a.slxuat>0 and a.makho=" + makho;
                sql += " group by a.stt,a.makho,a.mabd,t.manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "sttt=" + decimal.Parse(r["stt"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoct(string mmyy, int makho, int manguon, int mabd, int thuoc, int nhom)
        {
            sql = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,t.tyle_ggia,t.st_ggia,b.ten as tennguon,c.ten as tennhomcc ";
            if (bGia_bh_quydinh) sql += ", case when dm.gia_bh>0 and dm.gia_bh > t.giamua then t.giamua else dm.gia_bh end as gia_bh";
            else sql += ", t.giamua as gia_bh "; //binh 290611
            sql += " from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + ".d_dmkho d," + user + mmyy + ".d_theodoi t, " + user + ".d_dmbd dm ";
            sql += " where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.makho=d.id and a.mabd=dm.id "; //binh 290611
            sql += " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.mabd=" + mabd;
            sql += " and a.tondau+a.slnhap-a.slxuat>0 and d.loai=" + thuoc;
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.stt,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tonkhoct a," + user + ".d_dmkho d," + user + mmyys + ".d_theodoi t where a.stt=t.id and a.makho=d.id and a.slxuat>0";
                sql += " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.mabd=" + mabd;
                sql += " and d.loai=" + thuoc;
                sql += " group by a.stt";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "stt=" + decimal.Parse(r["stt"].ToString()));
                    if (r1 != null) r1["slxuat"] = decimal.Parse(r1["slxuat"].ToString()) + decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }


        public DataTable get_tutrucct(string mmyy, int makp, int makho, int manguon, int mabd, int thuoc, int nhom)
        {
            sql = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,t.tyle_ggia,t.st_ggia,b.ten as tennguon,c.ten as tennhomcc ";
            if (bGia_bh_quydinh) sql += ", case when dm.gia_bh>0 and dm.gia_bh > t.giamua then t.giamua else dm.gia_bh end as gia_bh";
            else sql += ", t.giamua as gia_bh ";
            sql += " from " + user + mmyy + ".d_tutrucct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + ".d_dmkho d," + user + mmyy + ".d_theodoi t, " + user + ".d_dmbd dm";
            sql += " where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.makho=d.id and a.mabd=dm.id and a.makp=" + makp;
            sql += " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.mabd=" + mabd;
            sql += " and a.tondau+a.slnhap-a.slxuat>0 and d.loai=" + thuoc;
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.stt,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tutrucct a," + user + ".d_dmkho d," + user + mmyys + ".d_theodoi t where a.stt=t.id and a.makho=d.id and a.slxuat>0 and makp=" + makp;
                sql += " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.mabd=" + mabd;
                sql += " and d.loai=" + thuoc;
                sql += " group by a.stt";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "stt=" + decimal.Parse(r["stt"].ToString()));
                    if (r1 != null) r1["slxuat"] = decimal.Parse(r1["slxuat"].ToString()) + decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_hoantra_taisan(string mmyy, DataRow[] r, string str, decimal id, decimal idduyet, bool bPhattron, int thuoc, int loai, string file, int makp, int makhoa, string mabn, decimal mavaovien, decimal maql, decimal idkhoa, string ngay, decimal sltd, bool bBuhaophi, string ngayylenh)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatsdct.xml");
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            DataTable dttonct;
            string tenfile, sothe, usr = user, xxx = usr + mmyy;
            bool Bucstt_tronso = bBucstt_tronso(get_nhomkho);
            decimal sl, sltx, sttx, slton, dongia, tyle, dongia_bh = 0;
            string namsx = "", namsd = "";
            decimal idts = 0;
            for (int i = 0; i < r.Length; i++)
            {
                sl = decimal.Parse(r[i]["soluong"].ToString());
                sql = str + " and a.tondau+a.slnhap-a.slxuat>0 and a.makho=" + int.Parse(r[i]["makho"].ToString());
                if (decimal.Parse(r[i]["sttt"].ToString()) > 0) sql += " and a.stt=" + decimal.Parse(r[i]["sttt"].ToString());
                else sql += " and a.mabd=" + int.Parse(r[i]["mabd"].ToString()) + " and a.manguon=" + int.Parse(r[i]["manguon"].ToString());
                sql += " order by a.stt";
                dttonct = get_data(sql).Tables[0];
                dr = dttonct.Select("true", "stt");
                irec = dr.Length;
                for (int j = 0; j < irec; j++)
                {
                    slton = decimal.Parse(dr[j]["tondau"].ToString()) + decimal.Parse(dr[j]["slnhap"].ToString()) - decimal.Parse(dr[j]["slxuat"].ToString());
                    dongia = decimal.Parse(dr[j]["giamua"].ToString());
                    dongia_bh = decimal.Parse(dr[j]["gia_bh"].ToString());
                    sltx = Math.Min(sl, slton);
                    if (sltx > 0)
                    {
                        stt = get_stt(ds.Tables[0]);
                        sttx = dongia * sltx;
                        dr[j]["slxuat"] = decimal.Parse(dr[j]["slxuat"].ToString()) + sltx;
                        updrec_xuatsdct("-", ds.Tables[0], stt, decimal.Parse(dr[j]["stt"].ToString()), r[i]["doituong"].ToString(), int.Parse(r[i]["mabd"].ToString()), r[i]["ma"].ToString(), r[i]["ten"].ToString(), r[i]["tenhc"].ToString(), r[i]["dang"].ToString(), r[i]["tenkho"].ToString(), dr[j]["tennguon"].ToString(), dr[j]["tennhomcc"].ToString(), dr[j]["handung"].ToString(), dr[j]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[j]["giaban"].ToString()), decimal.Parse(dr[j]["giamua"].ToString()), int.Parse(r[i]["madoituong"].ToString()), int.Parse(r[i]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(dr[j]["nhomcc"].ToString()), r[i]["ngay"].ToString(), int.Parse(r[i]["stt"].ToString()), int.Parse(r[i]["tutruc"].ToString()), null, dongia_bh);
                        //
                        if (loai == 2)
                        {
                            upd_bucstt(mmyy, id, stt, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, int.Parse(r[i]["stt"].ToString()), decimal.Parse(dr[j]["giaban"].ToString()), 0, 1);
                            if (!bPhattron)
                            {
                                upd_thucbucstt_stt(mmyy, id, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, stt, decimal.Parse(dr[j]["giaban"].ToString()));
                                upd_tonkhoct_thucbucstt(insert, mmyy, makp, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(dr[j]["nhomcc"].ToString()), int.Parse(r[i]["mabd"].ToString()), dr[j]["handung"].ToString(), dr[j]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[j]["giaban"].ToString()), decimal.Parse(dr[j]["giamua"].ToString()));
                            }
                            tenfile = (bBuhaophi) ? xxx + ".d_haophict" : (r[i]["tutruc"].ToString() == "1") ? xxx + ".d_dutruct" : file;
                            execute_data("update " + tenfile + " set slthuc=slthuc+" + sltx / sltd + " where id=" + idduyet + " and stt=" + int.Parse(r[i]["stt"].ToString()));
                            //if (Bucstt_tronso) execute_data("update " + usr + ".d_treoduyet set slthuc=slthuc+" + sltx / sltd + " where id=" + idduyet + " and stt=" + int.Parse(r[i]["stt"].ToString()) + " and slthuc=0");
                        }
                        else
                        {
                            upd_xuatsdct(mmyy, id, stt, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(r[i]["madoituong"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, int.Parse(r[i]["stt"].ToString()), decimal.Parse(dr[j]["giaban"].ToString()), ngayylenh, dongia, true);
                            if (!bPhattron)
                            {
                                upd_thucxuat_stt(mmyy, id, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(r[i]["madoituong"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, stt, decimal.Parse(dr[j]["giaban"].ToString()), dongia);
                                upd_tonkhoct_thucxuat(insert, mmyy, makp, loai, thuoc, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx);
                            }
                            if (thuoc == 1 && (loai == 1 || loai == 3))
                            {
                                upd_tienthuoc((loai == 1) ? insert : delete, mmyy, id, mabn, mavaovien, maql, idkhoa, ngayylenh, makhoa, loai, int.Parse(r[i]["madoituong"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, decimal.Parse(dr[j]["giaban"].ToString()), decimal.Parse(dr[j]["giamua"].ToString()), decimal.Parse(dr[j]["gianovat"].ToString()), 0, dongia, "");
                                upd_theodoicongno((loai == 1) ? insert : delete, mabn, mavaovien, maql, idkhoa, int.Parse(r[i]["madoituong"].ToString()), sttx, "thuoc");
                            }
                            execute_data("update " + file + " set slthuc=slthuc+" + sltx + " where id=" + idduyet + " and stt=" + int.Parse(r[i]["stt"].ToString()));
                            if (loai != 3) upd_tonkhoth_dutru(duyet, get_nhomkho, mmyy, int.Parse(r[i]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx);
                        }
                        //
                        //if (thuoc==2)
                        //{
                        if (get_theodoi(int.Parse(dr[j]["mabd"].ToString())))
                        {
                            idts = get_id_tscd;
                            tyle = 0; namsx = ""; namsd = namsx; sothe = "";
                            foreach (DataRow r2 in get_data("select a.*,b.tyle from " + xxx + ".d_theodoi a," + xxx + ".d_theodoitscd b where a.id=b.sttt and a.id=" + decimal.Parse(dr[j]["stt"].ToString())).Tables[0].Rows)
                            {
                                tyle = decimal.Parse(r2["tyle"].ToString());
                                sothe = r2["sothe"].ToString();
                                namsx = r2["namsx"].ToString();
                                namsd = r2["namsd"].ToString();
                            }
                            upd_tscdkhoa(idts, makp, int.Parse(dr[j]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(dr[j]["nhomcc"].ToString()), decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["mabd"].ToString()), dr[j]["losx"].ToString(), sothe, sttx, tyle, namsx, namsd);
                            upd_tscdlc(idts, get_stt_tscd(idts, "d_tscdkem"), makp, ngay, "Mua mới");
                        }
                        //}
                    }
                    sl -= sltx;
                    if (sl <= 0) break;
                }
                if (sl > 0 && id != 0) upd_treo(id, int.Parse(r[i]["stt"].ToString()), int.Parse(r[i]["manguon"].ToString()), int.Parse(r[i]["mabd"].ToString()), sl, "xuatsdct", int.Parse(r[i]["makho"].ToString()), int.Parse(r[i]["madoituong"].ToString()));
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        public DataTable get_xuatban(string ngay, int nhom, int loai, string mabn, decimal sotoa, int makho)
        {
            sql = "select t.sttt as stt,d.ten tennguon,b.ma,trim(b.ten)||' '||b.hamluong ten,b.dang,s.handung,s.losx,";
            sql += "t.soluong,s.giamua,s.gianovat,t.giaban,b.id,b.mahc,s.manguon,s.nhomcc,b.manhom,b.tenhc,t.sttt,t.madoituong,b.id as mabd ";
            sql += " from xxx.d_ngtrull a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d," + user + ".d_dmnhom e,xxx.d_ngtruct t,xxx.d_theodoi s";
            sql += " where a.id=t.id and t.mabd=b.id and t.sttt=s.id and b.manhom=e.id and t.makho=c.id and s.manguon=d.id and a.loai=" + loai + " and a.nhom=" + nhom;
            if (mabn != "") sql += " and a.mabn='" + mabn + "'";
            if (sotoa != 0) sql += " and a.sotoa=" + sotoa;
            sql += " and to_char(a.ngay,'dd/mm/yyyy')='" + ngay + "' and t.makho=" + makho;
            sql += " order by b.ten";
            return get_data_mmyy(sql, ngay, ngay, true).Tables[0];
        }

        public DataTable get_xuatsdct(string mmyy, DataTable dtct, int makp, int loai, int thuoc, decimal id, string ngay, int nhom)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatsdct.xml");
            try { ds.Tables[0].Columns.Add("gia_bh", typeof(decimal)).DefaultValue = 0; }
            catch { }
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            DataTable dttonct;
            decimal sl, sltx, sttx, slton, dongia, tyle, dongia_bh = 0;
            string namsx = "", namsd = "";
            decimal idts = 0;
            string sothe;
            foreach (DataRow r in dtct.Rows)
            {
                if (r["sttt"].ToString() != "0")
                    updrec_xuatsdct("-", ds.Tables[0], decimal.Parse(r["stt"].ToString()), decimal.Parse(r["sttt"].ToString()), r["doituong"].ToString(), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), r["tennguon"].ToString(), r["tennhomcc"].ToString(), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), int.Parse(r["madoituong"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), r["ngay"].ToString(), decimal.Parse(r["stt"].ToString()), 0, null, dongia_bh);
                else
                {
                    sl = decimal.Parse(r["soluong"].ToString());
                    if (loai == 2 || (loai == 3 && thuoc == 2))
                        dttonct = get_tutrucct(mmyy, makp, int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), thuoc, nhom);
                    else
                        dttonct = get_tonkhoct(mmyy, int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), thuoc, nhom);
                    dr = dttonct.Select("true", "stt");
                    irec = dr.Length;
                    for (int i = 0; i < irec; i++)
                    {
                        slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        dongia_bh = decimal.Parse(dr[i]["gia_bh"].ToString());
                        sltx = Math.Min(sl, Math.Max(0, slton));
                        if (sltx > 0)
                        {
                            stt = get_stt(ds.Tables[0]);
                            sttx = dongia * sltx;
                            dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                            updrec_xuatsdct("-", ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), r["doituong"].ToString(), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), int.Parse(r["madoituong"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), r["ngay"].ToString(), decimal.Parse(r["stt"].ToString()), 0, null, dongia_bh);
                            //
                            upd_xuatsdct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["madoituong"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(r["mabd"].ToString()), sltx, decimal.Parse(r["stt"].ToString()), decimal.Parse(dr[i]["giaban"].ToString()), r["ngay"].ToString(), dongia_bh, true);
                            upd_thucxuat_stt(mmyy, id, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["madoituong"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(r["mabd"].ToString()), sltx, stt, decimal.Parse(dr[i]["giaban"].ToString()), dongia_bh);
                            upd_tonkhoct_thucxuat(insert, mmyy, makp, loai, thuoc, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sltx);
                            //
                            if (thuoc == 2)
                            {
                                if (get_theodoi(int.Parse(dr[i]["mabd"].ToString())))
                                {
                                    idts = get_id_tscd;
                                    tyle = 0; namsx = ""; namsd = namsx; sothe = "";
                                    foreach (DataRow r2 in get_data("select a.*,t.sothe,t.namsx,t.namsd from " + user + mmyy + ".d_theodoitscd a," + user + mmyy + ".d_theodoi t where a.sttt=t.id and a.sttt=" + decimal.Parse(dr[i]["stt"].ToString())).Tables[0].Rows)
                                    {
                                        tyle = decimal.Parse(r2["tyle"].ToString());
                                        sothe = r2["sothe"].ToString();
                                        namsx = r2["namsx"].ToString();
                                        namsd = r2["namsd"].ToString();
                                    }
                                    upd_tscdkhoa(idts, makp, int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["mabd"].ToString()), dr[i]["losx"].ToString(), sothe, sttx, tyle, namsx, namsd);
                                    upd_tscdlc(idts, get_stt_tscd(idts, "d_tscdkem"), makp, ngay, "Mua mới");
                                }
                            }
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                    if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "xuatsdct", int.Parse(r["makho"].ToString()), int.Parse(r["madoituong"].ToString()));
                }
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        public DataTable get_xuatsdct(string mmyy, DataRow[] r, string str, decimal id, decimal idduyet, bool bPhattron, int thuoc, int loai,
            string file, int makp, int makhoa, string mabn, decimal mavaovien, decimal maql, decimal idkhoa, string ngay, decimal sltd,
            bool bBuhaophi, string ngayylenh, bool bDuyettreole, int traituyen, string mabs)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatsdct.xml");
            DataColumn dc = new DataColumn();
            dc.ColumnName = "treo";
            dc.DataType = Type.GetType("System.Decimal");
            ds.Tables[0].Columns.Add(dc);
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            DataTable dttonct;
            string tenfile, sothe, xxx = user + mmyy;
            bool Bucstt_tronso = bBucstt_tronso(get_nhomkho), _bNhaptruocxuat = bNhaptruocxuat(get_nhomkho);
            decimal sl, sltx, sttx, slton, dongia, tyle, dongia_bh = 0;
            string namsx = "", namsd = "";
            decimal idts = 0;
            for (int i = 0; i < r.Length; i++)
            {
                sl = decimal.Parse(r[i]["soluong"].ToString());
                //if (loai == 2 || bBuhaophi)
                //{
                //    str = str.Replace(user + mmyy,"xxx");
                //    sql = str + " and a.tondau+a.slnhap-a.slxuat>0 and a.makho=" + int.Parse(r[i]["makho"].ToString()) + " and a.mabd=" + int.Parse(r[i]["mabd"].ToString()) + " and t.manguon=" + int.Parse(r[i]["manguon"].ToString());
                //    if (_bNhaptruocxuat) sql += " order by a.stt";
                //    else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
                //    dttonct = get_data_mmyy(sql,ngay,ngay,true).Tables[0];
                //}
                //else
                //{
                sql = str + " and a.tondau+a.slnhap-a.slxuat>0 and a.makho=" + int.Parse(r[i]["makho"].ToString()) + " and a.mabd=" + int.Parse(r[i]["mabd"].ToString()) + " and t.manguon=" + int.Parse(r[i]["manguon"].ToString());
                if (_bNhaptruocxuat) sql += " order by a.stt";
                else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
                dttonct = get_data(sql).Tables[0];
                //}
                dr = dttonct.Select("true");
                irec = dr.Length;
                for (int j = 0; j < irec; j++)
                {
                    //slton = Math.Floor(decimal.Parse(dr[j]["tondau"].ToString())) + Math.Floor(decimal.Parse(dr[j]["slnhap"].ToString())) - Math.Floor(decimal.Parse(dr[j]["slxuat"].ToString()));
                    //Thuy 27.12.2011 xét biệt dược nếu được chọn option Phát tròn(danh mục vật tư sản phẩm, hàng hóa) thì sẽ được phát lẻ
                    if (dr[j]["phattron"].ToString() != "1")//Sửa label của checkbox phát tròn thành phát lẻ, mặc định chươn trình vẫn là phát tròn,  khi check vào phát lẻ mới phát lẻ, nhưng tên field là phattron.//29.12
                        slton = decimal.Parse(dr[j]["tondau"].ToString()) + decimal.Parse(dr[j]["slnhap"].ToString()) - decimal.Parse(dr[j]["slxuat"].ToString());
                    else
                        slton = Math.Floor(decimal.Parse(dr[j]["tondau"].ToString())) + Math.Floor(decimal.Parse(dr[j]["slnhap"].ToString())) - Math.Floor(decimal.Parse(dr[j]["slxuat"].ToString()));
                    //end 27.12.2011                    
                    //
                    dongia = decimal.Parse(dr[j]["giamua"].ToString());
                    dongia_bh = decimal.Parse(dr[j]["gia_bh"].ToString());
                    //if (loai ==1 && sl == 1 && slton < 1) continue;//binh 05.03.2014 - tranh truong hop du tru 1 vien, tach thanh 2 dong dong 0.5v, dong 0.5v --> tuy nhieu neu ton kho con 2 dong, moi dong 0.5 --> thi khong the duyet duoc
                    sltx = Math.Min(sl, Math.Max(0, slton));
                    if (sltx > 0)
                    {
                        stt = get_stt(ds.Tables[0]);
                        sttx = dongia * sltx;
                        dr[j]["slxuat"] = decimal.Parse(dr[j]["slxuat"].ToString()) + sltx;
                        updrec_xuatsdct_treo("-", ds.Tables[0], stt, decimal.Parse(dr[j]["stt"].ToString()), r[i]["doituong"].ToString(), int.Parse(r[i]["mabd"].ToString()), r[i]["ma"].ToString(), r[i]["ten"].ToString(), r[i]["tenhc"].ToString(), r[i]["dang"].ToString(), r[i]["tenkho"].ToString(), dr[j]["tennguon"].ToString(), dr[j]["tennhomcc"].ToString(), dr[j]["handung"].ToString(), dr[j]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[j]["giaban"].ToString()), decimal.Parse(dr[j]["giamua"].ToString()), int.Parse(r[i]["madoituong"].ToString()), int.Parse(r[i]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(dr[j]["nhomcc"].ToString()), r[i]["ngay"].ToString(), int.Parse(r[i]["stt"].ToString()), int.Parse(r[i]["tutruc"].ToString()), null, int.Parse(r[i]["treo"].ToString()));
                        //
                        if (loai == 2 || bBuhaophi)
                        {
                            if (get_data("select * from " + xxx + ".d_theodoi where id=" + decimal.Parse(dr[j]["stt"].ToString())).Tables[0].Rows.Count == 0)
                            {
                                upd_theodoi(mmyy, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(r[i]["mabd"].ToString()), int.Parse(r[i]["manguon"].ToString()), int.Parse(dr[j]["nhomcc"].ToString()), dr[j]["handung"].ToString(), dr[j]["losx"].ToString(), "", "", "", 0, 0, 0, decimal.Parse(dr[j]["giamua"].ToString()), decimal.Parse(dr[j]["giaban"].ToString()), decimal.Parse(dr[j]["giamua"].ToString()), decimal.Parse(dr[j]["tyle_ggia"].ToString()), decimal.Parse(dr[j]["st_ggia"].ToString()));
                            }
                        }
                        if (loai == 2)
                        {
                            upd_bucstt(mmyy, id, stt, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, int.Parse(r[i]["stt"].ToString()), decimal.Parse(dr[j]["giaban"].ToString()), (decimal.Parse(r[i]["treo"].ToString()) == 1) ? decimal.Parse(r[i]["soluongyc"].ToString()) : 0, int.Parse(r[i]["madoituong"].ToString()));
                            //if (!bPhattron)
                            //{
                                upd_thucbucstt_stt(mmyy, id, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, stt, decimal.Parse(dr[j]["giaban"].ToString()));
                                upd_tonkhoct_thucbucstt(insert, mmyy, makp, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(dr[j]["nhomcc"].ToString()), int.Parse(r[i]["mabd"].ToString()), dr[j]["handung"].ToString(), dr[j]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[j]["giaban"].ToString()), decimal.Parse(dr[j]["giamua"].ToString()));
                            //}
                            tenfile = (bBuhaophi) ? "xxx.d_haophict" : (r[i]["tutruc"].ToString() == "1") ? "xxx.d_dutruct" : file;
                            if (!bDuyettreole) execute_data_mmyy("update " + tenfile + " set slthuc=slthuc+" + sltx / sltd + " where id=" + idduyet + " and stt=" + int.Parse(r[i]["stt"].ToString()), r[i]["ngayylenh"].ToString(), ngay, true);
                            //if (Bucstt_tronso) execute_data("update " + user + ".d_treoduyet set slthuc=slthuc+" + sltx / sltd + " where id=" + idduyet + " and stt=" + int.Parse(r[i]["stt"].ToString()))+" and slthuc=0");
                        }
                        else
                        {
                            upd_xuatsdct(mmyy, id, stt, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(r[i]["madoituong"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, int.Parse(r[i]["stt"].ToString()), decimal.Parse(dr[j]["giaban"].ToString()), ngayylenh, dongia_bh, true);
                            if (!bPhattron)
                            {
                                upd_thucxuat_stt(mmyy, id, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(r[i]["madoituong"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, stt, decimal.Parse(dr[j]["giaban"].ToString()), dongia_bh);
                                upd_tonkhoct_thucxuat(insert, mmyy, makp, loai, thuoc, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx);
                            }
                            else
                            {
                                //binh 05.03.2014 d_xuatsd=d_thucxuat (ca id, stt), Neu lam tron: chi can lam tron ngau nhien cua 1 bn bat ky co thuoc do
                                //vd: tong xuat thuoc A cua phieu do la 2.4 (co 3bn), kho phat 3, du 0.6 --> lay ngau nhieu 1 trong 3 bn do tang len 0.6
                                //d_xuatsdct BN thu 1: 0.8, bn thu 2: 0.8, bn thủ: 0.8 --> tong la 2.4
                                //d_thucxuat: Bn thu 1: 0.8+0.6=1.4 la bn duoc chon ngau nhien, bn thu 2: la 0.8, bn thu 3: la 0.8
                                upd_thucxuat_stt(mmyy, id, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(r[i]["madoituong"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, stt, decimal.Parse(dr[j]["giaban"].ToString()), dongia_bh);
                                //end binh 05.03.2014
                                upd_tonkhoct_thucxuat(insert, mmyy, makp, loai, thuoc, decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx);
                            }
                            if (thuoc == 1 && (loai == 1 || loai == 3))
                            {
                                upd_tienthuoc((loai == 1) ? insert : delete, mmyy, id, mabn, mavaovien, maql, idkhoa, ngayylenh, makhoa, loai, int.Parse(r[i]["madoituong"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx, decimal.Parse(dr[j]["giaban"].ToString()), decimal.Parse(dr[j]["giamua"].ToString()), decimal.Parse(dr[j]["gianovat"].ToString()), traituyen, dongia_bh, r[i]["mabs"].ToString());//gam 27/02/2012-------ThanhCuong 15/03/2012 sửa r[1]["mabs"].ToString() --> r[i]["mabs"].ToString()
                                upd_theodoicongno((loai == 1) ? insert : delete, mabn, mavaovien, maql, idkhoa, int.Parse(r[i]["madoituong"].ToString()), sttx, "thuoc");
                            }
                            //execute_data("update "+file+" set slthuc=slthuc+"+sltx+" where id="+idduyet+" and stt="+int.Parse(r[i]["stt"].ToString()));
                            execute_data_mmyy("update " + file + " set slthuc=slthuc+" + sltx + " where id=" + idduyet + " and stt=" + int.Parse(r[i]["stt"].ToString()), r[i]["ngayylenh"].ToString(), ngay, true);
                            if (loai != 3) upd_tonkhoth_dutru(duyet, get_nhomkho, mmyy, int.Parse(r[i]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(r[i]["mabd"].ToString()), sltx);
                        }
                        //
                        if (thuoc == 2)
                        {
                            if (get_theodoi(int.Parse(dr[j]["mabd"].ToString())))
                            {
                                idts = get_id_tscd;
                                tyle = 0; namsx = ""; namsd = namsx; sothe = "";
                                foreach (DataRow r2 in get_data("select a.*,t.sothe,t.namsx,t.namsd from " + xxx + ".d_theodoitscd a," + xxx + ".d_theodoi t where a.sttt=t.id and a.sttt=" + decimal.Parse(dr[j]["stt"].ToString())).Tables[0].Rows)
                                {
                                    tyle = decimal.Parse(r2["tyle"].ToString());
                                    sothe = r2["sothe"].ToString();
                                    namsx = r2["namsx"].ToString();
                                    namsd = r2["namsd"].ToString();
                                }
                                upd_tscdkhoa(idts, makp, int.Parse(dr[j]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(dr[j]["nhomcc"].ToString()), decimal.Parse(dr[j]["stt"].ToString()), int.Parse(dr[j]["mabd"].ToString()), dr[j]["losx"].ToString(), sothe, sttx, tyle, namsx, namsd);
                                execute_data("update  " + user + ".d_tscdkhoa set idduyet=" + id + " where id=" + idts);
                                upd_tscdlc(idts, get_stt_tscd(idts, "d_tscdkem"), makp, ngay, "Mua mới");
                            }
                        }
                    }
                    sl -= sltx;
                    if (sl <= 0) break;
                }
                if (sl > 0 && id != 0) upd_treo(id, int.Parse(r[i]["stt"].ToString()), int.Parse(r[i]["manguon"].ToString()), int.Parse(r[i]["mabd"].ToString()), sl, "xuatsdct", int.Parse(r[i]["makho"].ToString()), int.Parse(r[i]["madoituong"].ToString()));
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        public DataTable get_xuatsdctht(DataTable dtct, DataTable dttonct, decimal id)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatsdct.xml");
            try { ds.Tables[0].Columns.Add("gia_bh", typeof(decimal)).DefaultValue = 0; }
            catch { }
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            decimal sl, sltx, sttx, slton, dongia, dongia_bh = 0;
            foreach (DataRow r in dtct.Rows)
            {
                if (r["sttt"].ToString().Trim() != "" && r["sttt"].ToString() != "0")
                    updrec_xuatsdct("-", ds.Tables[0], decimal.Parse(r["stt"].ToString()), decimal.Parse(r["sttt"].ToString()), r["doituong"].ToString(), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), r["tennguon"].ToString(), r["tennhomcc"].ToString(), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), int.Parse(r["madoituong"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), r["ngay"].ToString(), (r["stt"].ToString() == "") ? 0 : decimal.Parse(r["stt"].ToString()), 0, null, (r["gia_bh"].ToString() == "") ? 0 : decimal.Parse(r["gia_bh"].ToString()));
                else
                {
                    sl = decimal.Parse(r["soluong"].ToString());
                    sql = "soluong>0 and makho=" + int.Parse(r["makho"].ToString()) + " and mabd=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString());
                    if (int.Parse(r["madoituong"].ToString()) != 0) sql += " and madoituong=" + int.Parse(r["madoituong"].ToString());
                    dr = dttonct.Select(sql, "sttt desc");
                    irec = dr.Length;
                    for (int i = 0; i < irec; i++)
                    {
                        slton = decimal.Parse(dr[i]["soluong"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        dongia_bh = decimal.Parse(dr[i]["gia_bh"].ToString());
                        sltx = Math.Min(sl, Math.Max(0, slton));
                        if (sltx > 0)
                        {
                            stt = get_stt(ds.Tables[0]);
                            sttx = dongia * sltx;
                            dr[i]["soluong"] = decimal.Parse(dr[i]["soluong"].ToString()) - sltx;
                            updrec_xuatsdct("-", ds.Tables[0], stt, decimal.Parse(dr[i]["sttt"].ToString()), dr[i]["doituong"].ToString(), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), int.Parse(dr[i]["madoituong"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), r["ngay"].ToString(), decimal.Parse(r["stt"].ToString()), 0, null, dongia_bh);
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                    if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "xuatsdct", int.Parse(r["makho"].ToString()), int.Parse(r["madoituong"].ToString()));
                }
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        public int iPhatthuoc_kho_khoa
        {
            get
            {
                try
                {
                    DataSet ds = get_data("select ten from " + user + ".thongso where id=375");
                    return int.Parse(ds.Tables[0].Rows[0][0].ToString());
                }
                catch { return 0; }
            }
        }

        public int iPhatthuoc_kho_khoa2
        {
            get
            {
                try
                {
                    DataSet ds = get_data("select ten from " + user + ".thongso where id=379");
                    return int.Parse(ds.Tables[0].Rows[0][0].ToString());
                }
                catch { return 0; }
            }
        }

        public bool bPhatthuoc_kho_khoa
        {
            get
            {
                try
                {
                    DataSet ds = get_data("select ten from " + user + ".thongso where id=374");
                    return int.Parse(ds.Tables[0].Rows[0][0].ToString()) == 1;
                }
                catch { return false; }
            }
        }

        public DataTable get_xuatsdctht(DataRow[] r, DataTable dttonct, decimal id, int nhom, string ngay)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatsdct.xml");
            try
            {
                ds.Tables[0].Columns.Add("gia_bh", typeof(decimal)).DefaultValue = 0;
                ds.Tables[0].Columns.Add("gianovat", typeof(decimal)).DefaultValue = 0;//gam 10/08/2011
            }
            catch { }
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            decimal sl, sltx, sttx, slton, dongia, dongia_bh;
            int iPhatthuoc_kho = 0;
            bool bPhatthuoc_kho = bPhatthuoc_kho_khoa;
            /*
            if (bPhatthuoc_kho)
            {
                sql = "select * from " + user + ".d_khonghi where ngay='" + ngay.Substring(0, 10) + "'";
                foreach (DataRow r1 in get_data(sql).Tables[0].Rows)
                {
                    iPhatthuoc_kho = int.Parse(r1["makho"].ToString());
                    break;
                }
            }*/
            for (int i = 0; i < r.Length; i++)
            {
                sl = decimal.Parse(r[i]["soluong"].ToString());
                sql = "soluong>0 ";
                if (!bPhatthuoc_kho)
                {
                    //if (iPhatthuoc_kho != 0)
                    //    sql += " and (makho=" + int.Parse(r[i]["makho"].ToString()) + " or makho=" + iPhatthuoc_kho + ")";
                    //else
                    sql += " and makho=" + int.Parse(r[i]["makho"].ToString());
                }
                if (!bPhattron_congdondoituong(nhom)) sql += " and madoituong=" + int.Parse(r[i]["madoituong"].ToString());
                sql += " and mabd=" + int.Parse(r[i]["mabd"].ToString()) + " and manguon=" + int.Parse(r[i]["manguon"].ToString());
                sql += " and ngay='" + r[i]["ngay"].ToString() + "'";
                if (r[i]["mabn"].ToString().Trim().Length >= 8) sql += " and mabn='" + r[i]["mabn"].ToString() + "'";
                if (decimal.Parse(r[i]["maql"].ToString()) > 0) sql += " and maql='" + decimal.Parse(r[i]["maql"].ToString()) + "'";
                //sql += " and stt=" + r[i]["stt"].ToString();//gam 09/11/2011
                dr = dttonct.Select(sql, "sttt desc");
                irec = dr.Length;
                if (irec == 0)
                {
                    sql = "soluong>0 ";
                    if (iPhatthuoc_kho != 0)
                        sql += " and (makho=" + int.Parse(r[i]["makho"].ToString()) + " or makho=" + iPhatthuoc_kho + ")";
                    else
                        sql += " and makho=" + int.Parse(r[i]["makho"].ToString());
                    if (!bPhattron_congdondoituong(nhom)) sql += " and madoituong=" + int.Parse(r[i]["madoituong"].ToString());
                    sql += " and mabd=" + int.Parse(r[i]["mabd"].ToString()) + " and manguon=" + int.Parse(r[i]["manguon"].ToString());
                    sql += " and ngay='" + r[i]["ngay"].ToString() + "'";
                    if (r[i]["mabn"].ToString().Trim().Length == 8) sql += " and mabn='" + r[i]["mabn"].ToString() + "'";
                    dr = dttonct.Select(sql, "sttt desc");
                    irec = dr.Length;
                }
                for (int j = 0; j < irec; j++)
                {
                    slton = decimal.Parse(dr[j]["soluong"].ToString());
                    dongia = decimal.Parse(dr[j]["giamua"].ToString());
                    dongia_bh = decimal.Parse(dr[j]["gia_bh"].ToString());//binh 290611

                    sltx = Math.Min(sl, Math.Max(0, slton));
                    if (sltx > 0)
                    {
                        stt = get_stt(ds.Tables[0]);
                        sttx = dongia * sltx;
                        dr[j]["soluong"] = decimal.Parse(dr[j]["soluong"].ToString()) + sltx;
                        try
                        {
                            updrec_xuatsdct("-", ds.Tables[0], stt, decimal.Parse(dr[i]["sttt"].ToString()), dr[j]["doituong"].ToString(), int.Parse(r[i]["mabd"].ToString()), r[i]["ma"].ToString(), r[i]["ten"].ToString(), r[i]["tenhc"].ToString(), r[i]["dang"].ToString(), r[i]["tenkho"].ToString(), dr[j]["tennguon"].ToString(), dr[j]["tennhomcc"].ToString(), dr[j]["handung"].ToString(), dr[j]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[j]["giaban"].ToString()), decimal.Parse(dr[j]["giamua"].ToString()), int.Parse(r[i]["madoituong"].ToString()), int.Parse(r[i]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(dr[j]["nhomcc"].ToString()), r[i]["ngay"].ToString(), int.Parse(r[i]["stt"].ToString()), 0, decimal.Parse(dr[j]["gianovat"].ToString()), null, dongia_bh);//gam 13/09/2011 decimal.Parse(dr[j]["sttt"].ToString() --> sửa thành decimal.Parse(dr[i]["sttt"].ToString()
                        }
                        catch
                        {
                            updrec_xuatsdct("-", ds.Tables[0], stt, decimal.Parse(dr[j]["sttt"].ToString()), dr[j]["doituong"].ToString(), int.Parse(r[i]["mabd"].ToString()), r[i]["ma"].ToString(), r[i]["ten"].ToString(), r[i]["tenhc"].ToString(), r[i]["dang"].ToString(), r[i]["tenkho"].ToString(), dr[j]["tennguon"].ToString(), dr[j]["tennhomcc"].ToString(), dr[j]["handung"].ToString(), dr[j]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[j]["giaban"].ToString()), decimal.Parse(dr[j]["giamua"].ToString()), int.Parse(r[i]["madoituong"].ToString()), int.Parse(r[i]["makho"].ToString()), int.Parse(dr[j]["manguon"].ToString()), int.Parse(dr[j]["nhomcc"].ToString()), r[i]["ngay"].ToString(), int.Parse(r[i]["stt"].ToString()), 0, decimal.Parse(dr[j]["gianovat"].ToString()), null, dongia_bh);
                        }
                    }
                    sl -= sltx;
                    if (sl <= 0) break;
                }
                if (sl > 0 && id != 0) upd_treo(id, int.Parse(r[i]["stt"].ToString()), int.Parse(r[i]["manguon"].ToString()), int.Parse(r[i]["mabd"].ToString()), sl, "xuatsdct", int.Parse(r[i]["makho"].ToString()), int.Parse(r[i]["madoituong"].ToString()));
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        public DataTable get_tonkhoct(string mmyy, int makho, int manguon, int mabd, int nhom)
        {
            sql = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,b.ten as tennguon,c.ten as tennhomcc,d.giaban as giaban_,d.giaban2 ";
            if (bGia_bh_quydinh) sql += ", case when d.gia_bh>0 and d.gia_bh > t.giamua then t.giamua else d.gia_bh end as gia_bh";
            else sql += ", t.giamua as gia_bh ";
            sql += " from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + ".d_dmbd d," + user + mmyy + ".d_theodoi t ";
            sql += " where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.mabd=d.id";
            sql += " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.mabd=" + mabd + " and a.tondau+a.slnhap-a.slxuat>0";
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.stt,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tonkhoct a," + user + ".d_dmkho d," + user + mmyys + ".d_theodoi t where a.stt=t.id and a.makho=d.id and a.slxuat>0";
                sql += " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.mabd=" + mabd;
                sql += " group by a.stt";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "stt=" + decimal.Parse(r["stt"].ToString()));
                    if (r1 != null) r1["slxuat"] = decimal.Parse(r1["slxuat"].ToString()) + decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }
        public DataTable get_tonkhoct(string mmyy, int makho, int manguon, int mabd, int nhom, decimal sttt)
        {
            sql = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,b.ten as tennguon,c.ten as tennhomcc,d.giaban as giaban_,d.giaban2 ";
            if (bGia_bh_quydinh) sql += ", case when d.gia_bh>0 and d.gia_bh > t.giamua then t.giamua else d.gia_bh end as gia_bh";
            else sql += ", t.giamua as gia_bh "; //binh 290611
            sql += " from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + ".d_dmbd d," + user + mmyy + ".d_theodoi t ";
            sql += " where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.mabd=d.id"; //binh 290611
            sql += " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.mabd=" + mabd + " and a.tondau+a.slnhap-a.slxuat>0";
            if (sttt > 0) sql += " and a.stt=" + sttt;
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.stt,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tonkhoct a," + user + ".d_dmkho d," + user + mmyys + ".d_theodoi t where a.stt=t.id and a.makho=d.id and a.slxuat>0";
                sql += " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.mabd=" + mabd;
                sql += " group by a.stt";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "stt=" + decimal.Parse(r["stt"].ToString()));
                    if (r1 != null) r1["slxuat"] = decimal.Parse(r1["slxuat"].ToString()) + decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }
        public DataTable get_ngtruct(string mmyy, DataRow[] dtct, decimal id, decimal iddutru)
        {
            int nhom = get_nhomkho;
            bool bGiaban_dot = bGiaban_theodot(nhom);
            bool bGiaban_noi_ngoai = bGiaban_noi_ngtru(nhom);
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_ngtruct.xml");
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            DataTable dttonct;
            decimal sl, sltx, sttx, slton, dongia, _giaban = 0;
            foreach (DataRow r in dtct)
            {
                if (r["sttt"].ToString() != "0")
                    updrec_ngtruct(ds.Tables[0], decimal.Parse(r["stt"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), r["tennguon"].ToString(), r["tennhomcc"].ToString(), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["sotienban"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), null, decimal.Parse(r["soluongcu"].ToString()), decimal.Parse(r["sotiencu"].ToString()), r["cachdung"].ToString());
                else
                {
                    dttonct = get_tonkhoct(mmyy, int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), nhom);
                    sl = decimal.Parse(r["soluong"].ToString());
                    dr = dttonct.Select("true", "");
                    irec = dr.Length;
                    for (int i = 0; i < irec; i++)
                    {
                        slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        sltx = Math.Min(sl, Math.Max(0, slton));
                        if (sltx > 0)
                        {
                            stt = get_stt(ds.Tables[0]);
                            sttx = dongia * sltx;
                            dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                            updrec_ngtruct(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, (bGiaban_dot) ? decimal.Parse(dr[i]["giaban"].ToString()) : decimal.Parse(dr[i]["giaban_"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), sltx * ((bGiaban_dot) ? decimal.Parse(dr[i]["giaban"].ToString()) : decimal.Parse(dr[i]["giaban_"].ToString())), int.Parse(r["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), null, decimal.Parse(r["soluongcu"].ToString()), decimal.Parse(r["sotiencu"].ToString()), r["cachdung"].ToString());
                            //
                            _giaban = (bGiaban_noi_ngoai) ? decimal.Parse(dr[i]["giaban2"].ToString()) : (bGiaban_dot) ? decimal.Parse(dr[i]["giaban"].ToString()) : decimal.Parse(dr[i]["giaban_"].ToString());
                            upd_ngtruct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["mabd"].ToString()), sltx, _giaban, int.Parse(r["madoituong"].ToString()), (r["no"].ToString().ToLower() == "true") ? 0 : 1, r["cachdung"].ToString());
                            execute_data("update " + user + mmyy + ".d_thuocbhytct set slthuc=slthuc+" + sltx + " where id=" + iddutru + " and mabd=" + int.Parse(dr[i]["mabd"].ToString()) + " and makho=" + int.Parse(dr[i]["makho"].ToString()));
                            upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(dr[i]["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                            //
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                    if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "ngtruct", int.Parse(r["makho"].ToString()), 0);
                }
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        public DataTable get_ngtruct(string mmyy, DataTable dtct, decimal id)
        {
            int nhom = get_nhomkho;
            bool bGiaban_dot = bGiaban_theodot(nhom);
            bool bGiaban_noi_ngoai = bGiaban_noi_ngtru(nhom);
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_ngtruct.xml");
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            DataTable dttonct;
            decimal sl, sltx, sttx, slton, dongia, _giaban = 0;
            foreach (DataRow r in dtct.Select("soluong>0", "stt"))
            {
                if (r["sttt"].ToString() != "0")
                    updrec_ngtruct(ds.Tables[0], decimal.Parse(r["stt"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), r["tennguon"].ToString(), r["tennhomcc"].ToString(), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["sotienban"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), null, decimal.Parse(r["soluongcu"].ToString()), decimal.Parse(r["sotiencu"].ToString()), r["cachdung"].ToString());
                else
                {
                    dttonct = get_tonkhoct(mmyy, int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), nhom);
                    sl = decimal.Parse(r["soluong"].ToString());
                    dr = dttonct.Select("true", "");
                    irec = dr.Length;
                    for (int i = 0; i < irec; i++)
                    {
                        slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        sltx = Math.Min(sl, Math.Max(0, slton));
                        if (sltx > 0)
                        {
                            stt = get_stt(ds.Tables[0]);
                            sttx = dongia * sltx;
                            dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                            updrec_ngtruct(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, (bGiaban_dot) ? decimal.Parse(dr[i]["giaban"].ToString()) : decimal.Parse(r["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), sltx * ((bGiaban_dot) ? decimal.Parse(dr[i]["giaban"].ToString()) : decimal.Parse(r["giaban"].ToString())), int.Parse(r["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), null, decimal.Parse(r["soluongcu"].ToString()), decimal.Parse(r["sotiencu"].ToString()), r["cachdung"].ToString());
                            _giaban = (bGiaban_noi_ngoai) ? decimal.Parse(dr[i]["giaban2"].ToString()) : (bGiaban_dot) ? decimal.Parse(dr[i]["giaban"].ToString()) : decimal.Parse(dr[i]["giaban_"].ToString());
                            upd_ngtruct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["mabd"].ToString()), sltx, _giaban, (r["MADOITUONG"].ToString()=="")?2:int.Parse(r["MADOITUONG"].ToString()), 0, r["cachdung"].ToString());
                            upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(dr[i]["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                    if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "ngtruct", int.Parse(r["makho"].ToString()), 0);
                }
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }
        public DataTable get_ngtruct_mavach(string mmyy, DataTable dtct, decimal id)
        {
            int nhom = get_nhomkho;
            bool bGiaban_dot = bGiaban_theodot(nhom);
            bool bGiaban_noi_ngoai = bGiaban_noi_ngtru(nhom);
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_ngtruct.xml");
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            DataTable dttonct;
            decimal sl, sltx, sttx, slton, dongia, _giaban = 0;
            foreach (DataRow r in dtct.Select("soluong>0", "stt"))
            {

                dttonct = get_tonkhoct(mmyy, int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), nhom, decimal.Parse(r["sttt"].ToString()));
                sl = decimal.Parse(r["soluong"].ToString());
                dr = dttonct.Select("true", "");
                irec = dr.Length;
                for (int i = 0; i < irec; i++)
                {
                    slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                    dongia = decimal.Parse(dr[i]["giamua"].ToString());
                    sltx = Math.Min(sl, Math.Max(0, slton));
                    if (sltx > 0)
                    {
                        stt = get_stt(ds.Tables[0]);
                        sttx = dongia * sltx;
                        dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                        updrec_ngtruct(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(),
                            r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), dr[i]["tennguon"].ToString(),
                            dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx,
                            (bGiaban_dot) ? decimal.Parse(dr[i]["giaban"].ToString()) : decimal.Parse(r["giaban"].ToString()),
                            decimal.Parse(dr[i]["giamua"].ToString()), sltx * ((bGiaban_dot) ? decimal.Parse(dr[i]["giaban"].ToString()) : decimal.Parse(r["giaban"].ToString())),
                            int.Parse(r["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), null,
                            decimal.Parse(r["soluongcu"].ToString()), decimal.Parse(r["sotiencu"].ToString()), r["cachdung"].ToString());
                        //
                        _giaban = (bGiaban_noi_ngoai) ? decimal.Parse(dr[i]["giaban2"].ToString()) : (bGiaban_dot) ? decimal.Parse(dr[i]["giaban"].ToString()) : decimal.Parse(dr[i]["giaban_"].ToString());
                        upd_ngtruct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["mabd"].ToString()), sltx, _giaban, r["cachdung"].ToString());
                        upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(dr[i]["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                        //
                    }
                    sl -= sltx;
                    if (sl <= 0) break;
                }
                if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "ngtruct", int.Parse(r["makho"].ToString()), 0);
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        public DataTable get_ngtruct_giaban(string mmyy, DataTable dtct, decimal id)
        {
            int nhom = get_nhomkho;
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_ngtruct.xml");
            ds.Tables[0].Columns.Add("madoituong", typeof(decimal)).DefaultValue = 1;
            ds.Tables[0].Columns.Add("paid", typeof(decimal)).DefaultValue = 0;
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            DataTable dttonct;
            decimal sl, sltx, sttx, slton, dongia, _giaban = 0;
            foreach (DataRow r in dtct.Select("soluong>0", "stt"))
            {
                if (r["sttt"].ToString() != "0")
                    updrec_ngtruct_nhathuoc(ds.Tables[0], decimal.Parse(r["stt"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), r["tennguon"].ToString(), r["tennhomcc"].ToString(), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["sotienban"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), null, decimal.Parse(r["soluongcu"].ToString()), decimal.Parse(r["sotiencu"].ToString()), decimal.Parse(r["madoituong"].ToString()));
                else
                {
                    dttonct = get_tonkhoct(mmyy, int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), nhom);
                    sl = decimal.Parse(r["soluong"].ToString());
                    dr = dttonct.Select("true", "");
                    irec = dr.Length;
                    for (int i = 0; i < irec; i++)
                    {
                        slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        sltx = Math.Min(sl, Math.Max(0, slton));
                        if (sltx > 0)
                        {
                            stt = get_stt(ds.Tables[0]);
                            sttx = dongia * sltx;
                            dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                            _giaban = decimal.Parse(r["giaban"].ToString());
                            updrec_ngtruct_nhathuoc(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, _giaban, decimal.Parse(dr[i]["giamua"].ToString()), sltx * _giaban, int.Parse(r["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), null, decimal.Parse(r["soluongcu"].ToString()), decimal.Parse(r["sotiencu"].ToString()), decimal.Parse(r["madoituong"].ToString()));
                            //

                            upd_ngtruct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["mabd"].ToString()), sltx, _giaban, int.Parse(r["madoituong"].ToString()), int.Parse(r["paid"].ToString()), r["cachdung"].ToString());
                            upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(dr[i]["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                            //
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                    if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "ngtruct", int.Parse(r["makho"].ToString()), 0);
                }
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }
        public DataTable get_tonkhoct_bhyt(string mmyy, string makho, string kho, string manguon, int madoituong, int nhom)
        {
            sql = "select a.*,b.ten as tennguon,c.ten as tennhomcc,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,";
            sql += "d.giaban as giaban_,case when d.gia_bh =0 then t.giamua else d.gia_bh end as gia_bh from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmnguon b," + user + ".d_dmnx c";
            sql += "," + user + ".d_dmbd d," + user + mmyy + ".d_theodoi t where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id ";
            sql += " and a.mabd=d.id";
            if (madoituong == 1) sql += " and d.bhyt<>0";
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and t.manguon in (" + manguon + ")";
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            return tmp;
        }

        public DataTable get_tonkhoct_bhyt(string mmyy, int makho, int manguon, int madoituong, int mabd, int nhom)
        {
            sql = "select a.*,b.ten as tennguon,c.ten as tennhomcc,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,";
            sql += "d.giaban as giaban_,case when d.gia_bh =0 then t.giamua else d.gia_bh end as gia_bh";
            sql += " from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + ".d_dmbd d ";
            sql += "," + user + mmyy + ".d_theodoi t where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.mabd=d.id";
            if (madoituong == 1) sql += " and d.bhyt<>0";
            sql += " and a.mabd=" + mabd + " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.tondau+a.slnhap-a.slxuat>0";
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            return tmp;
        }


        public DataTable get_bhytthuoc(string ngay, string d_mmyy, DataRow[] r, decimal id, int madoituong)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_bhytthuoc.xml");
            decimal stt = 0;
            int irec = 0, nhom = get_nhomkho;
            DataRow[] dr;
            DataTable dttonct;
            decimal sl, sltx, sttx, slton, dongia;
            for (int j = 0; j < r.Length; j++)
            {
                sl = decimal.Parse(r[j]["soluong"].ToString());
                dttonct = get_tonkhoct_bhyt(d_mmyy, int.Parse(r[j]["makho"].ToString()), int.Parse(r[j]["manguon"].ToString()), madoituong, int.Parse(r[j]["mabd"].ToString()), nhom);
                dr = dttonct.Select("true", "");
                irec = dr.Length;
                for (int i = 0; i < irec; i++)
                {
                    slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                    dongia = decimal.Parse(dr[i]["giamua"].ToString());
                    sltx = Math.Min(sl, Math.Max(0, slton));
                    if (sltx > 0)
                    {
                        stt = get_stt(ds.Tables[0]);
                        sttx = dongia * sltx;
                        dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                        updrec_bhytthuoc(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["mabd"].ToString()), r[j]["ma"].ToString(), r[j]["ten"].ToString(), r[j]["tenhc"].ToString(), r[j]["dang"].ToString(), r[j]["tenkho"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[i]["giaban_"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), sttx, r[j]["cachdung"].ToString(), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), null);
                        //
                        upd_bhytthuoc(d_mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["mabd"].ToString()), sltx, r[j]["cachdung"].ToString(), decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["gia_bh"].ToString()));
                        upd_tonkhoct_xuat(insert, d_mmyy, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(dr[i]["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban_"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                        execute_data("update " + user + mmyy(ngay) + ".d_thuocbhytct set slthuc=slthuc+" + sltx + " where id=" + id + " and mabd=" + int.Parse(dr[i]["mabd"].ToString()) + " and makho=" + int.Parse(dr[i]["makho"].ToString()));
                        upd_tonkhoth_dutru(duyet, get_nhomkho, d_mmyy, int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["mabd"].ToString()), sltx);
                        //
                    }
                    sl -= sltx;
                    if (sl <= 0) break;
                }
                if (sl > 0 && id != 0) upd_treo(id, int.Parse(r[j]["stt"].ToString()), int.Parse(r[j]["manguon"].ToString()), int.Parse(r[j]["mabd"].ToString()), sl, "bhythuoc", int.Parse(r[j]["makho"].ToString()), 0);
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        public DataTable get_bhytthuoc(string mmyy, DataTable dtct, decimal id, int madoituong)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_bhytthuoc.xml");
            decimal stt = 0;
            int irec = 0, nhom = get_nhomkho;
            DataRow[] dr;
            decimal sl, sltx, sttx, slton, dongia;
            DataTable dttonct;
            foreach (DataRow r in dtct.Rows)
            {
                if (r["sttt"].ToString() != "0")
                    updrec_bhytthuoc(ds.Tables[0], decimal.Parse(r["stt"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), r["tennguon"].ToString(), r["tennhomcc"].ToString(), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["soluong"].ToString()) * decimal.Parse(r["giaban"].ToString()), r["cachdung"].ToString(), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), null);
                sl = decimal.Parse(r["soluong"].ToString());
                dttonct = get_tonkhoct_bhyt(mmyy, int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), madoituong, int.Parse(r["mabd"].ToString()), nhom);
                dr = dttonct.Select("true", "stt");
                irec = dr.Length;
                for (int i = 0; i < irec; i++)
                {
                    slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                    try//kiem tra neu co cot ma doi tuong moi kiem tra
                    {
                        if (r["madoituong"].ToString() == "3")
                        {
                            dongia = 0;
                        }
                        else
                        {
                            dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        }
                    }
                    catch
                    {
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                    }
                    sltx = Math.Min(sl, Math.Max(0, slton));
                    if (sltx > 0)
                    {
                        stt = get_stt(ds.Tables[0]);
                        sttx = dongia * sltx;
                        dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                        updrec_bhytthuoc(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[i]["giaban_"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), sttx, r["cachdung"].ToString(), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), null);
                        //
                        upd_bhytthuoc(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["mabd"].ToString()), sltx, r["cachdung"].ToString(), dongia, decimal.Parse(dr[i]["gia_bh"].ToString()));//gam 10/10/2011 sửa ["giaban"].ToString()--> dongia
                        upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban_"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                        if (r["cachdung"].ToString() != "") upd_dmcachdung(r["cachdung"].ToString());
                        //
                    }
                    sl -= sltx;
                    if (sl <= 0) break;
                }
                if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "bhytthuoc", int.Parse(r["makho"].ToString()), 0);
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }
        public DataTable get_bhytcls(string mmyy, decimal id, int madoituong, string s_idcomputer, string s_mabn, decimal l_maql, decimal l_mavaovien, string s_makp, string s_ngay)
        {

            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_bhytthuoc.xml");

            DataTable dtct;
            string sql = " select a.maql, case when c.maql is null then 0 else c.maql end as j, to_number('1') as stt,a.id as sttt,a.mavp as mabd,b.ma,b.ten,";
            sql += " case when a.chandoan='' or a.chandoan=c.chandoan then c.chandoan else a.chandoan||';'||c.chandoan end as tenhc,b.dvt as dang,";
            sql += " case when a.maicd='' or a.maicd=c.maicd then c.maicd else a.maicd||';'||c.maicd end as tenkho,";
            sql += " case when a.mabs='' then c.mabs else a.mabs end as tennguon,";
            sql += " a.mabs as tennhomcc,a.makp as handung,a.mabn as losx,a.soluong,a.dongia+a.vattu as dongia,";
            sql += " a.soluong*(a.dongia+a.vattu) as sotien,0 as giaban,0 as giamua,0 as sotienmua,' ' as cachdung,0 as makho,0 as manguon,0 as nhomcc,a.done,to_char(a.ngay,'dd/mm/yyyy') as ngay,to_char(a.ngayud,'dd/mm/yyyy hh24:mi') as ngayud,a.mabn ";
            //sql += " from xxx.v_chidinh a left join xxx.benhanpk c on a.maql=c.maql left join "+user+".v_giavp b on a.mavp=b.id ";
            sql += " from " + user + mmyy + ".v_chidinh a left join " + user + ".vbenhanpk_" + s_idcomputer + " c on a.maql=c.maql left join " + user + ".v_giavp b on a.mavp=b.id ";
            sql += " where a.paid=0 and a.mabn='" + s_mabn + "' and to_char(a.ngay,'dd/mm/yyyy')='" + s_ngay.Substring(0, 10) + "'";//to_char(a.ngay,'dd/mm/yyyy')='"+s_ngay.Substring(0,10)+"'";
            //if (bDuyetcls) sql += " and a.duyet=1";
            sql += " and a.makp='" + s_makp + "'";
            if (l_maql != 0) sql += " and a.maql in (" + l_maql + "," + l_mavaovien + ")";
            sql += " and a.loaiba<>1";
            sql += " and a.madoituong=" + madoituong;
            dtct = get_data(sql).Tables[0];
            int j = 0;
            foreach (DataRow r in dtct.Rows)
            {
                updrec_bhytthuoc(ds.Tables[0], decimal.Parse(r["stt"].ToString()), 0, int.Parse(r["mabd"].ToString()),
                    r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(),
                    r["tenkho"].ToString(), r["tennguon"].ToString(), r["tennhomcc"].ToString(), r["handung"].ToString(),
                    r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["dongia"].ToString()),
                    decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()),
                    decimal.Parse(r["soluong"].ToString()) * decimal.Parse(r["giaban"].ToString()), r["cachdung"].ToString(),
                    int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), null);
                upd_bhytcls(mmyy, id, j + 1, int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()),
                    decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["sttt"].ToString()));
                j++;
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }
        /*		
                1 : dmbd
                2 : dmnx
                3 : dmhang
                4 : dlogin
                5 : nhapll
                6 : xuatll
                7 : ngtrull
                8 : xuatsd
                9 : tonkho
        */

        private int get_id_dmcomputer
        {
            get
            {
                int i = 1;
                ds = get_data("select max(id) as id from " + user + ".dmcomputer");
                if (ds.Tables[0].Rows[0]["id"].ToString() == "") i = 1;//linh 31052012
                else i = int.Parse(ds.Tables[0].Rows[0]["id"].ToString()) + 1;
                int i_cn = i_Chinhanh_hientai;
                return int.Parse(i_cn.ToString() + i.ToString().PadLeft(5, '0'));
            }
            //binh04062011
            //get
            //{
            //    DataSet lds = get_data("select id from " + user + ".dmcomputer");
            //    DataRow dr;
            //    int i_id = 1;
            //    for (int j = 1; j < 1000; j++)
            //    {
            //        i_id = j;
            //        dr = getrowbyid(lds.Tables[0], "id=" + j);
            //        if (dr == null) break;
            //    }
            //    if (i_id >= 1000)
            //    {
            //        lds = get_data("select max(id) as id from " + user + ".dmcomputer");
            //        if (lds.Tables[0].Rows[0]["id"].ToString() == "") i_id = 1;
            //        else i_id = int.Parse(lds.Tables[0].Rows[0]["id"].ToString()) + 1;
            //    }
            //    if (m == null) m = new LibMedi.AccessData();
            //    if (m.bQuanly_Theo_Chinhanh)
            //    {
            //        int i_cn = i_Chinhanh_hientai;
            //        i_id = int.Parse(i_cn.ToString() + i_id.ToString().PadLeft(3, '0'));
            //    }
            //    return i_id;
            //}
        }

        public void upd_dmcomputer(string m_computer)
        {
            sql = "update " + user + ".dmcomputer set computer=:m_computer where computer=:m_computer";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_computer", NpgsqlDbType.Varchar, 20).Value = m_computer;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                con.Close(); con.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".dmcomputer(id,computer) values (" + get_id_dmcomputer + ",'" + m_computer + "')";
                    execute_data(sql);
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "dmcomputer");
            }
            finally
            {
                con.Close(); con.Dispose();
            }
        }
        public decimal get_id_xuatban
        {
            get
            {
                return getidyymmdd(7);
                //return getidyymmddhhmiss_stt_computer;// decimal.Parse(iRownum.ToString().PadLeft(3, '0') + get_capid_may(7, sComputer).ToString().PadLeft(9, '0')); 
            }
        }
        public decimal get_id_dmbd { get { return get_capid(1); } }
        public decimal get_id_dmnx { get { return get_capid(2); } }
        public decimal get_id_dmnoisc { get { return get_capid(19); } }
        public decimal get_id_dmhang { get { return get_capid(3); } }
        public decimal get_id_dmnhom { get { return get_capid(100); } }
        public decimal get_id_dlogin { get { return get_capid(-30, "capid"); } }
        public decimal get_id_nhap
        {
            get
            {
                return getidyymmdd(5);
            }
        }
        public decimal get_id_xuat
        {
            get
            {
                return getidyymmdd(6);
            }
        }
        public decimal get_id_ngtru
        {
            get
            {
                return getidyymmdd(7);
            }
        }
        public decimal get_id_xuatsd
        {
            get
            {
                return getidyymmdd(8);
            }
        }
        public decimal get_id_tonkho
        {
            get
            {
                return getidyymmdd(9);
            }
        }
        public decimal get_id_toathuoc
        {
            get
            {
                return getidyymmdd(11);
            }
        }
        public decimal get_id_bhyt
        {
            get
            {
                return getidyymmdd(12);
            }
        }

        public decimal getidyymmdd(int id)
        {
            return decimal.Parse(getyymmdd() + get_capid_may(id, sComputer).ToString().PadLeft(9, '0') + iRownum.ToString().PadLeft(3, '0'));
        }

        public decimal get_id_dmnuoc { get { return get_capid(13); } }
        public decimal get_id_duyet
        {
            get
            {
                return getidyymmdd(14);
            }
        }
        public decimal get_id_ctghiso
        {
            get
            {
                return getidyymmdd(15);
            }
        }
        public decimal get_id_chuyen
        {
            get
            {
                return getidyymmdd(16);
            }
        }
        public decimal get_id_phieuxuat()
        {
            return getidyymmdd(17);
        }
        public decimal get_id_donthuoc_bacsy()
        {
            return getidyymmdd(18);
        }
        public decimal get_id_tscd
        {
            get
            {
                return getidyymmdd(20);
            }
        }

        public decimal get_id_dmthaull
        {
            get
            {
                return getidyymmdd(30);
            }
        }

        public decimal get_id_dmthauct
        {
            get
            {
                return getidyymmdd(31);
            }
        }

        public decimal get_id_phieuxuat(string d_ngay, int d_makp, int d_nhom, string d_loai, string d_phieu, string d_kho, string d_mmyy)
        {
            sql = "select id from " + user + d_mmyy + ".d_phieuxuat where makp=" + d_makp + " and nhom=" + d_nhom;
            if (d_loai != "") sql += " and loai='" + d_loai + "'";
            if (d_phieu != "") sql += " and phieu='" + d_phieu + "'";
            if (d_kho != "") sql += " and kho='" + d_kho + "'";
            sql += " and to_char(ngay,'dd/mm/yyyy')='" + d_ngay.Substring(0, 10) + "'";
            ds = get_data(sql);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else return decimal.Parse(ds.Tables[0].Rows[0]["id"].ToString());
        }
        public string get_phieuxuat(string d_mmyy, int d_nhom, string d_kho)
        {
            int ret = 1;
            sql = "select max(to_number(substr(soct,1,4),'9999')) as so from " + user + d_mmyy + ".d_phieuxuat where nhom=" + d_nhom;
            if (d_kho != "") sql += " and kho='" + d_kho + "'";
            ds = get_data(sql);
            if (ds.Tables[0].Rows[0]["so"].ToString() != "") ret = int.Parse(ds.Tables[0].Rows[0]["so"].ToString()) + 1;
            return ret.ToString().PadLeft(4, '0');
        }

        public string get_phieuxuat(string d_mmyy, decimal d_id)
        {
            sql = "select soct from " + user + d_mmyy + ".d_phieuxuat where id=" + d_id;
            ds = get_data(sql);
            return ds.Tables[0].Rows[0]["soct"].ToString();
        }

        public int get_madoituong(decimal d_maql)
        {
            try
            {
                ds = get_data("select madoituong from " + user + ".benhandt where maql=" + d_maql);
                return int.Parse(ds.Tables[0].Rows[0][0].ToString());
            }
            catch { return 0; }
        }

        public decimal get_cholai_bhyt(string d_nam, string d_mabn, string d_makho)
        {
            if (d_nam == "") return 0;
            sql = "select a.id,to_char(a.ngay,'yyyymmdd') as ngay from xxx.d_thuocbhytll a,xxx.d_thuocbhytct b";
            sql += " where a.id=b.id and a.mabn='" + d_mabn + "'";
            if (d_makho != "") sql += " and b.makho in (" + d_makho.Substring(0, d_makho.Length - 1) + ")";
            sql += " order by ngay desc";
            ds = get_data_nam_dec(d_nam, sql);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else return decimal.Parse(ds.Tables[0].Rows[0]["id"].ToString());
        }

        public decimal get_cholai(string d_tu, string d_den, string d_mabn, int d_phieu, string d_t1, string d_t2, string d_makho)
        {
            decimal ret = 0;
            sql = "select a.id,to_char(b.ngay,'yyyymmdd') as ngay from xxx." + d_t1 + " a,xxx." + d_t2 + " c,xxx.d_duyet b where a.id=c.id and a.idduyet=b.id  and a.mabn='" + d_mabn + "'";
            if (d_phieu != 0) sql += " and b.phieu=" + d_phieu;
            if (d_makho != "") sql += " and c.makho in (" + d_makho.Substring(0, d_makho.Length - 1) + ")";
            ds = get_thuoc(d_tu, d_den, sql);
            if (ds.Tables[0].Rows.Count > 0)
                foreach (DataRow r in ds.Tables[0].Select("true", "ngay desc"))
                {
                    ret = decimal.Parse(r["id"].ToString());
                    break;
                }
            return ret;
        }
        public decimal get_cholai(string d_tu, string d_den, string d_mabn, int d_phieu, string d_t1, string d_t2, string d_makho, int d_loaiphieu)
        {
            decimal ret = 0;
            sql = "select a.id,to_char(b.ngay,'yyyymmdd') as ngay from xxx." + d_t1 + " a,xxx." + d_t2 + " c,xxx.d_duyet b where a.id=c.id and a.idduyet=b.id  and a.mabn='" + d_mabn + "'";
            if (d_loaiphieu != 0) sql += " and b.loai=" + d_loaiphieu;
            if (d_phieu != 0) sql += " and b.phieu=" + d_phieu;
            if (d_makho != "") sql += " and c.makho in (" + d_makho.Substring(0, d_makho.Length - 1) + ")";
            ds = get_thuoc(d_tu, d_den, sql);
            if (ds.Tables[0].Rows.Count > 0)
                foreach (DataRow r in ds.Tables[0].Select("true", "ngay desc"))
                {
                    ret = decimal.Parse(r["id"].ToString());
                    break;
                }
            return ret;
        }

        public int get_duyet(string d_mmyy, decimal d_id)
        {
            try
            {
                //ds=get_data("select done from "+user+d_mmyy+".d_duyet where id="+d_id);
                ds = get_data("select done from " + user + d_mmyy + ".d_duyetkho where idduyet=" + d_id + " order by done desc");
                if (ds.Tables[0].Rows.Count == 0) return 0;
                else return int.Parse(ds.Tables[0].Rows[0][0].ToString());
            }
            catch { return 0; }
        }

        public bool upd_khoaso(int d_nhom, string d_mmyy, int d_userid)
        {
            sql = "update " + user + ".d_khoaso set userid=:d_userid where nhom=:d_nhom and mmyy=:d_mmyy";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_khoaso (nhom,mmyy,userid) values (:d_nhom,:d_mmyy,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_khoaso");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        private decimal get_capid_may(int m_ma, string m_computer)
        {
            sql = "update " + user + ".d_capid set id=id+1 where ma=:m_ma and computer=:m_computer";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            con.Open();
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("m_ma", NpgsqlDbType.Numeric).Value = m_ma;
            cmd.Parameters.Add("m_computer", NpgsqlDbType.Varchar, 20).Value = m_computer;
            int irec = cmd.ExecuteNonQuery();
            cmd.Dispose();
            if (irec == 0)
            {
                sql = "insert into " + user + ".d_capid(ma,ten,id,computer) values (:m_ma,:m_ten,1,:m_computer)";
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_ma", NpgsqlDbType.Numeric).Value = m_ma;
                cmd.Parameters.Add("m_ten", NpgsqlDbType.Varchar, 20).Value = m_computer;
                cmd.Parameters.Add("m_computer", NpgsqlDbType.Varchar, 20).Value = m_computer;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            sql = "select id from " + user + ".d_capid where ma=" + m_ma + " and computer='" + m_computer + "'";
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            dest = new NpgsqlDataAdapter(cmd);
            ds = new DataSet();
            dest.Fill(ds);
            cmd.Dispose();
            con.Close(); con.Dispose();
            return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public decimal get_capid(int m_ma)
        {
            sql = "update " + user + ".d_capid set id=id+1 where ma=:m_ma";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            con.Open();
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("m_ma", NpgsqlDbType.Numeric).Value = m_ma;
            int irec = cmd.ExecuteNonQuery();
            cmd.Dispose();
            if (irec == 0)
            {
                sql = "insert into " + user + ".d_capid(ma,ten,id,computer) values (:m_ma,:m_ten,1,:m_computer)";
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_ma", NpgsqlDbType.Numeric).Value = m_ma;
                cmd.Parameters.Add("m_ten", NpgsqlDbType.Varchar, 20).Value = sComputer;
                cmd.Parameters.Add("m_computer", NpgsqlDbType.Varchar, 20).Value = sComputer;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            sql = "select id from " + user + ".d_capid where ma=" + m_ma;
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            dest = new NpgsqlDataAdapter(cmd);
            ds = new DataSet();
            dest.Fill(ds);
            cmd.Dispose();
            con.Close(); con.Dispose();
            return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public decimal get_capid(int m_ma, string m_table)
        {
            sql = "update " + user + "." + m_table + " set id=id+1 where ma=:m_ma";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            con.Open();
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("m_ma", NpgsqlDbType.Numeric).Value = m_ma;
            int irec = cmd.ExecuteNonQuery();
            cmd.Dispose();
            if (irec == 0)
            {
                sql = "insert into " + user + "." + m_table + "(ma,yy,loai,id) values (:m_ma,'??',:m_loai,1)";
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_ma", NpgsqlDbType.Numeric).Value = m_ma;
                cmd.Parameters.Add("m_loai", NpgsqlDbType.Varchar, 20).Value = sComputer;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            sql = "select id from " + user + "." + m_table + " where ma=" + m_ma;
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            dest = new NpgsqlDataAdapter(cmd);
            ds = new DataSet();
            dest.Fill(ds);
            cmd.Dispose();
            con.Close(); con.Dispose();
            return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public void upd_thongso_xml(int d_nhom)
        {
        }

        public bool upd_thongso(int d_nhom, int d_id, string d_loai, string d_ten)
        {
            sql = "update " + user + ".d_thongso set loai=:d_loai,ten=:d_ten where nhom=:d_nhom and id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Text).Value = d_loai;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_thongso (id,nhom,loai,ten) values (:d_id,:d_nhom,:d_loai,:d_ten)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Text).Value = d_loai;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_thongso");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thongso(int d_nhom, int d_id, byte[] d_image)
        {
            sql = "update " + user + ".d_thongso set image=:d_image where id=:d_id and nhom=:d_nhom";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;

                cmd.Parameters.Add("d_image", NpgsqlDbType.Bytea, d_image.Length).Value = d_image;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_thongso");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dlogin(decimal d_id, string d_hoten, string d_userid, string d_password_, string d_right_, int d_nhomkho, string d_makho, string d_makp, int d_tao, int d_admin, string d_manhom, string d_loaint, string d_loaikhac)
        {
            sql = "update " + user + ".d_dlogin set hoten=:d_hoten,userid=:d_userid,password_=:d_password_,";
            sql += "right_=:d_right_,nhomkho=:d_nhomkho,makho=:d_makho,makp=:d_makp,tao=:d_tao,admin=:d_admin,";
            sql += "manhom=:d_manhom,loaint=:d_loaint,loaikhac=:d_loaikhac";
            sql += " where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Varchar, 20).Value = d_userid;
                cmd.Parameters.Add("d_password_", NpgsqlDbType.Varchar, 20).Value = d_password_;
                cmd.Parameters.Add("d_right_", NpgsqlDbType.Text).Value = d_right_;
                cmd.Parameters.Add("d_nhomkho", NpgsqlDbType.Numeric).Value = d_nhomkho;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Text).Value = d_makho;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Text).Value = d_makp;
                cmd.Parameters.Add("d_tao", NpgsqlDbType.Numeric).Value = d_tao;
                cmd.Parameters.Add("d_admin", NpgsqlDbType.Numeric).Value = d_admin;
                cmd.Parameters.Add("d_manhom", NpgsqlDbType.Text).Value = d_manhom;
                cmd.Parameters.Add("d_loaint", NpgsqlDbType.Text).Value = d_loaint;
                cmd.Parameters.Add("d_loaikhac", NpgsqlDbType.Text).Value = d_loaikhac;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dlogin (id,hoten,userid,password_,right_,nhomkho,makho,makp,tao,admin,manhom,loaint,loaikhac) values (:d_id,:d_hoten,:d_userid,:d_password_,:d_right_,:d_nhomkho,:d_makho,:d_makp,:d_tao,:d_admin,:d_manhom,:d_loaint,:d_loaikhac)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Varchar, 20).Value = d_userid;
                    cmd.Parameters.Add("d_password_", NpgsqlDbType.Varchar, 20).Value = d_password_;
                    cmd.Parameters.Add("d_right_", NpgsqlDbType.Text).Value = d_right_;
                    cmd.Parameters.Add("d_nhomkho", NpgsqlDbType.Numeric).Value = d_nhomkho;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Text).Value = d_makho;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Text).Value = d_makp;
                    cmd.Parameters.Add("d_tao", NpgsqlDbType.Numeric).Value = d_tao;
                    cmd.Parameters.Add("d_admin", NpgsqlDbType.Numeric).Value = d_admin;
                    cmd.Parameters.Add("d_manhom", NpgsqlDbType.Text).Value = d_manhom;
                    cmd.Parameters.Add("d_loaint", NpgsqlDbType.Text).Value = d_loaint;
                    cmd.Parameters.Add("d_loaikhac", NpgsqlDbType.Text).Value = d_loaikhac;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dlogin");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dlogin(decimal d_id, string d_hoten, string d_userid, string d_password_, string d_right_, int d_nhomkho, string d_makho, string d_makp, int d_tao, int d_admin, string d_manhom, string d_loaint, string d_loaikhac, string d_khudt)
        {
            sql = "update " + user + ".d_dlogin set hoten=:d_hoten,userid=:d_userid,password_=:d_password_,";
            sql += "right_=:d_right_,nhomkho=:d_nhomkho,makho=:d_makho,makp=:d_makp,tao=:d_tao,admin=:d_admin,";
            sql += "manhom=:d_manhom,loaint=:d_loaint,loaikhac=:d_loaikhac, khu=:d_khudt";
            sql += " where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Varchar, 20).Value = d_userid;
                cmd.Parameters.Add("d_password_", NpgsqlDbType.Varchar, 20).Value = d_password_;
                cmd.Parameters.Add("d_right_", NpgsqlDbType.Text).Value = d_right_;
                cmd.Parameters.Add("d_nhomkho", NpgsqlDbType.Numeric).Value = d_nhomkho;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Text).Value = d_makho;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Text).Value = d_makp;
                cmd.Parameters.Add("d_tao", NpgsqlDbType.Numeric).Value = d_tao;
                cmd.Parameters.Add("d_admin", NpgsqlDbType.Numeric).Value = d_admin;
                cmd.Parameters.Add("d_manhom", NpgsqlDbType.Text).Value = d_manhom;
                cmd.Parameters.Add("d_loaint", NpgsqlDbType.Text).Value = d_loaint;
                cmd.Parameters.Add("d_loaikhac", NpgsqlDbType.Text).Value = d_loaikhac;
                cmd.Parameters.Add("d_khudt", NpgsqlDbType.Varchar, 100).Value = d_khudt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dlogin (id,hoten,userid,password_,right_,nhomkho,makho,makp,tao,admin,manhom,loaint,loaikhac, khu) values (:d_id,:d_hoten,:d_userid,:d_password_,:d_right_,:d_nhomkho,:d_makho,:d_makp,:d_tao,:d_admin,:d_manhom,:d_loaint,:d_loaikhac,:d_khudt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Varchar, 20).Value = d_userid;
                    cmd.Parameters.Add("d_password_", NpgsqlDbType.Varchar, 20).Value = d_password_;
                    cmd.Parameters.Add("d_right_", NpgsqlDbType.Text).Value = d_right_;
                    cmd.Parameters.Add("d_nhomkho", NpgsqlDbType.Numeric).Value = d_nhomkho;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Text).Value = d_makho;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Text).Value = d_makp;
                    cmd.Parameters.Add("d_tao", NpgsqlDbType.Numeric).Value = d_tao;
                    cmd.Parameters.Add("d_admin", NpgsqlDbType.Numeric).Value = d_admin;
                    cmd.Parameters.Add("d_manhom", NpgsqlDbType.Text).Value = d_manhom;
                    cmd.Parameters.Add("d_loaint", NpgsqlDbType.Text).Value = d_loaint;
                    cmd.Parameters.Add("d_loaikhac", NpgsqlDbType.Text).Value = d_loaikhac;
                    cmd.Parameters.Add("d_khudt", NpgsqlDbType.Varchar, 100).Value = d_khudt;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dlogin");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        //Tu:20/05/2011
        public bool upd_dlogin(decimal d_id, string d_hoten, string d_userid, string d_password_, string d_right_, int d_nhomkho, string d_makho, string d_makp, int d_tao, int d_admin, string d_manhom, string d_loaint, string d_loaikhac, string d_khudt, int d_chinhanh)
        {
            sql = "update " + user + ".d_dlogin set hoten=:d_hoten,userid=:d_userid,password_=:d_password_,";
            sql += "right_=:d_right_,nhomkho=:d_nhomkho,makho=:d_makho,makp=:d_makp,tao=:d_tao,admin=:d_admin,";
            sql += "manhom=:d_manhom,loaint=:d_loaint,loaikhac=:d_loaikhac, khu=:d_khudt,chinhanh=:d_chinhanh";
            sql += " where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Varchar, 20).Value = d_userid;
                cmd.Parameters.Add("d_password_", NpgsqlDbType.Varchar, 20).Value = d_password_;
                cmd.Parameters.Add("d_right_", NpgsqlDbType.Text).Value = d_right_;
                cmd.Parameters.Add("d_nhomkho", NpgsqlDbType.Numeric).Value = d_nhomkho;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Text).Value = d_makho;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Text).Value = d_makp;
                cmd.Parameters.Add("d_tao", NpgsqlDbType.Numeric).Value = d_tao;
                cmd.Parameters.Add("d_admin", NpgsqlDbType.Numeric).Value = d_admin;
                cmd.Parameters.Add("d_manhom", NpgsqlDbType.Text).Value = d_manhom;
                cmd.Parameters.Add("d_loaint", NpgsqlDbType.Text).Value = d_loaint;
                cmd.Parameters.Add("d_loaikhac", NpgsqlDbType.Text).Value = d_loaikhac;
                cmd.Parameters.Add("d_khudt", NpgsqlDbType.Varchar, 100).Value = d_khudt;
                cmd.Parameters.Add("d_chinhanh", NpgsqlDbType.Numeric).Value = d_chinhanh;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dlogin (id,hoten,userid,password_,right_,nhomkho,makho,makp,tao,admin,manhom,loaint,loaikhac, khu,chinhanh) values (:d_id,:d_hoten,:d_userid,:d_password_,:d_right_,:d_nhomkho,:d_makho,:d_makp,:d_tao,:d_admin,:d_manhom,:d_loaint,:d_loaikhac,:d_khudt,:d_chinhanh)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Varchar, 20).Value = d_userid;
                    cmd.Parameters.Add("d_password_", NpgsqlDbType.Varchar, 20).Value = d_password_;
                    cmd.Parameters.Add("d_right_", NpgsqlDbType.Text).Value = d_right_;
                    cmd.Parameters.Add("d_nhomkho", NpgsqlDbType.Numeric).Value = d_nhomkho;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Text).Value = d_makho;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Text).Value = d_makp;
                    cmd.Parameters.Add("d_tao", NpgsqlDbType.Numeric).Value = d_tao;
                    cmd.Parameters.Add("d_admin", NpgsqlDbType.Numeric).Value = d_admin;
                    cmd.Parameters.Add("d_manhom", NpgsqlDbType.Text).Value = d_manhom;
                    cmd.Parameters.Add("d_loaint", NpgsqlDbType.Text).Value = d_loaint;
                    cmd.Parameters.Add("d_loaikhac", NpgsqlDbType.Text).Value = d_loaikhac;
                    cmd.Parameters.Add("d_khudt", NpgsqlDbType.Varchar, 100).Value = d_khudt;
                    cmd.Parameters.Add("d_chinhanh", NpgsqlDbType.Numeric).Value = d_chinhanh;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dlogin");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        //end Tu
        public bool upd_dlogin_right(decimal d_id, string d_right_)
        {
            sql = "update " + user + ".d_dlogin set right_=:d_right_";
            sql += " where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_right_", NpgsqlDbType.Text).Value = d_right_;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dlogin");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_nhombc(decimal d_id, string d_ten, int d_nhom, decimal d_stt, decimal d_tyle_so, decimal d_tyle_tien)
        {
            sql = "update " + user + ".d_nhombc set ten=:d_ten,nhom=:d_nhom,stt=:d_stt,tyle_so=:d_tyle_so,tyle_tien=:d_tyle_tien where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_tyle_so", NpgsqlDbType.Numeric).Value = d_tyle_so;
                cmd.Parameters.Add("d_tyle_tien", NpgsqlDbType.Numeric).Value = d_tyle_tien;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_nhombc (id,ten,nhom,stt,tyle_so,tyle_tien) values (:d_id,:d_ten,:d_nhom,:d_stt,:d_tyle_so,:d_tyle_tien)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_tyle_so", NpgsqlDbType.Numeric).Value = d_tyle_so;
                    cmd.Parameters.Add("d_tyle_tien", NpgsqlDbType.Numeric).Value = d_tyle_tien;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_nhombc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_danhmuc(string d_table, decimal d_id, string d_ma, string d_ten, int d_nhom, decimal d_stt)
        {
            sql = "update " + user + "." + d_table + " set ma=:d_ma,ten=:d_ten,nhom=:d_nhom,stt=:d_stt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + "." + d_table + " (id,ma,ten,nhom,stt) values (:d_id,:d_ma,:d_ten,:d_nhom,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, d_table);
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmduongdung(string d_table, string d_viettat, string d_ten, decimal d_stt)
        {
            sql = "update " + user + "." + d_table + " set viettat=:d_viettat,stt=:d_stt where ten=:d_ten";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_viettat", NpgsqlDbType.Varchar, 20).Value = d_viettat;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + "." + d_table + " (viettat,ten,stt) values (:d_viettat,:d_ten,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_viettat", NpgsqlDbType.Varchar, 20).Value = d_viettat;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, d_table);
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_danhmuc(string d_table, decimal d_id, string d_ten, int d_nhom, decimal d_stt)
        {
            sql = "update " + user + "." + d_table + " set ten=:d_ten,nhom=:d_nhom,stt=:d_stt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + "." + d_table + " (id,ten,nhom,stt) values (:d_id,:d_ten,:d_nhom,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, d_table);
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_danhmuc(string d_table, decimal d_id, string d_ten, decimal d_stt)
        {
            sql = "update " + user + "." + d_table + " set ten=:d_ten,stt=:d_stt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + "." + d_table + " (id,ten,stt) values (:d_id,:d_ten,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, d_table);
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_doituong(string d_table, int d_madoituong, string d_doituong)
        {
            sql = "update " + user + "." + d_table + " set doituong=:d_doituong where madoituong=:d_madoituong";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_doituong", NpgsqlDbType.Text).Value = d_doituong;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + "." + d_table + " (madoituong,doituong) values (:d_madoituong,:d_doituong)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_doituong", NpgsqlDbType.Text).Value = d_doituong;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, d_table);
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_doituong(string d_table, int d_madoituong, string d_doituong, string d_nguon, int d_loai, string d_manhom, string d_makho)
        {
            sql = "update " + user + "." + d_table + " set doituong=:d_doituong,nguon=:d_nguon,loai=:d_loai,manhom=:d_manhom,makho=:d_makho where madoituong=:d_madoituong";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_doituong", NpgsqlDbType.Text).Value = d_doituong;
                cmd.Parameters.Add("d_nguon", NpgsqlDbType.Text).Value = d_nguon;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_manhom", NpgsqlDbType.Text).Value = d_manhom;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Text).Value = d_makho;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + "." + d_table + " (madoituong,doituong,nguon,loai,manhom,makho) values (:d_madoituong,:d_doituong,:d_nguon,:d_loai,:d_manhom,:d_makho)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_doituong", NpgsqlDbType.Text).Value = d_doituong;
                    cmd.Parameters.Add("d_nguon", NpgsqlDbType.Text).Value = d_nguon;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_manhom", NpgsqlDbType.Text).Value = d_manhom;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Text).Value = d_makho;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, d_table);
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public void upd_dmbd_luu(decimal id)
        {
            execute_data("insert into " + user + ".d_dmbd_luu(id,ma,ten,dang,hamluong,manhom,nhom,bhyt,dongia,giaban,gia_bh) select id,ma,ten,dang,hamluong,manhom,nhom,bhyt,dongia,giaban,gia_bh from " + user + ".d_dmbd where id=" + id);
        }

        public bool upd_dmbd(decimal d_id, string d_ma, string d_ten, string d_dang, string d_hamluong, int d_manhom,
            int d_maloai, int d_mahang, int d_manuoc, int d_nhombo, decimal d_bhyt, int d_thietyeu, int d_sotk, string d_tenhc,
            string d_mahc, int d_soluong, int d_nhom, string d_sodk, decimal d_sltoithieu, int d_ngaytra, int d_tutruc,
            int d_phatsau, decimal d_tyle, decimal d_stt, string d_hinh, int d_nhomin, int d_sunghiep, string d_duongdung,
            string d_congsuat, int d_madv, string d_donvi, decimal d_sldonggoi, string d_donvidung,int d_userid)
        {
            sql = "update " + user + ".d_dmbd set ma=:d_ma,ten=:d_ten,dang=:d_dang,hamluong=:d_hamluong,";
            sql += "manhom=:d_manhom,maloai=:d_maloai,mahang=:d_mahang,manuoc=:d_manuoc,nhombo=:d_nhombo,";
            sql += "bhyt=:d_bhyt,thietyeu=:d_thietyeu,sotk=:d_sotk,tenhc=:d_tenhc,mahc=:d_mahc,soluong=:d_soluong,";
            sql += "nhom=:d_nhom,sodk=:d_sodk,sltoithieu=:d_sltoithieu,ngaytra=:d_ngaytra,tutruc=:d_tutruc,phatsau=:d_phatsau,";
            sql += "tyle=:d_tyle,stt=:d_stt,hinh=:d_hinh,nhomin=:d_nhomin,sunghiep=:d_sunghiep,duongdung=:d_duongdung,";
            sql += "congsuat=:d_congsuat,madv=:d_madv,donvi=:d_donvi,sldonggoi=:d_sldonggoi ";
            sql += ",donvidung=:d_donvidung,userid=:d_userid ";
            sql += " where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ma", NpgsqlDbType.Varchar, 20).Value = d_ma.Trim();
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_dang", NpgsqlDbType.Text).Value = d_dang;
                cmd.Parameters.Add("d_hamluong", NpgsqlDbType.Text).Value = d_hamluong;
                cmd.Parameters.Add("d_manhom", NpgsqlDbType.Numeric).Value = d_manhom;
                cmd.Parameters.Add("d_maloai", NpgsqlDbType.Numeric).Value = d_maloai;
                cmd.Parameters.Add("d_mahang", NpgsqlDbType.Numeric).Value = d_mahang;
                cmd.Parameters.Add("d_manuoc", NpgsqlDbType.Numeric).Value = d_manuoc;
                cmd.Parameters.Add("d_nhombo", NpgsqlDbType.Numeric).Value = d_nhombo;
                cmd.Parameters.Add("d_bhyt", NpgsqlDbType.Numeric).Value = d_bhyt;
                cmd.Parameters.Add("d_thietyeu", NpgsqlDbType.Numeric).Value = d_thietyeu;
                cmd.Parameters.Add("d_sotk", NpgsqlDbType.Numeric).Value = d_sotk;
                cmd.Parameters.Add("d_tenhc", NpgsqlDbType.Text).Value = d_tenhc;
                cmd.Parameters.Add("d_mahc", NpgsqlDbType.Text).Value = d_mahc;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_sodk", NpgsqlDbType.Varchar, 20).Value = d_sodk;
                cmd.Parameters.Add("d_sltoithieu", NpgsqlDbType.Numeric).Value = d_sltoithieu;
                cmd.Parameters.Add("d_ngaytra", NpgsqlDbType.Numeric).Value = d_ngaytra;
                cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
                cmd.Parameters.Add("d_phatsau", NpgsqlDbType.Numeric).Value = d_phatsau;
                cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = (decimal)d_stt;
                cmd.Parameters.Add("d_hinh", NpgsqlDbType.Text).Value = d_hinh;
                cmd.Parameters.Add("d_nhomin", NpgsqlDbType.Numeric).Value = d_nhomin;
                cmd.Parameters.Add("d_sunghiep", NpgsqlDbType.Numeric).Value = d_sunghiep;
                cmd.Parameters.Add("d_duongdung", NpgsqlDbType.Text).Value = d_duongdung;
                cmd.Parameters.Add("d_congsuat", NpgsqlDbType.Text).Value = d_congsuat;
                cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                cmd.Parameters.Add("d_donvi", NpgsqlDbType.Text).Value = d_donvi;
                cmd.Parameters.Add("d_sldonggoi", NpgsqlDbType.Numeric).Value = d_sldonggoi;
                cmd.Parameters.Add("d_donvidung", NpgsqlDbType.Text).Value = d_donvidung;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmbd (id,ma,ten,dang,hamluong,manhom,maloai,mahang,manuoc,nhombo,bhyt,thietyeu,sotk,tenhc,mahc,soluong,nhom,sodk,sltoithieu,ngaytra,tutruc,phatsau,tyle,stt,hinh,nhomin,sunghiep,duongdung,congsuat,madv,donvi,sldonggoi,donvidung,userid)";
                    sql += " values (:d_id,:d_ma,:d_ten,:d_dang,:d_hamluong,:d_manhom,:d_maloai,:d_mahang,:d_manuoc,:d_nhombo,:d_bhyt,:d_thietyeu,:d_sotk,:d_tenhc,:d_mahc,:d_soluong,:d_nhom,:d_sodk,:d_sltoithieu,:d_ngaytra,:d_tutruc,:d_phatsau,:d_tyle,:d_stt,:d_hinh,:d_nhomin,:d_sunghiep,:d_duongdung,:d_congsuat,:d_madv,:d_donvi,:d_sldonggoi,:d_donvidung,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Varchar, 20).Value = d_ma.Trim();
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_dang", NpgsqlDbType.Text).Value = d_dang;
                    cmd.Parameters.Add("d_hamluong", NpgsqlDbType.Text).Value = d_hamluong;
                    cmd.Parameters.Add("d_manhom", NpgsqlDbType.Numeric).Value = d_manhom;
                    cmd.Parameters.Add("d_maloai", NpgsqlDbType.Numeric).Value = d_maloai;
                    cmd.Parameters.Add("d_mahang", NpgsqlDbType.Numeric).Value = d_mahang;
                    cmd.Parameters.Add("d_manuoc", NpgsqlDbType.Numeric).Value = d_manuoc;
                    cmd.Parameters.Add("d_nhombo", NpgsqlDbType.Numeric).Value = d_nhombo;
                    cmd.Parameters.Add("d_bhyt", NpgsqlDbType.Numeric).Value = d_bhyt;
                    cmd.Parameters.Add("d_thietyeu", NpgsqlDbType.Numeric).Value = d_thietyeu;
                    cmd.Parameters.Add("d_sotk", NpgsqlDbType.Numeric).Value = d_sotk;
                    cmd.Parameters.Add("d_tenhc", NpgsqlDbType.Text).Value = d_tenhc;
                    cmd.Parameters.Add("d_mahc", NpgsqlDbType.Text).Value = d_mahc;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_sodk", NpgsqlDbType.Varchar, 20).Value = d_sodk;
                    cmd.Parameters.Add("d_sltoithieu", NpgsqlDbType.Numeric).Value = d_sltoithieu;
                    cmd.Parameters.Add("d_ngaytra", NpgsqlDbType.Numeric).Value = d_ngaytra;
                    cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
                    cmd.Parameters.Add("d_phatsau", NpgsqlDbType.Numeric).Value = d_phatsau;
                    cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = (decimal)d_stt;
                    cmd.Parameters.Add("d_hinh", NpgsqlDbType.Text).Value = d_hinh;
                    cmd.Parameters.Add("d_nhomin", NpgsqlDbType.Numeric).Value = d_nhomin;
                    cmd.Parameters.Add("d_sunghiep", NpgsqlDbType.Numeric).Value = d_sunghiep;
                    cmd.Parameters.Add("d_duongdung", NpgsqlDbType.Text).Value = d_duongdung;
                    cmd.Parameters.Add("d_congsuat", NpgsqlDbType.Text).Value = d_congsuat;
                    cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                    cmd.Parameters.Add("d_donvi", NpgsqlDbType.Text).Value = d_donvi;
                    cmd.Parameters.Add("d_sldonggoi", NpgsqlDbType.Numeric).Value = d_sldonggoi;
                    cmd.Parameters.Add("d_donvidung", NpgsqlDbType.Text).Value = d_donvidung;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmbd");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmbd(decimal d_id, byte[] d_image)
        {
            sql = "update " + user + ".d_dmbd set image=:d_image where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_image", NpgsqlDbType.Bytea, d_image.Length).Value = d_image;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dmbd");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmnx(decimal d_id, string d_ma, string d_ten, int d_nhom, decimal d_stt, int d_nhomcc, string d_sotk, string d_masothue, string d_diachi, string d_dienthoai, string d_daidien)
        {
            sql = "update " + user + ".d_dmnx set ma=:d_ma,ten=:d_ten,nhom=:d_nhom,stt=:d_stt,nhomcc=:d_nhomcc,sotk=:d_sotk,masothue=:d_masothue,diachi=:d_diachi,dienthoai=:d_dienthoai,daidien=:d_daidien where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                cmd.Parameters.Add("d_sotk", NpgsqlDbType.Varchar, 20).Value = d_sotk;
                cmd.Parameters.Add("d_masothue", NpgsqlDbType.Varchar, 20).Value = d_masothue;
                cmd.Parameters.Add("d_diachi", NpgsqlDbType.Text).Value = d_diachi;
                cmd.Parameters.Add("d_dienthoai", NpgsqlDbType.Varchar, 20).Value = d_dienthoai;
                cmd.Parameters.Add("d_daidien", NpgsqlDbType.Text).Value = d_daidien;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmnx (id,ma,ten,nhom,stt,nhomcc,sotk,masothue,diachi,dienthoai,daidien)";
                    sql += " values (:d_id,:d_ma,:d_ten,:d_nhom,:d_stt,:d_nhomcc,:d_sotk,:d_masothue,:d_diachi,:d_dienthoai,:d_daidien)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                    cmd.Parameters.Add("d_sotk", NpgsqlDbType.Varchar, 20).Value = d_sotk;
                    cmd.Parameters.Add("d_masothue", NpgsqlDbType.Varchar, 20).Value = d_masothue;
                    cmd.Parameters.Add("d_diachi", NpgsqlDbType.Text).Value = d_diachi;
                    cmd.Parameters.Add("d_dienthoai", NpgsqlDbType.Varchar, 20).Value = d_dienthoai;
                    cmd.Parameters.Add("d_daidien", NpgsqlDbType.Text).Value = d_daidien;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmnx");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        //Phuoc
        public bool upd_dmnhom(decimal d_id, string d_ma, string d_ten, int d_loai, int d_nhom, int d_nhomin, int d_nhomvp, decimal d_stt)
        {
            string user_new = "", sql = "";
            int b = 0; int i_max_schema = 2; 
            //if (bQuanLyHaiSchema == false) i_max_schema = 1; 
            //else i_max_schema = 2; 
            for (b = 0; b < i_max_schema; b++)
            {
                if (b == 0) user_new = "medibv_vn";
                if (b == 1) user_new = "medibv_en";
                if (user_new == userid)
                {
                    sql = " update medibv_vn.d_dmnhom set ma=:d_ma,ten=:d_ten,loai=:d_loai,nhom=:d_nhom,nhomin=:d_nhomin,nhomvp=:d_nhomvp,stt=:d_stt where id=:d_id";
                }
                else
                {
                    sql = " update medibv_en.d_dmnhom set ma=:d_ma,ten=:d_ten,loai=:d_loai,nhom=:d_nhom,nhomin=:d_nhomin,nhomvp=:d_nhomvp,stt=:d_stt where id=:d_id";
                }

                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                try
                {
                    con.Open();
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_nhomin", NpgsqlDbType.Numeric).Value = d_nhomin;
                    cmd.Parameters.Add("d_nhomvp", NpgsqlDbType.Numeric).Value = d_nhomvp;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    int irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    //schema_vn
                    if (irec == 0)
                    {
                        sql = "insert into " + user_new + ".d_dmnhom (id,ma,ten,loai,nhom,nhomin,nhomvp,stt)";
                        sql += " values (:d_id,:d_ma,:d_ten,:d_loai,:d_nhom,:d_nhomin,:d_nhomvp,:d_stt)";
                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                        cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                        cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                        cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                        cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                        cmd.Parameters.Add("d_nhomin", NpgsqlDbType.Numeric).Value = d_nhomin;
                        cmd.Parameters.Add("d_nhomvp", NpgsqlDbType.Numeric).Value = d_nhomvp;
                        cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();

                    }

                }
                catch (NpgsqlException ex)
                {
                    upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmnhom");
                    return false;
                }
                finally
                {

                    con.Close(); con.Dispose();
                }
            }
            return true;
        }
        public bool upd_dmnhom(decimal d_id, string d_ten, int d_loai, int d_nhom, int d_nhomin, int d_nhomvp, decimal d_stt)
        {
            sql = " update " + user + ".d_dmnhom set ten=:d_ten,loai=:d_loai,nhom=:d_nhom,nhomin=:d_nhomin,nhomvp=:d_nhomvp,stt=:d_stt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_nhomin", NpgsqlDbType.Numeric).Value = d_nhomin;
                cmd.Parameters.Add("d_nhomvp", NpgsqlDbType.Numeric).Value = d_nhomvp;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmnhom (id,ten,loai,nhom,nhomin,nhomvp,stt)";
                    sql += " values (:d_id,:d_ten,:d_loai,:d_nhom,:d_nhomin,:d_nhomvp,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_nhomin", NpgsqlDbType.Numeric).Value = d_nhomin;
                    cmd.Parameters.Add("d_nhomvp", NpgsqlDbType.Numeric).Value = d_nhomvp;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmnhom");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_nhomctd(decimal d_id, string d_ten, string d_dvt, int d_nhom, decimal d_stt)
        {
            sql = " update " + user + ".d_nhomctd set ten=:d_ten,dvt=:d_dvt,nhom=:d_nhom,stt=:d_stt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_dvt", NpgsqlDbType.Text).Value = d_dvt;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_nhomctd (id,ten,dvt,nhom,stt)";
                    sql += " values (:d_id,:d_ten,:d_dvt,:d_nhom,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_dvt", NpgsqlDbType.Text).Value = d_dvt;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_nhomctd");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        //Phuoc
        public bool upd_dmloai(decimal d_id, string d_ma, string d_ten, int d_loai, int d_nhom, long d_stt)
        {
            string user_new = "", sql = "";
            int b = 0; int i_max_schema = 2; 
            //if (bQuanLyHaiSchema == false) i_max_schema = 1; 
            //else i_max_schema = 2; 
            for (b = 0; b < i_max_schema; b++)
            {
                if (b == 0) user_new = "medibv_vn";
                if (b == 1) user_new = "medibv_en";
                if (user_new == userid)
                {
                    sql = " update medibv_vn.d_dmloai set ma=:d_ma,ten=:d_ten,loai=:d_loai,nhom=:d_nhom,stt=:d_stt where id=:d_id";
                }
                else
                {
                    sql = " update medibv_en.d_dmloai set ma=:d_ma, ten=:d_ten,loai=:d_loai,nhom=:d_nhom,stt=:d_stt where id=:d_id";
                }

                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                try
                {
                    con.Open();
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    int irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    //schema_vn
                    if (irec == 0)
                    {
                        sql = "insert into " + user_new + ".d_dmloai (id,ma,ten,loai,nhom,stt)";
                        sql += " values (:d_id,:d_ma,:d_ten,:d_loai,:d_nhom,:d_stt)";
                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                        cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                        cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                        cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                        cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                        cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();

                    }

                }
                catch (NpgsqlException ex)
                {
                    upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmloai");
                    return false;
                }
                finally
                {

                    con.Close(); con.Dispose();
                }
            }
            return true;
        }
        public bool upd_dmloai(decimal d_id, string d_ten, int d_loai, int d_nhom, decimal d_stt)
        {
            sql = " update " + user + ".d_dmloai set ten=:d_ten,loai=:d_loai,nhom=:d_nhom,stt=:d_stt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmloai (id,ten,loai,nhom,stt)";
                    sql += " values (:d_id,:d_ten,:d_loai,:d_nhom,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmloai");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dmhang(decimal d_id, string d_ten, int d_loai, int d_nhom, decimal d_stt)
        {
            sql = "update " + user + ".d_dmhang set ten=:d_ten,loai=:d_loai,nhom=:d_nhom,stt=:d_stt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmhang (id,ten,loai,nhom,stt)";
                    sql += " values (:d_id,:d_ten,:d_loai,:d_nhom,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmhang");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        //Phuoc
        public bool upd_dmhang(decimal d_id, string d_ma, string d_ten, int d_loai, int d_nhom, decimal d_stt)
        {
            string user_new = "", sql = "";
            int b = 0; int i_max_schema = 2; 
            //if (bQuanLyHaiSchema == false) i_max_schema = 1; 
            //else i_max_schema = 2; 
            for (b = 0; b < i_max_schema; b++)
            {
                if (b == 0) user_new = "medibv_vn";
                if (b == 1) user_new = "medibv_en";
                if (user_new == userid)
                {
                    sql = "update medibv_vn.d_dmhang set ma=:d_ma, ten=:d_ten,loai=:d_loai,nhom=:d_nhom,stt=:d_stt where id=:d_id";
                }
                else
                {
                    sql = "update medibv_en.d_dmhang set ma=:d_ma,ten=:d_ten,loai=:d_loai,nhom=:d_nhom,stt=:d_stt where id=:d_id";
                }

                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                try
                {
                    con.Open();
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    int irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    //schema_vn
                    if (irec == 0)
                    {
                        sql = "insert into " + user_new + ".d_dmhang (id,ma,ten,loai,nhom,stt)";
                        sql += " values (:d_id,:d_ma,:d_ten,:d_loai,:d_nhom,:d_stt)";
                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                        cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                        cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                        cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                        cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                        cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();

                    }

                }
                catch (NpgsqlException ex)
                {
                    upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmhang");
                    return false;
                }
                finally
                {

                    con.Close(); con.Dispose();
                }
            }
            return true;
        }
        public bool upd_dmnuoc(decimal d_id, string d_ten, int d_loai, int d_nhom, decimal d_stt)
        {
            sql = "update " + user + ".d_dmnuoc set ten=:d_ten,loai=:d_loai,nhom=:d_nhom,stt=:d_stt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmnuoc (id,ten,loai,nhom,stt)";
                    sql += " values (:d_id,:d_ten,:d_loai,:d_nhom,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmnuoc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        //Phuoc
        public bool upd_dmnuoc(decimal d_id, string d_ma, string d_ten, int d_loai, int d_nhom, decimal d_stt)
        {
            string user_new = "", sql = "";
            
            int b = 0; int i_max_schema = 2;
            //if (bQuanLyHaiSchema == false) i_max_schema = 1; 
            //else i_max_schema = 2; 
            for (b = 0; b < i_max_schema; b++)
            {
                if (b == 0) user_new = "medibv_vn";
                if (b == 1) user_new = "medibv_en";
                if (user_new == userid)
                {
                    sql = "update medibv_vn.d_dmnuoc set ma=:d_ma, ten=:d_ten,loai=:d_loai,nhom=:d_nhom,stt=:d_stt where id=:d_id";
                }
                else
                {
                    sql = "update medibv_en.d_dmnuoc set ma=:d_ma, ten=:d_ten,loai=:d_loai,nhom=:d_nhom,stt=:d_stt where id=:d_id";
                }
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                try
                {
                    con.Open();
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    int irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    //schema_vn
                    if (irec == 0)
                    {
                        sql = "insert into " + user_new + ".d_dmnuoc (id,ma,ten,loai,nhom,stt)";
                        sql += " values (:d_id,:d_ma,:d_ten,:d_loai,:d_nhom,:d_stt)";
                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                        cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                        cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                        cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                        cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                        cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();

                    }

                }
                catch (NpgsqlException ex)
                {
                    upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmnuoc");
                    return false;
                }
                finally
                {

                    con.Close(); con.Dispose();
                }
            }
            return true;
        }
        public bool upd_dmnguongocthuoc(decimal d_id, string d_ten)
        {
            sql = "update " + user + ".d_dmnguongocnuoc set ten=:d_ten where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmnguongocnuoc (id,ten)";
                    sql += " values (:d_id,:d_ten,:d_loai,:d_nhom,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmnguongocthuoc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmnhomkho(decimal d_id, string d_ten, int d_nhom, decimal d_stt, int d_loai)
        {
            sql = "update " + user + ".d_dmnhomkho set ten=:d_ten,nhom=:d_nhom,stt=:d_stt,loai=:d_loai where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmnhomkho (id,ten,nhom,stt,loai)";
                    sql += " values (:d_id,:d_ten,:d_nhom,:d_stt,:d_loai)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmnhomkho");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dmbhyt(decimal d_chitra, decimal d_stt)
        {
            sql = "update " + user + ".d_dmbhyt set stt=:d_stt where chitra=:d_chitra";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_chitra", NpgsqlDbType.Numeric).Value = d_chitra;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmbhyt (chitra,stt)";
                    sql += " values (:d_chitra,:d_stt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_chitra", NpgsqlDbType.Numeric).Value = d_chitra;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmbhyt");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dmhoatchat(string d_ma, string d_ten, int d_nhom)
        {
            sql = "update " + user + ".d_dmhoatchat set ten=:d_ten, nhom=:d_nhom where ma=:d_ma";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_ma", NpgsqlDbType.Varchar, 6).Value = d_ma;

                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmhoatchat (ma,ten,nhom)";
                    sql += " values (:d_ma,:d_ten,:d_nhom)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Varchar, 6).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmhoatchat");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        
        public bool upd_nhapslll(string d_mmyy, decimal d_id, int d_nhom, string d_sophieu, string d_ngaysp, string d_sohd, string d_ngayhd, string d_loai, string d_nguoigiao, int d_madv, int d_makho, int d_userid)
        {
            //schema = user + d_mmyy + ".upd_nhapslll" ;
            string sql = "update " + user + d_mmyy + ".d_nhapslll set nhom=:d_nhom,sophieu=:d_sophieu,ngaysp=";
            sql += "to_timestamp(:d_ngaysp,'dd/mm/yyyy'),sohd=:d_sohd,ngayhd=to_timestamp(:d_ngayhd,'dd/mm/yyyy'),";
            sql += "loai=:d_loai,madv=:d_madv,makho=:d_makho,userid=:d_userid where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
            cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
            cmd.Parameters.Add("d_sohd", NpgsqlDbType.Varchar, 50).Value = d_sohd;
            cmd.Parameters.Add("d_ngayhd", NpgsqlDbType.Varchar, 10).Value = d_ngayhd;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 1).Value = d_loai;
            cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_nhapslll(id,nhom,sophieu,ngaysp,sohd,";
                    sql += "ngayhd,loai,nguoigiao,madv,makho,userid) ";
                    sql += " values (:d_id,:d_nhom,:d_sophieu,";
                    sql += "to_timestamp(:d_ngaysp,'dd/mm/yyyy'),:d_sohd,to_timestamp(:d_ngayhd,'dd/mm/yyyy'),";
                    sql += ":d_loai,:d_nguoigiao,:d_madv,:d_makho,:d_userid)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                    cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
                    cmd.Parameters.Add("d_sohd", NpgsqlDbType.Varchar, 50).Value = d_sohd;
                    cmd.Parameters.Add("d_ngayhd", NpgsqlDbType.Varchar, 10).Value = d_ngayhd;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 1).Value = d_loai;
                    cmd.Parameters.Add("d_nguoigiao", NpgsqlDbType.Text).Value = d_nguoigiao;
                    cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_nhapslll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_nhapslct(string d_mmyy, decimal d_id, decimal d_stt, int d_mabd, string d_handung, string d_losx, decimal d_soluong, decimal d_sl1, decimal d_sl2)
        {
            //schema = user + d_mmyy + ".upd_nhapslct";
            string sql = "update " + user + d_mmyy + ".d_nhapslct set mabd=:d_mabd,handung=:d_handung,";
            sql += "losx=:d_losx,soluong=:d_soluong,sl1=:d_sl1,sl2=:d_sl2 where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }

            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
            cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_sl1", NpgsqlDbType.Numeric).Value = d_sl1;
            cmd.Parameters.Add("d_sl2", NpgsqlDbType.Numeric).Value = d_sl2;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_nhapslct(id,stt,mabd,handung,";
                    sql += "losx,soluong,sl1,sl2) values (:d_id,:d_stt,:d_mabd,:d_handung,:d_losx,:d_soluong,:d_sl1,:d_sl2)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                    cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_sl1", NpgsqlDbType.Numeric).Value = d_sl1;
                    cmd.Parameters.Add("d_sl2", NpgsqlDbType.Numeric).Value = d_sl2;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_nhapslct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_nhapll(string d_mmyy, decimal d_id, int d_nhom, string d_sophieu, string d_ngaysp, string d_sohd, string d_ngayhd, string d_bbkiem, string d_ngaykiem, string d_loai, string d_nguoigiao, int d_madv, int d_makho, int d_manguon, int d_nhomcc, string d_no, string d_co, int d_userid, int d_lydo, decimal d_chietkhau)
        {
            //schema = user + d_mmyy + ((d_ngaykiem=="")?".upd_nhapll":".upd_nhapll_kk");
            string sql = "";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            if (d_ngaykiem == "")
            {
                sql = "update " + user + d_mmyy + ".d_nhapll set nhom=:d_nhom,sophieu=:d_sophieu,";
                sql += "ngaysp=to_timestamp(:d_ngaysp,'dd/mm/yyyy'),sohd=:d_sohd,ngayhd=to_timestamp(:d_ngayhd,'dd/mm/yyyy'),";
                sql += "bbkiem=:d_bbkiem,ngaykiem=null,loai=:d_loai,nguoigiao=:d_nguoigiao,madv=:d_madv,makho=:d_makho,";
                sql += "manguon=:d_manguon,nhomcc=:d_nhomcc,no=:d_no,co=:d_co,userid=:d_userid,lydo=:d_lydo,chietkhau=:d_chietkhau where id=:d_id";

                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;

                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
                cmd.Parameters.Add("d_sohd", NpgsqlDbType.Text).Value = d_sohd;
                cmd.Parameters.Add("d_ngayhd", NpgsqlDbType.Varchar, 10).Value = d_ngayhd;
                cmd.Parameters.Add("d_bbkiem", NpgsqlDbType.Varchar, 15).Value = d_bbkiem;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 1).Value = d_loai;
                cmd.Parameters.Add("d_nguoigiao", NpgsqlDbType.Text).Value = d_nguoigiao;
                cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                cmd.Parameters.Add("d_no", NpgsqlDbType.Text).Value = d_no;
                cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 10).Value = d_co;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
                cmd.Parameters.Add("d_chietkhau", NpgsqlDbType.Numeric).Value = d_chietkhau;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            }
            else
            {
                sql = "update " + user + d_mmyy + ".d_nhapll set nhom=:d_nhom,sophieu=:d_sophieu,ngaysp=to_timestamp(:d_ngaysp,'dd/mm/yyyy'),";
                sql += "sohd=:d_sohd,ngayhd=to_timestamp(:d_ngayhd,'dd/mm/yyyy'),bbkiem=:d_bbkiem,";
                sql += "ngaykiem=to_timestamp(:d_ngaykiem,'dd/mm/yyyy'),loai=:d_loai,nguoigiao=:d_nguoigiao,madv=:d_madv,";
                sql += "makho=:d_makho,manguon=:d_manguon,nhomcc=:d_nhomcc,no=:d_no,co=:d_co,userid=:d_userid,";
                sql += "lydo=:d_lydo,chietkhau=:d_chietkhau where id=:d_id";

                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;

                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
                cmd.Parameters.Add("d_sohd", NpgsqlDbType.Text).Value = d_sohd;
                cmd.Parameters.Add("d_ngayhd", NpgsqlDbType.Varchar, 10).Value = d_ngayhd;
                cmd.Parameters.Add("d_bbkiem", NpgsqlDbType.Varchar, 15).Value = d_bbkiem;
                cmd.Parameters.Add("d_ngaykiem", NpgsqlDbType.Varchar, 10).Value = d_ngaykiem;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 1).Value = d_loai;
                cmd.Parameters.Add("d_nguoigiao", NpgsqlDbType.Text).Value = d_nguoigiao;
                cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                cmd.Parameters.Add("d_no", NpgsqlDbType.Text).Value = d_no;
                cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 10).Value = d_co;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
                cmd.Parameters.Add("d_chietkhau", NpgsqlDbType.Numeric).Value = d_chietkhau;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            }


            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    if (d_ngaykiem == "")
                    {
                        sql = "insert into " + user + d_mmyy + ".d_nhapll(id,nhom,sophieu,ngaysp,sohd,";
                        sql += "ngayhd,bbkiem,ngaykiem,loai,nguoigiao,madv,makho,manguon,nhomcc,no,co,userid,";
                        sql += "lydo,chietkhau) values (:d_id,:d_nhom,:d_sophieu,to_timestamp(:d_ngaysp,'dd/mm/yyyy'),";
                        sql += ":d_sohd,to_timestamp(:d_ngayhd,'dd/mm/yyyy'),:d_bbkiem,null,:d_loai,:d_nguoigiao,:d_madv,";
                        sql += ":d_makho,:d_manguon,:d_nhomcc,:d_no,:d_co,:d_userid,:d_lydo,:d_chietkhau)";

                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                        cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                        cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                        cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
                        cmd.Parameters.Add("d_sohd", NpgsqlDbType.Text).Value = d_sohd;
                        cmd.Parameters.Add("d_ngayhd", NpgsqlDbType.Varchar, 10).Value = d_ngayhd;
                        cmd.Parameters.Add("d_bbkiem", NpgsqlDbType.Varchar, 15).Value = d_bbkiem;
                        cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 1).Value = d_loai;
                        cmd.Parameters.Add("d_nguoigiao", NpgsqlDbType.Text).Value = d_nguoigiao;
                        cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                        cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                        cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                        cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                        cmd.Parameters.Add("d_no", NpgsqlDbType.Text).Value = d_no;
                        cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 10).Value = d_co;
                        cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                        cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
                        cmd.Parameters.Add("d_chietkhau", NpgsqlDbType.Numeric).Value = d_chietkhau;

                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();


                    }
                    else
                    {
                        sql = "insert into " + user + d_mmyy + ".d_nhapll(id,nhom,sophieu,ngaysp,sohd,ngayhd,";
                        sql += "bbkiem,ngaykiem,loai,nguoigiao,madv,makho,manguon,nhomcc,no,co,userid,lydo,chietkhau)";
                        sql += " values (:d_id,:d_nhom,:d_sophieu,to_timestamp(:d_ngaysp,'dd/mm/yyyy'),:d_sohd,";
                        sql += "to_timestamp(:d_ngayhd,'dd/mm/yyyy'),:d_bbkiem,to_timestamp(:d_ngaykiem,'dd/mm/yyyy'),";
                        sql += ":d_loai,:d_nguoigiao,:d_madv,:d_makho,:d_manguon,:d_nhomcc,:d_no,:d_co,:d_userid,:d_lydo,:d_chietkhau)";

                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                        cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                        cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                        cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
                        cmd.Parameters.Add("d_sohd", NpgsqlDbType.Text).Value = d_sohd;
                        cmd.Parameters.Add("d_ngayhd", NpgsqlDbType.Varchar, 10).Value = d_ngayhd;
                        cmd.Parameters.Add("d_bbkiem", NpgsqlDbType.Varchar, 15).Value = d_bbkiem;
                        cmd.Parameters.Add("d_ngaykiem", NpgsqlDbType.Varchar, 10).Value = d_ngaykiem;
                        cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 1).Value = d_loai;
                        cmd.Parameters.Add("d_nguoigiao", NpgsqlDbType.Text).Value = d_nguoigiao;
                        cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                        cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                        cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                        cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                        cmd.Parameters.Add("d_no", NpgsqlDbType.Text).Value = d_no;
                        cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 10).Value = d_co;
                        cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                        cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
                        cmd.Parameters.Add("d_chietkhau", NpgsqlDbType.Numeric).Value = d_chietkhau;

                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();

                    }

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_nhapll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }
        public bool upd_nhapct(string d_mmyy, decimal d_id, decimal d_stt, int d_mabd, string d_handung, string d_losx, int d_vat, decimal d_soluong, decimal d_dongia, decimal d_sotien, decimal d_giaban, decimal d_giamua, decimal d_sl1, decimal d_sl2, decimal d_tyle, decimal d_cuocvc, decimal d_chaythu, string d_namsx, string d_tailieu, int d_baohanh, int d_nguongoc, int d_tinhtrang, string d_sothe, decimal d_giabancu, decimal d_giamuacu, decimal d_giaban2, decimal d_tyle2, decimal d_tyle_ggia, decimal d_st_ggia,string d_sodangky)
        {
            //schema = user + d_mmyy + ".upd_nhapct";
            string sql = "update " + user + d_mmyy + ".d_nhapct set mabd=:d_mabd,handung=:d_handung,";
            sql += "losx=:d_losx,vat=:d_vat,soluong=:d_soluong,dongia=:d_dongia,sotien=:d_sotien,giaban=:d_giaban,";
            sql += "giamua=:d_giamua,sl1=:d_sl1,sl2=:d_sl2,tyle=:d_tyle,cuocvc=:d_cuocvc,chaythu=:d_chaythu,";
            sql += "namsx=:d_namsx,tailieu=:d_tailieu,baohanh=:d_baohanh,nguongoc=:d_nguongoc,tinhtrang=:d_tinhtrang,";
            sql += "sothe=:d_sothe,giabancu=:d_giabancu,giamuacu=:d_giamuacu,giaban2=:d_giaban2,tyle2=:d_tyle2,";
            sql += "tyle_ggia=:d_tyle_ggia,st_ggia=:d_st_ggia,sodangky=:d_sodangky where id=:d_id and stt=:d_stt";

            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
            cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
            cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
            cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
            cmd.Parameters.Add("d_sl1", NpgsqlDbType.Numeric).Value = d_sl1;
            cmd.Parameters.Add("d_sl2", NpgsqlDbType.Numeric).Value = d_sl2;
            cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
            cmd.Parameters.Add("d_cuocvc", NpgsqlDbType.Numeric).Value = d_cuocvc;
            cmd.Parameters.Add("d_chaythu", NpgsqlDbType.Numeric).Value = d_chaythu;
            cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
            cmd.Parameters.Add("d_tailieu", NpgsqlDbType.Text).Value = d_tailieu;
            cmd.Parameters.Add("d_baohanh", NpgsqlDbType.Numeric).Value = d_baohanh;
            cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Numeric).Value = d_nguongoc;
            cmd.Parameters.Add("d_tinhtrang", NpgsqlDbType.Numeric).Value = d_tinhtrang;
            cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
            cmd.Parameters.Add("d_giabancu", NpgsqlDbType.Numeric).Value = d_giabancu;
            cmd.Parameters.Add("d_giamuacu", NpgsqlDbType.Numeric).Value = d_giamuacu;
            cmd.Parameters.Add("d_giaban2", NpgsqlDbType.Numeric).Value = d_giaban2;
            cmd.Parameters.Add("d_tyle2", NpgsqlDbType.Numeric).Value = d_tyle2;
            cmd.Parameters.Add("d_tyle_ggia", NpgsqlDbType.Numeric).Value = d_tyle_ggia;
            cmd.Parameters.Add("d_st_ggia", NpgsqlDbType.Numeric).Value = d_st_ggia;
            cmd.Parameters.Add("d_sodangky", NpgsqlDbType.Varchar).Value = d_sodangky;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_nhapct(id,stt,mabd,handung,losx,vat,";
                    sql += "soluong,dongia,sotien,giaban,giamua,sl1,sl2,tyle,cuocvc,chaythu,namsx,";
                    sql += "tailieu,baohanh,nguongoc,tinhtrang,sothe,giabancu,giamuacu,giaban2,tyle2,";
                    sql += "tyle_ggia,st_ggia,sodangky) values (:d_id,:d_stt,:d_mabd,:d_handung,:d_losx,:d_vat,:d_soluong,";
                    sql += ":d_dongia,:d_sotien,:d_giaban,:d_giamua,:d_sl1,:d_sl2,:d_tyle,:d_cuocvc,:d_chaythu,";
                    sql += ":d_namsx,:d_tailieu,:d_baohanh,:d_nguongoc,:d_tinhtrang,:d_sothe,:d_giabancu,";
                    sql += ":d_giamuacu,:d_giaban2,:d_tyle2,:d_tyle_ggia,:d_st_ggia,:d_sodangky)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                    cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                    cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                    cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    cmd.Parameters.Add("d_sl1", NpgsqlDbType.Numeric).Value = d_sl1;
                    cmd.Parameters.Add("d_sl2", NpgsqlDbType.Numeric).Value = d_sl2;
                    cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
                    cmd.Parameters.Add("d_cuocvc", NpgsqlDbType.Numeric).Value = d_cuocvc;
                    cmd.Parameters.Add("d_chaythu", NpgsqlDbType.Numeric).Value = d_chaythu;
                    cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
                    cmd.Parameters.Add("d_tailieu", NpgsqlDbType.Text).Value = d_tailieu;
                    cmd.Parameters.Add("d_baohanh", NpgsqlDbType.Numeric).Value = d_baohanh;
                    cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Numeric).Value = d_nguongoc;
                    cmd.Parameters.Add("d_tinhtrang", NpgsqlDbType.Numeric).Value = d_tinhtrang;
                    cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                    cmd.Parameters.Add("d_giabancu", NpgsqlDbType.Numeric).Value = d_giabancu;
                    cmd.Parameters.Add("d_giamuacu", NpgsqlDbType.Numeric).Value = d_giamuacu;
                    cmd.Parameters.Add("d_giaban2", NpgsqlDbType.Numeric).Value = d_giaban2;
                    cmd.Parameters.Add("d_tyle2", NpgsqlDbType.Numeric).Value = d_tyle2;
                    cmd.Parameters.Add("d_tyle_ggia", NpgsqlDbType.Numeric).Value = d_tyle_ggia;
                    cmd.Parameters.Add("d_st_ggia", NpgsqlDbType.Numeric).Value = d_st_ggia;
                    cmd.Parameters.Add("d_sodangky", NpgsqlDbType.Varchar).Value = d_sodangky;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_nhapct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_nhapct_qlnguonthuoc(string d_mmyy, decimal d_id, decimal d_stt, int d_mabd, string d_handung, string d_losx, int d_vat, decimal d_soluong, decimal d_dongia, decimal d_sotien, decimal d_giaban, decimal d_giamua, decimal d_sl1, decimal d_sl2, decimal d_tyle, decimal d_cuocvc, decimal d_chaythu, string d_namsx, string d_tailieu, int d_baohanh, int d_nguongoc, int d_tinhtrang, string d_sothe, decimal d_giabancu, decimal d_giamuacu, decimal d_giaban2, decimal d_tyle2, decimal d_tyle_ggia, decimal d_st_ggia,string d_tieuchuanchatluong,string d_hansudung,string d_sodangky)
        {
            //schema = user + d_mmyy + ".upd_nhapct";
            string sql = "update " + user + d_mmyy + ".d_nhapct set mabd=:d_mabd,handung=:d_handung,";
            sql += "losx=:d_losx,vat=:d_vat,soluong=:d_soluong,dongia=:d_dongia,sotien=:d_sotien,giaban=:d_giaban,";
            sql += "giamua=:d_giamua,sl1=:d_sl1,sl2=:d_sl2,tyle=:d_tyle,cuocvc=:d_cuocvc,chaythu=:d_chaythu,";
            sql += "namsx=:d_namsx,tailieu=:d_tailieu,baohanh=:d_baohanh,nguongoc=:d_nguongoc,tinhtrang=:d_tinhtrang,";
            sql += "sothe=:d_sothe,giabancu=:d_giabancu,giamuacu=:d_giamuacu,giaban2=:d_giaban2,tyle2=:d_tyle2,";
            sql += "tyle_ggia=:d_tyle_ggia,st_ggia=:d_st_ggia,tieuchuanchatluong=:d_tieuchuanchatluong,hansudung=:d_hansudung,sodangky=:d_sodangky where id=:d_id and stt=:d_stt";

            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
            cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
            cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
            cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
            cmd.Parameters.Add("d_sl1", NpgsqlDbType.Numeric).Value = d_sl1;
            cmd.Parameters.Add("d_sl2", NpgsqlDbType.Numeric).Value = d_sl2;
            cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
            cmd.Parameters.Add("d_cuocvc", NpgsqlDbType.Numeric).Value = d_cuocvc;
            cmd.Parameters.Add("d_chaythu", NpgsqlDbType.Numeric).Value = d_chaythu;
            cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
            cmd.Parameters.Add("d_tailieu", NpgsqlDbType.Text).Value = d_tailieu;
            cmd.Parameters.Add("d_baohanh", NpgsqlDbType.Numeric).Value = d_baohanh;
            cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Numeric).Value = d_nguongoc;
            cmd.Parameters.Add("d_tinhtrang", NpgsqlDbType.Numeric).Value = d_tinhtrang;
            cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
            cmd.Parameters.Add("d_giabancu", NpgsqlDbType.Numeric).Value = d_giabancu;
            cmd.Parameters.Add("d_giamuacu", NpgsqlDbType.Numeric).Value = d_giamuacu;
            cmd.Parameters.Add("d_giaban2", NpgsqlDbType.Numeric).Value = d_giaban2;
            cmd.Parameters.Add("d_tyle2", NpgsqlDbType.Numeric).Value = d_tyle2;
            cmd.Parameters.Add("d_tyle_ggia", NpgsqlDbType.Numeric).Value = d_tyle_ggia;
            cmd.Parameters.Add("d_st_ggia", NpgsqlDbType.Numeric).Value = d_st_ggia;
            cmd.Parameters.Add("d_tieuchuanchatluong", NpgsqlDbType.Text).Value = d_tieuchuanchatluong;
            cmd.Parameters.Add("d_hansudung", NpgsqlDbType.Text).Value = d_hansudung;
            cmd.Parameters.Add("d_sodangky", NpgsqlDbType.Varchar).Value = d_sodangky;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_nhapct(id,stt,mabd,handung,losx,vat,";
                    sql += "soluong,dongia,sotien,giaban,giamua,sl1,sl2,tyle,cuocvc,chaythu,namsx,";
                    sql += "tailieu,baohanh,nguongoc,tinhtrang,sothe,giabancu,giamuacu,giaban2,tyle2,";
                    sql += "tyle_ggia,st_ggia,tieuchuanchatluong,hansudung,sodangky) values (:d_id,:d_stt,:d_mabd,:d_handung,:d_losx,:d_vat,:d_soluong,";
                    sql += ":d_dongia,:d_sotien,:d_giaban,:d_giamua,:d_sl1,:d_sl2,:d_tyle,:d_cuocvc,:d_chaythu,";
                    sql += ":d_namsx,:d_tailieu,:d_baohanh,:d_nguongoc,:d_tinhtrang,:d_sothe,:d_giabancu,";
                    sql += ":d_giamuacu,:d_giaban2,:d_tyle2,:d_tyle_ggia,:d_st_ggia,:d_tieuchuanchatluong,:d_hansudung,:d_sodangky)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                    cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                    cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                    cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    cmd.Parameters.Add("d_sl1", NpgsqlDbType.Numeric).Value = d_sl1;
                    cmd.Parameters.Add("d_sl2", NpgsqlDbType.Numeric).Value = d_sl2;
                    cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
                    cmd.Parameters.Add("d_cuocvc", NpgsqlDbType.Numeric).Value = d_cuocvc;
                    cmd.Parameters.Add("d_chaythu", NpgsqlDbType.Numeric).Value = d_chaythu;
                    cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
                    cmd.Parameters.Add("d_tailieu", NpgsqlDbType.Text).Value = d_tailieu;
                    cmd.Parameters.Add("d_baohanh", NpgsqlDbType.Numeric).Value = d_baohanh;
                    cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Numeric).Value = d_nguongoc;
                    cmd.Parameters.Add("d_tinhtrang", NpgsqlDbType.Numeric).Value = d_tinhtrang;
                    cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                    cmd.Parameters.Add("d_giabancu", NpgsqlDbType.Numeric).Value = d_giabancu;
                    cmd.Parameters.Add("d_giamuacu", NpgsqlDbType.Numeric).Value = d_giamuacu;
                    cmd.Parameters.Add("d_giaban2", NpgsqlDbType.Numeric).Value = d_giaban2;
                    cmd.Parameters.Add("d_tyle2", NpgsqlDbType.Numeric).Value = d_tyle2;
                    cmd.Parameters.Add("d_tyle_ggia", NpgsqlDbType.Numeric).Value = d_tyle_ggia;
                    cmd.Parameters.Add("d_st_ggia", NpgsqlDbType.Numeric).Value = d_st_ggia;
                    cmd.Parameters.Add("d_tieuchuanchatluong", NpgsqlDbType.Text).Value = d_tieuchuanchatluong;
                    cmd.Parameters.Add("d_hansudung", NpgsqlDbType.Text).Value = d_hansudung;
                    cmd.Parameters.Add("d_sodangky", NpgsqlDbType.Varchar).Value = d_sodangky;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_nhapct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_nhapct_QLThuocMuaThau(string d_mmyy, decimal d_id, decimal d_stt, int d_mabd, string d_handung, string d_losx, int d_vat, decimal d_soluong, decimal d_dongia, decimal d_sotien, decimal d_giaban, decimal d_giamua, decimal d_sl1, decimal d_sl2, decimal d_tyle, decimal d_cuocvc, decimal d_chaythu, string d_namsx, string d_tailieu, int d_baohanh, int d_nguongoc, int d_tinhtrang, string d_sothe, decimal d_giabancu, decimal d_giamuacu, decimal d_giaban2, decimal d_tyle2, decimal d_tyle_ggia, decimal d_st_ggia,decimal d_QLThuocMuaThau,string d_sodangky)
        {
            //schema = user + d_mmyy + ".upd_nhapct";
            string sql = "update " + user + d_mmyy + ".d_nhapct set mabd=:d_mabd,handung=:d_handung,";
            sql += "losx=:d_losx,vat=:d_vat,soluong=:d_soluong,dongia=:d_dongia,sotien=:d_sotien,giaban=:d_giaban,";
            sql += "giamua=:d_giamua,sl1=:d_sl1,sl2=:d_sl2,tyle=:d_tyle,cuocvc=:d_cuocvc,chaythu=:d_chaythu,";
            sql += "namsx=:d_namsx,tailieu=:d_tailieu,baohanh=:d_baohanh,nguongoc=:d_nguongoc,tinhtrang=:d_tinhtrang,";
            sql += "sothe=:d_sothe,giabancu=:d_giabancu,giamuacu=:d_giamuacu,giaban2=:d_giaban2,tyle2=:d_tyle2,";
            sql += "tyle_ggia=:d_tyle_ggia,st_ggia=:d_st_ggia,muathau=:d_QLThuocMuaThau,sodangky=:d_sodangky where id=:d_id and stt=:d_stt";

            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
            cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
            cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
            cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
            cmd.Parameters.Add("d_sl1", NpgsqlDbType.Numeric).Value = d_sl1;
            cmd.Parameters.Add("d_sl2", NpgsqlDbType.Numeric).Value = d_sl2;
            cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
            cmd.Parameters.Add("d_cuocvc", NpgsqlDbType.Numeric).Value = d_cuocvc;
            cmd.Parameters.Add("d_chaythu", NpgsqlDbType.Numeric).Value = d_chaythu;
            cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
            cmd.Parameters.Add("d_tailieu", NpgsqlDbType.Text).Value = d_tailieu;
            cmd.Parameters.Add("d_baohanh", NpgsqlDbType.Numeric).Value = d_baohanh;
            cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Numeric).Value = d_nguongoc;
            cmd.Parameters.Add("d_tinhtrang", NpgsqlDbType.Numeric).Value = d_tinhtrang;
            cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
            cmd.Parameters.Add("d_giabancu", NpgsqlDbType.Numeric).Value = d_giabancu;
            cmd.Parameters.Add("d_giamuacu", NpgsqlDbType.Numeric).Value = d_giamuacu;
            cmd.Parameters.Add("d_giaban2", NpgsqlDbType.Numeric).Value = d_giaban2;
            cmd.Parameters.Add("d_tyle2", NpgsqlDbType.Numeric).Value = d_tyle2;
            cmd.Parameters.Add("d_tyle_ggia", NpgsqlDbType.Numeric).Value = d_tyle_ggia;
            cmd.Parameters.Add("d_st_ggia", NpgsqlDbType.Numeric).Value = d_st_ggia;
            cmd.Parameters.Add("d_QLThuocMuaThau", NpgsqlDbType.Numeric).Value = d_QLThuocMuaThau;
            cmd.Parameters.Add("d_sodangky", NpgsqlDbType.Varchar).Value = d_sodangky;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_nhapct(id,stt,mabd,handung,losx,vat,";
                    sql += "soluong,dongia,sotien,giaban,giamua,sl1,sl2,tyle,cuocvc,chaythu,namsx,";
                    sql += "tailieu,baohanh,nguongoc,tinhtrang,sothe,giabancu,giamuacu,giaban2,tyle2,";
                    sql += "tyle_ggia,st_ggia,muathau,sodangky) values (:d_id,:d_stt,:d_mabd,:d_handung,:d_losx,:d_vat,:d_soluong,";
                    sql += ":d_dongia,:d_sotien,:d_giaban,:d_giamua,:d_sl1,:d_sl2,:d_tyle,:d_cuocvc,:d_chaythu,";
                    sql += ":d_namsx,:d_tailieu,:d_baohanh,:d_nguongoc,:d_tinhtrang,:d_sothe,:d_giabancu,";
                    sql += ":d_giamuacu,:d_giaban2,:d_tyle2,:d_tyle_ggia,:d_st_ggia,:d_QLThuocMuaThau,:d_sodangky)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                    cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                    cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                    cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    cmd.Parameters.Add("d_sl1", NpgsqlDbType.Numeric).Value = d_sl1;
                    cmd.Parameters.Add("d_sl2", NpgsqlDbType.Numeric).Value = d_sl2;
                    cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
                    cmd.Parameters.Add("d_cuocvc", NpgsqlDbType.Numeric).Value = d_cuocvc;
                    cmd.Parameters.Add("d_chaythu", NpgsqlDbType.Numeric).Value = d_chaythu;
                    cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
                    cmd.Parameters.Add("d_tailieu", NpgsqlDbType.Text).Value = d_tailieu;
                    cmd.Parameters.Add("d_baohanh", NpgsqlDbType.Numeric).Value = d_baohanh;
                    cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Numeric).Value = d_nguongoc;
                    cmd.Parameters.Add("d_tinhtrang", NpgsqlDbType.Numeric).Value = d_tinhtrang;
                    cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                    cmd.Parameters.Add("d_giabancu", NpgsqlDbType.Numeric).Value = d_giabancu;
                    cmd.Parameters.Add("d_giamuacu", NpgsqlDbType.Numeric).Value = d_giamuacu;
                    cmd.Parameters.Add("d_giaban2", NpgsqlDbType.Numeric).Value = d_giaban2;
                    cmd.Parameters.Add("d_tyle2", NpgsqlDbType.Numeric).Value = d_tyle2;
                    cmd.Parameters.Add("d_tyle_ggia", NpgsqlDbType.Numeric).Value = d_tyle_ggia;
                    cmd.Parameters.Add("d_st_ggia", NpgsqlDbType.Numeric).Value = d_st_ggia;
                    cmd.Parameters.Add("d_QLThuocMuaThau", NpgsqlDbType.Numeric).Value = d_QLThuocMuaThau;
                    cmd.Parameters.Add("d_sodangky", NpgsqlDbType.Varchar).Value = d_sodangky;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_nhapct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        /// Dong
        /// </summary>
        public bool upd_nhapll(string d_mmyy, decimal d_id, int d_nhom, string d_sophieu, string d_ngaysp, string d_sohd, string d_ngayhd, string d_bbkiem, string d_ngaykiem, string d_loai, string d_nguoigiao, int d_madv, int d_makho, int d_manguon, int d_nhomcc, string d_no, string d_co, int d_userid, int d_lydo, decimal d_chietkhau, int d_idchinhanh)
        {
            //schema = user + d_mmyy + ((d_ngaykiem=="")?".upd_nhapll":".upd_nhapll_kk");
            string sql = "";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            if (d_ngaykiem == "")
            {
                sql = "update " + user + d_mmyy + ".d_nhapll set nhom=:d_nhom,sophieu=:d_sophieu,";
                sql += "ngaysp=to_timestamp(:d_ngaysp,'dd/mm/yyyy'),sohd=:d_sohd,ngayhd=to_timestamp(:d_ngayhd,'dd/mm/yyyy'),";
                sql += "bbkiem=:d_bbkiem,ngaykiem=null,loai=:d_loai,nguoigiao=:d_nguoigiao,madv=:d_madv,makho=:d_makho,";
                sql += "manguon=:d_manguon,nhomcc=:d_nhomcc,no=:d_no,co=:d_co,userid=:d_userid,lydo=:d_lydo,chietkhau=:d_chietkhau,idchinhanh=:d_idchinhanh where id=:d_id";

                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;

                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
                cmd.Parameters.Add("d_sohd", NpgsqlDbType.Text).Value = d_sohd;
                cmd.Parameters.Add("d_ngayhd", NpgsqlDbType.Varchar, 10).Value = d_ngayhd;
                cmd.Parameters.Add("d_bbkiem", NpgsqlDbType.Varchar, 15).Value = d_bbkiem;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 1).Value = d_loai;
                cmd.Parameters.Add("d_nguoigiao", NpgsqlDbType.Text).Value = d_nguoigiao;
                cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                cmd.Parameters.Add("d_no", NpgsqlDbType.Text).Value = d_no;
                cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 10).Value = d_co;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
                cmd.Parameters.Add("d_chietkhau", NpgsqlDbType.Numeric).Value = d_chietkhau;
                cmd.Parameters.Add("d_idchinhanh", NpgsqlDbType.Numeric).Value = d_idchinhanh;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            }
            else
            {
                sql = "update " + user + d_mmyy + ".d_nhapll set nhom=:d_nhom,sophieu=:d_sophieu,ngaysp=to_timestamp(:d_ngaysp,'dd/mm/yyyy'),";
                sql += "sohd=:d_sohd,ngayhd=to_timestamp(:d_ngayhd,'dd/mm/yyyy'),bbkiem=:d_bbkiem,";
                sql += "ngaykiem=to_timestamp(:d_ngaykiem,'dd/mm/yyyy'),loai=:d_loai,nguoigiao=:d_nguoigiao,madv=:d_madv,";
                sql += "makho=:d_makho,manguon=:d_manguon,nhomcc=:d_nhomcc,no=:d_no,co=:d_co,userid=:d_userid,";
                sql += "lydo=:d_lydo,chietkhau=:d_chietkhau,idchinhanh=:d_idchinhanh where id=:d_id";

                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;

                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
                cmd.Parameters.Add("d_sohd", NpgsqlDbType.Text).Value = d_sohd;
                cmd.Parameters.Add("d_ngayhd", NpgsqlDbType.Varchar, 10).Value = d_ngayhd;
                cmd.Parameters.Add("d_bbkiem", NpgsqlDbType.Varchar, 15).Value = d_bbkiem;
                cmd.Parameters.Add("d_ngaykiem", NpgsqlDbType.Varchar, 10).Value = d_ngaykiem;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 1).Value = d_loai;
                cmd.Parameters.Add("d_nguoigiao", NpgsqlDbType.Text).Value = d_nguoigiao;
                cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                cmd.Parameters.Add("d_no", NpgsqlDbType.Text).Value = d_no;
                cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 10).Value = d_co;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
                cmd.Parameters.Add("d_chietkhau", NpgsqlDbType.Numeric).Value = d_chietkhau;
                cmd.Parameters.Add("d_idchinhanh", NpgsqlDbType.Numeric).Value = d_idchinhanh;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            }


            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    if (d_ngaykiem == "")
                    {
                        sql = "insert into " + user + d_mmyy + ".d_nhapll(id,nhom,sophieu,ngaysp,sohd,";
                        sql += "ngayhd,bbkiem,ngaykiem,loai,nguoigiao,madv,makho,manguon,nhomcc,no,co,userid,";
                        sql += "lydo,chietkhau,idchinhanh) values (:d_id,:d_nhom,:d_sophieu,to_timestamp(:d_ngaysp,'dd/mm/yyyy'),";
                        sql += ":d_sohd,to_timestamp(:d_ngayhd,'dd/mm/yyyy'),:d_bbkiem,null,:d_loai,:d_nguoigiao,:d_madv,";
                        sql += ":d_makho,:d_manguon,:d_nhomcc,:d_no,:d_co,:d_userid,:d_lydo,:d_chietkhau,:d_idchinhanh)";

                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                        cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                        cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                        cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
                        cmd.Parameters.Add("d_sohd", NpgsqlDbType.Text).Value = d_sohd;
                        cmd.Parameters.Add("d_ngayhd", NpgsqlDbType.Varchar, 10).Value = d_ngayhd;
                        cmd.Parameters.Add("d_bbkiem", NpgsqlDbType.Varchar, 15).Value = d_bbkiem;
                        cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 1).Value = d_loai;
                        cmd.Parameters.Add("d_nguoigiao", NpgsqlDbType.Text).Value = d_nguoigiao;
                        cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                        cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                        cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                        cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                        cmd.Parameters.Add("d_no", NpgsqlDbType.Text).Value = d_no;
                        cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 10).Value = d_co;
                        cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                        cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
                        cmd.Parameters.Add("d_chietkhau", NpgsqlDbType.Numeric).Value = d_chietkhau;
                        cmd.Parameters.Add("d_idchinhanh", NpgsqlDbType.Numeric).Value = d_idchinhanh;
                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();


                    }
                    else
                    {
                        sql = "insert into " + user + d_mmyy + ".d_nhapll(id,nhom,sophieu,ngaysp,sohd,ngayhd,";
                        sql += "bbkiem,ngaykiem,loai,nguoigiao,madv,makho,manguon,nhomcc,no,co,userid,lydo,chietkhau,idchinhanh)";
                        sql += " values (:d_id,:d_nhom,:d_sophieu,to_timestamp(:d_ngaysp,'dd/mm/yyyy'),:d_sohd,";
                        sql += "to_timestamp(:d_ngayhd,'dd/mm/yyyy'),:d_bbkiem,to_timestamp(:d_ngaykiem,'dd/mm/yyyy'),";
                        sql += ":d_loai,:d_nguoigiao,:d_madv,:d_makho,:d_manguon,:d_nhomcc,:d_no,:d_co,:d_userid,:d_lydo,:d_chietkhau,:d_idchinhanh)";

                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                        cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                        cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                        cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
                        cmd.Parameters.Add("d_sohd", NpgsqlDbType.Text).Value = d_sohd;
                        cmd.Parameters.Add("d_ngayhd", NpgsqlDbType.Varchar, 10).Value = d_ngayhd;
                        cmd.Parameters.Add("d_bbkiem", NpgsqlDbType.Varchar, 15).Value = d_bbkiem;
                        cmd.Parameters.Add("d_ngaykiem", NpgsqlDbType.Varchar, 10).Value = d_ngaykiem;
                        cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 1).Value = d_loai;
                        cmd.Parameters.Add("d_nguoigiao", NpgsqlDbType.Text).Value = d_nguoigiao;
                        cmd.Parameters.Add("d_madv", NpgsqlDbType.Numeric).Value = d_madv;
                        cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                        cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                        cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                        cmd.Parameters.Add("d_no", NpgsqlDbType.Text).Value = d_no;
                        cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 10).Value = d_co;
                        cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                        cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
                        cmd.Parameters.Add("d_chietkhau", NpgsqlDbType.Numeric).Value = d_chietkhau;
                        cmd.Parameters.Add("d_idchinhanh", NpgsqlDbType.Numeric).Value = d_idchinhanh;
                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();

                    }

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_nhapll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }

        public bool upd_chonhapll(string d_mmyy, decimal d_id, int d_nhom, string d_sophieu, string d_ngaysp, string d_ngaykiem, string d_loai, int d_done, int d_idchinhanhchuyen, int d_idchinhanhnhan, int d_userid)
        {
            string s_datalink = getDBLink(d_idchinhanhnhan);
            string sql = "";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            //if (d_ngaykiem == "")
            //{
            //    ///id,nhom,sophieu,ngaysp,loai,manguon,nhomcc,done,idchinhanhchuyen,idchinhanhnhan,userid
            //    sql = "update " + user + d_mmyy + ".d_chonhapll@" + s_datalink + " set nhom=:d_nhom,sophieu=:d_sophieu,";
            //    sql += "ngaysp=to_timestamp(:d_ngaysp,'dd/mm/yyyy'),loai=:d_loai,";
            //    sql += "done=:d_done,idchinhanhchuyen=:d_idchinhanhchuyen,idchinhanhnhan=:d_idchinhanhnhan,userid=:d_userid where id=:d_id";
            //    cmd = new NpgsqlCommand(sql, con);
            //    cmd.CommandType = CommandType.Text;
            //    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            //    cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
            //    cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
            //    cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;

            //    cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
            //    cmd.Parameters.Add("d_idchinhanhchuyen", NpgsqlDbType.Numeric).Value = d_idchinhanhchuyen;
            //    cmd.Parameters.Add("d_idchinhanhnhan", NpgsqlDbType.Numeric).Value = d_idchinhanhnhan;
            //    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            //    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            //}
            //else
            //{
            sql = "update " + user + ".d_chonhapll@" + s_datalink + " set nhom=:d_nhom,sophieu=:d_sophieu,";
            sql += "ngaysp=to_timestamp(:d_ngaysp,'dd/mm/yyyy'),loai=:d_loai,";
            sql += "done=:d_done,idchinhanhchuyen=:d_idchinhanhchuyen,idchinhanhnhan=:d_idchinhanhnhan,userid=:d_userid where id=:d_id";
            con.Open();
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
            cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp == "" ? null : d_ngaysp.Substring(0, 10);
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;
            cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
            cmd.Parameters.Add("d_idchinhanhchuyen", NpgsqlDbType.Numeric).Value = d_idchinhanhchuyen;
            cmd.Parameters.Add("d_idchinhanhnhan", NpgsqlDbType.Numeric).Value = d_idchinhanhnhan;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            // }
            try
            {
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    //if (d_ngaykiem == "")
                    //{
                    //    ///id,nhom,sophieu,ngaysp,loai,manguon,nhomcc,done,idchinhanhchuyen,idchinhanhnhan,userid
                    //    sql = "insert into " + user + d_mmyy + ".d_chonhapll@" + s_datalink + "(id,nhom,sophieu,ngaysp,";
                    //    sql += "loai,done,idchinhanhchuyen,idchinhanhnhan,userid)";
                    //    sql += "values (:d_id,:d_nhom,:d_sophieu,to_timestamp(:d_ngaysp,'dd/mm/yyyy'),";
                    //    sql += ":d_loai,:d_done,:d_idchinhanhchuyen,:d_idchinhanhchuyen,:d_userid)";
                    //    cmd = new NpgsqlCommand(sql, con);
                    //    cmd.CommandType = CommandType.Text;
                    //    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    //    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    //    cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                    //    cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp;
                    //    cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;

                    //    cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                    //    cmd.Parameters.Add("d_idchinhanhchuyen", NpgsqlDbType.Numeric).Value = d_idchinhanhchuyen;
                    //    cmd.Parameters.Add("d_idchinhanhnhan", NpgsqlDbType.Numeric).Value = d_idchinhanhnhan;
                    //    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    //    irec = cmd.ExecuteNonQuery();
                    //    cmd.Dispose();
                    //}
                    //else
                    //{
                    sql = "insert into " + user + ".d_chonhapll@" + s_datalink + "(id,nhom,sophieu,ngaysp,";
                    sql += "loai,done,idchinhanhchuyen,idchinhanhnhan,userid)";
                    sql += "values (:d_id,:d_nhom,:d_sophieu,to_timestamp(:d_ngaysp,'dd/mm/yyyy'),";
                    sql += ":d_loai,:d_done,:d_idchinhanhchuyen,:d_idchinhanhchuyen,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                    cmd.Parameters.Add("d_ngaysp", NpgsqlDbType.Varchar, 10).Value = d_ngaysp == "" ? null : d_ngaysp.Substring(0, 10);
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;

                    cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                    cmd.Parameters.Add("d_idchinhanhchuyen", NpgsqlDbType.Numeric).Value = d_idchinhanhchuyen;
                    cmd.Parameters.Add("d_idchinhanhnhan", NpgsqlDbType.Numeric).Value = d_idchinhanhnhan;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    // }
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_chonhapll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_chonhapct(string d_mmyy, decimal d_id, decimal d_stt, int d_mabd, string d_handung, string d_losx, int d_vat, decimal d_soluong, decimal d_dongia, decimal d_sotien, decimal d_giaban, decimal d_giamua, int d_manguon, int d_nhomcc, int d_idchinhanhnhan)
        {
            string s_datalink = getDBLink(d_idchinhanhnhan);
            //id,stt,mabd,handung,losx,vat,soluong,dongia,sotien,giaban,giamua,manguon,nhomcc
            string sql = "update " + user + ".d_chonhapct@" + s_datalink + " set mabd=:d_mabd,handung=:d_handung,";
            sql += "losx=:d_losx,vat=:d_vat,soluong=:d_soluong,dongia=:d_dongia,sotien=:d_sotien,giaban=:d_giaban,";
            sql += "giamua=:d_giamua,manguon=:d_manguon,nhomcc=:d_nhomcc where id=:d_id and stt=:d_stt";
            con = new NpgsqlConnection(sConn);
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
            cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
            cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
            cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
            cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
            cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_chonhapct@" + s_datalink + " (id,stt,mabd,handung,losx,vat,";
                    sql += "soluong,dongia,sotien,giaban,giamua,manguon,nhomcc)";
                    sql += "values (:d_id,:d_stt,:d_mabd,:d_handung,:d_losx,:d_vat,:d_soluong,";
                    sql += ":d_dongia,:d_sotien,:d_giaban,:d_giamua,:d_manguon,:d_nhomcc)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                    cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                    cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                    cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_chonhapct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        /// <returns> End Dong</returns>

        public bool upd_nhapct2(string d_mmyy, decimal d_id, decimal d_stt, int d_mabd, decimal d_soluong, decimal d_sotien)
        {
            //schema = user + d_mmyy + ".upd_nhapct2";
            string sql = "update " + user + d_mmyy + ".d_nhapct2 set mabd=:d_mabd,soluong=:d_soluong,";
            sql += "sotien=:d_sotien where id=:d_id and stt=:d_stt;";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_nhapct2(id,stt,mabd,soluong,sotien) values (:d_id,:d_stt,:d_mabd,:d_soluong,:d_sotien)";
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_nhapct2");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dutrucapll(string d_mmyy, decimal d_id, int d_nhom, string d_sophieu, string d_ngay, string d_loai, int d_khox, int d_khon, int d_userid)
        {
            schema = user + d_mmyy + ".upd_dutrucapll";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;
                cmd.Parameters.Add("d_khox", NpgsqlDbType.Numeric).Value = d_khox;
                cmd.Parameters.Add("d_khon", NpgsqlDbType.Numeric).Value = d_khon;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_dutrucapll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dutrucapct(string d_mmyy, decimal d_id, int d_manguon, int d_mabd, decimal d_slyeucau)
        {
            schema = user + d_mmyy + ".upd_dutrucapct";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_dutrucapct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_xuatll(string d_mmyy, decimal d_id, int d_nhom, string d_sophieu, string d_ngay, string d_loai, int d_khox, int d_khon, string d_lydo, int d_userid,string d_nguoinhan)
        {
            string sql = "update " + user + d_mmyy + ".d_xuatll set nhom=:d_nhom,sophieu=:d_sophieu,";
            sql += "ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),loai=:d_loai,khox=:d_khox,khon=:d_khon,";
            sql += "lydo=:d_lydo,userid=:d_userid,nguoinhan=:d_nguoinhan where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;
            cmd.Parameters.Add("d_khox", NpgsqlDbType.Numeric).Value = d_khox;
            cmd.Parameters.Add("d_khon", NpgsqlDbType.Numeric).Value = d_khon;
            cmd.Parameters.Add("d_lydo", NpgsqlDbType.Text).Value = d_lydo;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_nguoinhan", NpgsqlDbType.Text).Value = d_nguoinhan;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_xuatll(id,nhom,sophieu,ngay,loai,";
                    sql += "khox,khon,lydo,userid,nguoinhan) values (:d_id,:d_nhom,:d_sophieu,to_timestamp";
                    sql += "(:d_ngay,'dd/mm/yyyy'),:d_loai,:d_khox,:d_khon,:d_lydo,:d_userid,:d_nguoinhan)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;
                    cmd.Parameters.Add("d_khox", NpgsqlDbType.Numeric).Value = d_khox;
                    cmd.Parameters.Add("d_khon", NpgsqlDbType.Numeric).Value = d_khon;
                    cmd.Parameters.Add("d_lydo", NpgsqlDbType.Text).Value = d_lydo;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_nguoinhan", NpgsqlDbType.Text).Value = d_nguoinhan;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xuatll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }

        //public bool upd_xuatll(string d_mmyy, decimal d_id, int d_nhom, string d_sophieu, string d_ngay, string d_loai, int d_khox, int d_khon, string d_lydo, int d_userid,decimal d_idduyet)
        //{
        //    string sql = "update " + user + d_mmyy + ".d_xuatll set nhom=:d_nhom,sophieu=:d_sophieu,";
        //    sql += "ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),loai=:d_loai,khox=:d_khox,khon=:d_khon,";
        //    sql += "lydo=:d_lydo,userid=:d_userid,idduyet=:d_idduyet where id=:d_id";
        //    if (con != null)
        //    {
        //        con.Close(); con.Dispose();
        //    }
        //    con = new NpgsqlConnection(sConn);

        //    cmd = new NpgsqlCommand(sql, con);
        //    cmd.CommandType = CommandType.Text;

        //    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
        //    cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
        //    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
        //    cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;
        //    cmd.Parameters.Add("d_khox", NpgsqlDbType.Numeric).Value = d_khox;
        //    cmd.Parameters.Add("d_khon", NpgsqlDbType.Numeric).Value = d_khon;
        //    cmd.Parameters.Add("d_lydo", NpgsqlDbType.Text).Value = d_lydo;
        //    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
        //    cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
        //    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
        //    try
        //    {
        //        con.Open();
        //        int irec = cmd.ExecuteNonQuery();
        //        cmd.Dispose();
        //        if (irec == 0)
        //        {
        //            sql = "insert into " + user + d_mmyy + ".d_xuatll(id,nhom,sophieu,ngay,";
        //            sql += "loai,khox,khon,lydo,userid,idduyet) values (:d_id,:d_nhom,:d_sophieu,";
        //            sql += "to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_loai,:d_khox,:d_khon,:d_lydo,:d_userid,:d_idduyet)";
        //            cmd = new NpgsqlCommand(sql, con);
        //            cmd.CommandType = CommandType.Text;
        //            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
        //            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
        //            cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
        //            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
        //            cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;
        //            cmd.Parameters.Add("d_khox", NpgsqlDbType.Numeric).Value = d_khox;
        //            cmd.Parameters.Add("d_khon", NpgsqlDbType.Numeric).Value = d_khon;
        //            cmd.Parameters.Add("d_lydo", NpgsqlDbType.Text).Value = d_lydo;
        //            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
        //            cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
        //            irec = cmd.ExecuteNonQuery();
        //            cmd.Dispose();
        //        }
        //    }
        //    catch (NpgsqlException ex)
        //    {
        //        upd_error(d_mmyy, ex.Message, sComputer, "d_xuatll");
        //        return false;
        //    }
        //    finally
        //    {
        //        cmd.Dispose();
        //        con.Close();con.Dispose();
        //    }
        //    upd_hcton(d_nhom, d_mmyy, d_userid);
        //    return true;
        //}

        public bool upd_xuatll(string d_mmyy, decimal d_id, int d_nhom, string d_sophieu, string d_ngay, string d_loai, int d_khox, int d_khon, string d_lydo, int d_userid, decimal d_idduyet, int d_idchinhanh)
        {
            string sql = "update " + user + d_mmyy + ".d_xuatll set nhom=:d_nhom,sophieu=:d_sophieu,";
            sql += "ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),loai=:d_loai,khox=:d_khox,khon=:d_khon,";
            sql += "lydo=:d_lydo,userid=:d_userid,idduyet=:d_idduyet,idchinhanh=:d_idchinhanh where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;
            cmd.Parameters.Add("d_khox", NpgsqlDbType.Numeric).Value = d_khox;
            cmd.Parameters.Add("d_khon", NpgsqlDbType.Numeric).Value = d_khon;
            cmd.Parameters.Add("d_lydo", NpgsqlDbType.Text).Value = d_lydo;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
            cmd.Parameters.Add("d_idchinhanh", NpgsqlDbType.Numeric).Value = d_idchinhanh;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_xuatll(id,nhom,sophieu,ngay,";
                    sql += "loai,khox,khon,lydo,userid,idduyet,idchinhanh) values (:d_id,:d_nhom,:d_sophieu,";
                    sql += "to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_loai,:d_khox,:d_khon,:d_lydo,:d_userid,:d_idduyet,:d_idchinhanh)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;
                    cmd.Parameters.Add("d_khox", NpgsqlDbType.Numeric).Value = d_khox;
                    cmd.Parameters.Add("d_khon", NpgsqlDbType.Numeric).Value = d_khon;
                    cmd.Parameters.Add("d_lydo", NpgsqlDbType.Text).Value = d_lydo;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                    cmd.Parameters.Add("d_idchinhanh", NpgsqlDbType.Numeric).Value = d_idchinhanh;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xuatll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }

        public bool upd_xuatll(string d_mmyy, decimal d_id, int d_nhom, string d_sophieu, string d_ngay, string d_loai, int d_khox, int d_khon, string d_lydo, int d_userid, int d_idchinhanh)
        {
            string sql = "update " + user + d_mmyy + ".d_xuatll set nhom=:d_nhom,sophieu=:d_sophieu,";
            sql += "ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),loai=:d_loai,khox=:d_khox,khon=:d_khon,";
            sql += "lydo=:d_lydo,userid=:d_userid,idchinhanh=:d_idchinhanh where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;
            cmd.Parameters.Add("d_khox", NpgsqlDbType.Numeric).Value = d_khox;
            cmd.Parameters.Add("d_khon", NpgsqlDbType.Numeric).Value = d_khon;
            cmd.Parameters.Add("d_lydo", NpgsqlDbType.Text).Value = d_lydo;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_idchinhanh", NpgsqlDbType.Numeric).Value = d_idchinhanh;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_xuatll(id,nhom,sophieu,ngay,loai,";
                    sql += "khox,khon,lydo,userid,idchinhanh) values (:d_id,:d_nhom,:d_sophieu,to_timestamp";
                    sql += "(:d_ngay,'dd/mm/yyyy'),:d_loai,:d_khox,:d_khon,:d_lydo,:d_userid,:d_idchinhanh)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 2).Value = d_loai;
                    cmd.Parameters.Add("d_khox", NpgsqlDbType.Numeric).Value = d_khox;
                    cmd.Parameters.Add("d_khon", NpgsqlDbType.Numeric).Value = d_khon;
                    cmd.Parameters.Add("d_lydo", NpgsqlDbType.Text).Value = d_lydo;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_idchinhanh", NpgsqlDbType.Numeric).Value = d_idchinhanh;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xuatll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }

        public bool upd_xuatct(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_mabd, decimal d_soluong, string d_mabs, string d_hotenbn, decimal d_giaban)
        {
            string sql = "update " + user + d_mmyy + ".d_xuatct set sttt=:d_sttt,mabd=:d_mabd,";
            sql += "soluong=:d_soluong,mabs=:d_mabs,hotenbn=:d_hotenbn,giaban=:d_giaban where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
            cmd.Parameters.Add("d_hotenbn", NpgsqlDbType.Text).Value = d_hotenbn;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_xuatct(id,stt,sttt,mabd,soluong,mabs,";
                    sql += "hotenbn,giaban) values (:d_id,:d_stt,:d_sttt,:d_mabd,:d_soluong,:d_mabs,:d_hotenbn,:d_giaban)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                    cmd.Parameters.Add("d_hotenbn", NpgsqlDbType.Text).Value = d_hotenbn;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xuatct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_ngtrull(string d_mmyy, decimal d_id, int d_nhom, string d_mabn, string d_hoten, string d_namsinh, string d_ngay, string d_mabs, int d_makp, int d_loai, int d_userid, int d_sotoa, decimal d_maql)
        {
            //schema = user + d_mmyy + ".upd_ngtrull";
            string sql = "update " + user + d_mmyy + ".d_ngtrull set nhom=:d_nhom,mabn=:d_mabn,hoten=:d_hoten,";
            sql += "namsinh=:d_namsinh,ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),mabs=:d_mabs,makp=:d_makp,";
            sql += "loai=:d_loai,userid=:d_userid,sotoa=:d_sotoa,maql=:d_maql where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
            cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
            cmd.Parameters.Add("d_namsinh", NpgsqlDbType.Varchar, 4).Value = d_namsinh;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
            cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_sotoa", NpgsqlDbType.Numeric).Value = d_sotoa;
            cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_ngtrull(id,nhom,mabn,hoten,namsinh,ngay,";
                    sql += "mabs,makp,loai,userid,sotoa,maql) values (:d_id,:d_nhom,:d_mabn,:d_hoten,:d_namsinh,";
                    sql += "to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_mabs,:d_makp,:d_loai,:d_userid,:d_sotoa,:d_maql)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
                    cmd.Parameters.Add("d_namsinh", NpgsqlDbType.Varchar, 4).Value = d_namsinh;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_sotoa", NpgsqlDbType.Numeric).Value = d_sotoa;
                    cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_ngtrull");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }
        //Thuy 29.02.2012
        public bool upd_ngtrull(string d_mmyy, decimal d_id, int d_nhom, string d_mabn, string d_hoten, string d_namsinh, string d_ngay, string d_mabs, int d_makp, int d_loai, int d_userid, int d_sotoa, decimal d_maql, string d_diachi, string d_ghichu, int d_userid_vp)
        {
            string sql = "update " + user + d_mmyy + ".d_ngtrull set nhom=:d_nhom,mabn=:d_mabn,hoten=:d_hoten,";
            sql += "namsinh=:d_namsinh,ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),mabs=:d_mabs,makp=:d_makp,";
            sql += "loai=:d_loai,userid=:d_userid,sotoa=:d_sotoa,maql=:d_maql,diachi=:d_diachi,ghichu=:d_ghichu,userid_vp=:d_userid_vp where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
            cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
            cmd.Parameters.Add("d_namsinh", NpgsqlDbType.Varchar, 4).Value = d_namsinh;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
            cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_sotoa", NpgsqlDbType.Numeric).Value = d_sotoa;
            cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
            cmd.Parameters.Add("d_diachi", NpgsqlDbType.Text).Value = d_diachi;
            cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
            cmd.Parameters.Add("d_userid_vp", NpgsqlDbType.Numeric).Value = d_userid_vp;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_ngtrull(id,nhom,mabn,hoten,namsinh,ngay,";
                    sql += "mabs,makp,loai,userid,sotoa,maql,diachi,ghichu,userid_vp) values (:d_id,:d_nhom,:d_mabn,";
                    sql += ":d_hoten,:d_namsinh,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_mabs,:d_makp,:d_loai,";
                    sql += ":d_userid,:d_sotoa,:d_maql,:d_diachi,:d_ghichu,:d_userid_vp)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
                    cmd.Parameters.Add("d_namsinh", NpgsqlDbType.Varchar, 4).Value = d_namsinh;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_sotoa", NpgsqlDbType.Numeric).Value = d_sotoa;
                    cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                    cmd.Parameters.Add("d_diachi", NpgsqlDbType.Text).Value = d_diachi;
                    cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                    cmd.Parameters.Add("d_userid_vp", NpgsqlDbType.Numeric).Value = d_userid_vp;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_ngtrull");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }


        public bool upd_ngtrull(string d_mmyy, decimal d_id, int d_nhom, string d_mabn, string d_hoten, string d_namsinh, string d_ngay, string d_mabs, int d_makp, int d_loai, int d_userid, int d_sotoa, decimal d_maql, string d_diachi, string d_ghichu)
        {
            string sql = "update " + user + d_mmyy + ".d_ngtrull set nhom=:d_nhom,mabn=:d_mabn,hoten=:d_hoten,";
            sql += "namsinh=:d_namsinh,ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),mabs=:d_mabs,makp=:d_makp,";
            sql += "loai=:d_loai,userid=:d_userid,sotoa=:d_sotoa,maql=:d_maql,diachi=:d_diachi,ghichu=:d_ghichu where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
            cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
            cmd.Parameters.Add("d_namsinh", NpgsqlDbType.Varchar, 4).Value = d_namsinh;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
            cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_sotoa", NpgsqlDbType.Numeric).Value = d_sotoa;
            cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
            cmd.Parameters.Add("d_diachi", NpgsqlDbType.Text).Value = d_diachi;
            cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_ngtrull(id,nhom,mabn,hoten,namsinh,ngay,";
                    sql += "mabs,makp,loai,userid,sotoa,maql,diachi,ghichu) values (:d_id,:d_nhom,:d_mabn,";
                    sql += ":d_hoten,:d_namsinh,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_mabs,:d_makp,:d_loai,";
                    sql += ":d_userid,:d_sotoa,:d_maql,:d_diachi,:d_ghichu)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
                    cmd.Parameters.Add("d_namsinh", NpgsqlDbType.Varchar, 4).Value = d_namsinh;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_sotoa", NpgsqlDbType.Numeric).Value = d_sotoa;
                    cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                    cmd.Parameters.Add("d_diachi", NpgsqlDbType.Text).Value = d_diachi;
                    cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_ngtrull");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }
        public bool upd_ngtruct(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_makho, int d_mabd, decimal d_soluong, decimal d_giaban, string d_cachdung)
        {
            //schema = user + d_mmyy + ".upd_ngtruct";
            schema = user + d_mmyy;
            sql = "update " + schema + ".d_ngtruct set sttt=:d_sttt,makho=:d_makho,mabd=:d_mabd,soluong=:d_soluong,giaban=:d_giaban, cachdung=:d_cachdung where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;

                cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + schema + ".d_ngtruct(id,stt,sttt,makho,mabd,soluong,giaban, cachdung) values (:d_id,:d_stt,:d_sttt,:d_makho,:d_mabd,:d_soluong,:d_giaban, :d_cachdung)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;

                    cmd.ExecuteNonQuery();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_ngtruct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_ngtruct(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_makho, int d_mabd, decimal d_soluong, decimal d_giaban, int d_madoituong, int d_paid, string d_cachdung)
        {

            schema = user + d_mmyy;
            sql = "update " + schema + ".d_ngtruct set sttt=:d_sttt,makho=:d_makho,mabd=:d_mabd,soluong=:d_soluong,giaban=:d_giaban,madoituong=:d_madoituong,paid=:d_paid, cachdung=:d_cachdung where id=:d_id and stt=:d_stt";
            //schema = user + d_mmyy + ".upd_ngtruct";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_paid", NpgsqlDbType.Numeric).Value = d_paid;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = " insert into " + schema + ".d_ngtruct(id,stt,sttt,makho,mabd,soluong,giaban,madoituong,paid, cachdung) values (:d_id,:d_stt,:d_sttt,:d_makho,:d_mabd,:d_soluong,:d_giaban,:d_madoituong,:d_paid, :d_cachdung)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_paid", NpgsqlDbType.Numeric).Value = d_paid;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.ExecuteNonQuery();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_ngtruct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_bienlai(string d_mmyy, decimal d_id, string d_sohieu, int d_sobienlai, decimal d_sotien)
        {
            sql = "update " + user + d_mmyy + ".d_bienlai set sohieu=:d_sohieu,sobienlai=:d_sobienlai,sotien=:d_sotien where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_sohieu", NpgsqlDbType.Varchar, 20).Value = d_sohieu;
                cmd.Parameters.Add("d_sobienlai", NpgsqlDbType.Numeric).Value = d_sobienlai;
                cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_bienlai (id,sohieu,sobienlai,sotien) values (:d_id,:d_sohieu,:d_sobienlai,:d_sotien)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_sohieu", NpgsqlDbType.Varchar, 20).Value = d_sohieu;
                    cmd.Parameters.Add("d_sobienlai", NpgsqlDbType.Numeric).Value = d_sobienlai;
                    cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message.ToString().Trim(), sComputer, "d_bienlai");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_xuatsdll(string d_mmyy, decimal d_id, int d_nhom, string d_mabn,
            decimal d_mavaovien, decimal d_maql, decimal d_idkhoa, string d_ngay, int d_loai, int d_phieu,
            int d_makp, int d_userid, decimal d_idduyet, int d_thuoc, int d_makhoa, int d_lydo, int d_lk,
            string d_ghichu, string d_ngayylenh, int d_loaipttt, string s_mabs)
        {
            sql = "update " + user + d_mmyy + ".d_xuatsdll set nhom=:d_nhom,mabn=:d_mabn,mavaovien=:d_mavaovien,maql=:d_maql,";
            sql += "idkhoa=:d_idkhoa,ngayylenh=to_timestamp(:d_ngayylenh,'dd/mm/yyyy'),ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),";
            sql += "loai=:d_loai,phieu=:d_phieu,makp=:d_makp,userid=:d_userid,idduyet=:d_idduyet,thuoc=:d_thuoc,";
            sql += "makhoa=:d_makhoa,lydo=:d_lydo,lk=:d_lk,ghichu=:d_ghichu,loaipttt=:d_loaipttt,mabs=:s_mabs where id=:d_id";

            //schema = user + d_mmyy + ".upd_xuatsdll";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
            cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
            cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
            cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
            cmd.Parameters.Add("d_ngayylenh", NpgsqlDbType.Varchar, 10).Value = d_ngayylenh;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
            cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
            cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
            cmd.Parameters.Add("d_thuoc", NpgsqlDbType.Numeric).Value = d_thuoc;
            cmd.Parameters.Add("d_makhoa", NpgsqlDbType.Numeric).Value = d_makhoa;
            cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
            cmd.Parameters.Add("d_lk", NpgsqlDbType.Numeric).Value = d_lk;
            cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
            cmd.Parameters.Add("d_loaipttt", NpgsqlDbType.Numeric).Value = d_loaipttt;
            cmd.Parameters.Add("s_mabs", NpgsqlDbType.Varchar, 10).Value = s_mabs;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_xuatsdll(id,nhom,mabn,mavaovien,maql,idkhoa,";
                    sql += "ngayylenh,ngay,loai,phieu,makp,userid,idduyet,thuoc,makhoa,lydo,lk,ghichu,loaipttt,mabs) ";
                    sql += "values (:d_id,:d_nhom,:d_mabn,:d_mavaovien,:d_maql,:d_idkhoa,";
                    sql += "to_timestamp(:d_ngayylenh,'dd/mm/yyyy')";
                    sql += ",to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_loai,:d_phieu,:d_makp,:d_userid,:d_idduyet,";
                    sql += ":d_thuoc,:d_makhoa,:d_lydo,:d_lk,:d_ghichu,:d_loaipttt,:s_mabs)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                    cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                    cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                    cmd.Parameters.Add("d_ngayylenh", NpgsqlDbType.Varchar, 10).Value = d_ngayylenh;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                    cmd.Parameters.Add("d_thuoc", NpgsqlDbType.Numeric).Value = d_thuoc;
                    cmd.Parameters.Add("d_makhoa", NpgsqlDbType.Numeric).Value = d_makhoa;
                    cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
                    cmd.Parameters.Add("d_lk", NpgsqlDbType.Numeric).Value = d_lk;
                    cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                    cmd.Parameters.Add("d_loaipttt", NpgsqlDbType.Numeric).Value = d_loaipttt;
                    cmd.Parameters.Add("s_mabs", NpgsqlDbType.Varchar, 10).Value = s_mabs;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xuatsdll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }
        public bool upd_xuatsdct1(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_madoituong, int d_makho, int d_mabd, decimal d_soluong, decimal d_sttduyet, decimal d_giaban)
        {
            schema = user + d_mmyy + ".upd_xuatsdct";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_sttduyet", NpgsqlDbType.Numeric).Value = d_sttduyet;
                cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xuatsdct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_xuatsdct(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_madoituong, int d_makho, int d_mabd, decimal d_soluong, decimal d_sttduyet, decimal d_giaban, string d_ngayylenh, decimal d_gia_bh, bool d_themmoi)
        {
            //schema = user + d_mmyy + ".upd_xuatsdct";

            string sql = "update " + user + d_mmyy + ".d_xuatsdct set sttt=:d_sttt,madoituong=:d_madoituong,";
            sql += "makho=:d_makho,mabd=:d_mabd,soluong=:d_soluong,sttduyet=:d_sttduyet,giaban=:d_giaban, ";
            sql += "ngayylenh=to_timestamp(:d_ngayylenh,'dd/mm/yyyy'), gia_bh=:d_gia_bh where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            con.Open();
            int irec = 0;
            try
            {
                if (d_themmoi == false)
                {
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_sttduyet", NpgsqlDbType.Numeric).Value = d_sttduyet;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_ngayylenh", NpgsqlDbType.Varchar, 10).Value = d_ngayylenh;
                    cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;


                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
                if (irec == 0 || d_themmoi)
                {
                    sql = "insert into " + user + d_mmyy + ".d_xuatsdct(id,stt,sttt,madoituong,makho";
                    sql += ",mabd,soluong,sttduyet,giaban, ngayylenh, gia_bh) values (:d_id,:d_stt,:d_sttt,:d_madoituong,";
                    sql += ":d_makho,:d_mabd,:d_soluong,:d_sttduyet,:d_giaban,to_timestamp(:d_ngayylenh,'dd/mm/yyyy'), :d_gia_bh )";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_sttduyet", NpgsqlDbType.Numeric).Value = d_sttduyet;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_ngayylenh", NpgsqlDbType.Varchar, 10).Value = d_ngayylenh;
                    cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xuatsdct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_xuatsdct(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_madoituong, int d_makho, int d_mabd, decimal d_soluong, decimal d_sttduyet, decimal d_giaban, string d_ngayylenh, decimal d_gia_bh, bool d_themmoi,long d_id_ktcao)
        {
            //schema = user + d_mmyy + ".upd_xuatsdct";

            string sql = "update " + user + d_mmyy + ".d_xuatsdct set sttt=:d_sttt,madoituong=:d_madoituong,";
            sql += "makho=:d_makho,mabd=:d_mabd,soluong=:d_soluong,sttduyet=:d_sttduyet,giaban=:d_giaban, ";
            sql += "ngayylenh=to_timestamp(:d_ngayylenh,'dd/mm/yyyy'), gia_bh=:d_gia_bh where id=:d_id and stt=:d_stt and id_ktcao=:d_id_ktcao";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            con.Open();
            int irec = 0;
            try
            {
                if (d_themmoi == false)
                {
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_sttduyet", NpgsqlDbType.Numeric).Value = d_sttduyet;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_ngayylenh", NpgsqlDbType.Varchar, 10).Value = d_ngayylenh;
                    cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_id_ktcao", NpgsqlDbType.Numeric).Value = d_id_ktcao;


                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
                if (irec == 0 || d_themmoi)
                {
                    sql = "insert into " + user + d_mmyy + ".d_xuatsdct(id,stt,sttt,madoituong,makho";
                    sql += ",mabd,soluong,sttduyet,giaban, ngayylenh, gia_bh,id_ktcao) values (:d_id,:d_stt,:d_sttt,:d_madoituong,";
                    sql += ":d_makho,:d_mabd,:d_soluong,:d_sttduyet,:d_giaban,to_timestamp(:d_ngayylenh,'dd/mm/yyyy'), :d_gia_bh, :d_id_ktcao )";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_sttduyet", NpgsqlDbType.Numeric).Value = d_sttduyet;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_ngayylenh", NpgsqlDbType.Varchar, 10).Value = d_ngayylenh;
                    cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                    cmd.Parameters.Add("d_id_ktcao", NpgsqlDbType.Numeric).Value = d_id_ktcao;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xuatsdct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_bucstt(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_makho, int d_mabd, decimal d_soluong,
            int d_sttduyet, decimal d_giaban, decimal d_sltreo, int d_madoituong)
        {
            //schema = user + d_mmyy + ".upd_bucstt";
            string sql = "update " + user + d_mmyy + ".d_bucstt set sttt=:d_sttt,makho=:d_makho,mabd=:d_mabd,";
            sql += "soluong=:d_soluong,sttduyet=:d_sttduyet,giaban=:d_giaban,sltreo=:d_sltreo,";
            sql += "madoituong=:d_madoituong where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_sttduyet", NpgsqlDbType.Numeric).Value = d_sttduyet;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_sltreo", NpgsqlDbType.Numeric).Value = d_sltreo;
            cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_bucstt(id,stt,sttt,makho,mabd,soluong,sttduyet,";
                    sql += "giaban,sltreo,madoituong) values (:d_id,:d_stt,:d_sttt,:d_makho,:d_mabd,";
                    sql += ":d_soluong,:d_sttduyet,:d_giaban,:d_sltreo,:d_madoituong)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_sttduyet", NpgsqlDbType.Numeric).Value = d_sttduyet;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_sltreo", NpgsqlDbType.Numeric).Value = d_sltreo;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_bucstt");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_toathuocll(decimal d_id, int d_sophieu, string d_mabn, decimal d_maql, string d_ngay, string d_makp, string d_chandoan, string d_maicd, string d_mabs, string d_ghichu, int d_userid, decimal d_songay)
        {
            schema = user + mmyy(d_ngay) + ".upd_toathuocll";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Numeric).Value = d_sophieu;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 16).Value = d_ngay;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                cmd.Parameters.Add("d_chandoan", NpgsqlDbType.Text).Value = d_chandoan;
                cmd.Parameters.Add("d_maicd", NpgsqlDbType.Varchar, 9).Value = d_maicd;
                cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_songay", NpgsqlDbType.Numeric).Value = d_songay;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy(d_ngay), ex.Message, sComputer, "d_toathuocll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_toathuocct(string d_ngay, decimal d_id, decimal d_stt, decimal d_mabd, decimal d_soluong, string d_cachdung, decimal d_solan, decimal d_lan)
        {
            schema = user + mmyy(d_ngay) + ".upd_toathuocct";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy(d_ngay), ex.Message, sComputer, "d_toathuocct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_theodonll(decimal d_id, string d_mabs, string d_maicd, string d_ghichu, decimal d_stt, int d_so, decimal d_songay)
        {
            sql = "update " + user + ".d_theodonll set mabs=:d_mabs,maicd=:d_maicd,ghichu=:d_ghichu,stt=:d_stt,so=:d_so,songay=:d_songay where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                cmd.Parameters.Add("d_maicd", NpgsqlDbType.Varchar, 9).Value = d_maicd;
                cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_so", NpgsqlDbType.Numeric).Value = d_so;
                cmd.Parameters.Add("d_songay", NpgsqlDbType.Numeric).Value = d_songay;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_theodonll (id,mabs,maicd,ghichu,stt,so,songay)";
                    sql += " values (:d_id,:d_mabs,:d_maicd,:d_ghichu,:d_stt,:d_so,:d_songay)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                    cmd.Parameters.Add("d_maicd", NpgsqlDbType.Varchar, 9).Value = d_maicd;
                    cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_so", NpgsqlDbType.Numeric).Value = d_so;
                    cmd.Parameters.Add("d_songay", NpgsqlDbType.Numeric).Value = d_songay;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_theodonll");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_theodonct(decimal d_id, int d_mabd, decimal d_soluong, string d_cachdung, int d_stt,int d_madoituong)
        {
            sql = "update " + user + ".d_theodonct set soluong=" + d_soluong + ",cachdung=:d_cachdung,stt=" + d_stt + ",madoituong="+d_madoituong+" where id=" + d_id + " and mabd=" + d_mabd;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_theodonct (id,mabd,soluong,cachdung,stt,madoituong)";
                    sql += " values (" + d_id + "," + d_mabd + "," + d_soluong + ",:d_cachdung," + d_stt + ","+d_madoituong+")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_theodonct");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dmthuoc(decimal d_id, string d_ten, string d_dang, string d_cachdung, string d_tenhc)
        {
            sql = "update " + user + ".d_dmthuoc set ten=:d_ten,dang=:d_dang,cachdung=:d_cachdung,tenhc=:d_tenhc where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_dang", NpgsqlDbType.Text).Value = d_dang;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_tenhc", NpgsqlDbType.Text).Value = d_tenhc;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmthuoc (id,ten,dang,cachdung,tenhc) values (:d_id,:d_ten,:d_dang,:d_cachdung,:d_tenhc)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_dang", NpgsqlDbType.Text).Value = d_dang;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.Parameters.Add("d_tenhc", NpgsqlDbType.Text).Value = d_tenhc;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmthuoc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            upd_dmcachdung(d_cachdung);
            return true;
        }
        //Tu:21/05/2011
        public bool upd_dmthuoc(decimal d_id, string d_ten, string d_dang, string d_cachdung, string d_tenhc,
            int d_nhom_bc, int d_loai_bc, int d_nhom_bo, string d_generic, string d_atc)
        {
            sql = "update " + user + ".d_dmthuoc set ten=:d_ten,dang=:d_dang,cachdung=:d_cachdung,tenhc=:d_tenhc ";
            sql += ",nhom_bc=:d_nhom_bc,loai_bc=:d_loai_bc,nhom_bo=:d_nhom_bo,generic=:d_generic,atc=:d_atc ";
            sql += "where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_dang", NpgsqlDbType.Text).Value = d_dang;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_tenhc", NpgsqlDbType.Text).Value = d_tenhc;
                cmd.Parameters.Add("d_nhom_bc", NpgsqlDbType.Numeric).Value = d_nhom_bc;
                cmd.Parameters.Add("d_loai_bc", NpgsqlDbType.Numeric).Value = d_loai_bc;
                cmd.Parameters.Add("d_nhom_bo", NpgsqlDbType.Numeric).Value = d_nhom_bo;
                cmd.Parameters.Add("d_generic", NpgsqlDbType.Text).Value = d_generic;
                cmd.Parameters.Add("d_atc", NpgsqlDbType.Text).Value = d_atc;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmthuoc (id,ten,dang,cachdung,tenhc,nhom_bc,loai_bc,nhom_bo,generic,atc)";
                    sql += " values (:d_id,:d_ten,:d_dang,:d_cachdung,:d_tenhc,:d_nhom_bc,:d_loai_bc,:d_nhom_bo,:d_generic,:d_atc)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_dang", NpgsqlDbType.Text).Value = d_dang;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.Parameters.Add("d_tenhc", NpgsqlDbType.Text).Value = d_tenhc;
                    cmd.Parameters.Add("d_nhom_bc", NpgsqlDbType.Numeric).Value = d_nhom_bc;
                    cmd.Parameters.Add("d_loai_bc", NpgsqlDbType.Numeric).Value = d_loai_bc;
                    cmd.Parameters.Add("d_nhom_bo", NpgsqlDbType.Numeric).Value = d_nhom_bo;
                    cmd.Parameters.Add("d_generic", NpgsqlDbType.Text).Value = d_generic;
                    cmd.Parameters.Add("d_atc", NpgsqlDbType.Text).Value = d_atc;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmthuoc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            upd_dmcachdung(d_cachdung);
            return true;
        }
        //end Tu
        public bool upd_bhytkb(string d_mmyy, decimal d_id, int d_nhom, decimal d_quyenso, decimal d_sobienlai, string d_ngay, string d_mabn,
            decimal d_mavaovien, decimal d_maql, string d_makp, string d_chandoan, string d_maicd, string d_mabs, string d_sothe,
            int d_maphu, string d_mabv, decimal d_congkham, decimal d_thuoc, decimal d_cls, decimal d_bntra, decimal d_bhyttra,
            int d_userid, int d_loaiba, int d_traituyen, int d_bove)
        {
            //schema = user + d_mmyy + ".upd_bhytkb";
            string asql = "update " + user + d_mmyy + ".bhytkb set nhom=:d_nhom,quyenso=:d_quyenso,sobienlai=:d_sobienlai,";
            asql += "ngay=to_timestamp(:d_ngay,'dd/mm/yyyy hh24:mi'),mabn=:d_mabn,mavaovien=:d_mavaovien,maql=:d_maql,makp=:d_makp,";
            asql += "chandoan=:d_chandoan,maicd=:d_maicd,mabs=:d_mabs,sothe=:d_sothe,maphu=:d_maphu,mabv=:d_mabv,congkham=:d_congkham,";
            asql += "thuoc=:d_thuoc,cls=:d_cls,bntra=:d_bntra,bhyttra=:d_bhyttra,userid=:d_userid,loaiba=:d_loaiba,traituyen=:d_traituyen,bove=:d_bove where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(asql, con);
                cmd.CommandType = CommandType.Text;

                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_quyenso", NpgsqlDbType.Numeric).Value = d_quyenso;
                cmd.Parameters.Add("d_sobienlai", NpgsqlDbType.Numeric).Value = d_sobienlai;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                cmd.Parameters.Add("d_chandoan", NpgsqlDbType.Text).Value = d_chandoan;
                cmd.Parameters.Add("d_maicd", NpgsqlDbType.Varchar, 9).Value = d_maicd;
                cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                cmd.Parameters.Add("d_maphu", NpgsqlDbType.Numeric).Value = d_maphu;
                cmd.Parameters.Add("d_mabv", NpgsqlDbType.Varchar).Value = d_mabv;
                cmd.Parameters.Add("d_congkham", NpgsqlDbType.Numeric).Value = d_congkham;
                cmd.Parameters.Add("d_thuoc", NpgsqlDbType.Numeric).Value = d_thuoc;
                cmd.Parameters.Add("d_cls", NpgsqlDbType.Numeric).Value = d_cls;
                cmd.Parameters.Add("d_bntra", NpgsqlDbType.Numeric).Value = d_bntra;
                cmd.Parameters.Add("d_bhyttra", NpgsqlDbType.Numeric).Value = d_bhyttra;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_loaiba", NpgsqlDbType.Numeric).Value = d_loaiba;
                cmd.Parameters.Add("d_traituyen", NpgsqlDbType.Numeric).Value = d_traituyen;
                cmd.Parameters.Add("d_bove", NpgsqlDbType.Numeric).Value = d_bove;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irc = cmd.ExecuteNonQuery();
                if (irc == 0)
                {
                    asql = "insert into " + user + d_mmyy + ".bhytkb(id,nhom,quyenso,sobienlai,ngay,mabn,mavaovien,maql,makp,chandoan,";
                    asql += "maicd,mabs,sothe,maphu,mabv,congkham,thuoc,cls,bntra,bhyttra,userid,sotoa,loaiba,traituyen,bove) values ";
                    asql += "(:d_id,:d_nhom,:d_quyenso,:d_sobienlai,to_timestamp(:d_ngay,'dd/mm/yyyy hh24:mi'),:d_mabn,:d_mavaovien,:d_maql,:d_makp,";
                    asql += ":d_chandoan,:d_maicd,:d_mabs,:d_sothe,:d_maphu,:d_mabv,:d_congkham,:d_thuoc,:d_cls,:d_bntra,:d_bhyttra,:d_userid,0,";
                    asql += ":d_loaiba,:d_traituyen,:d_bove)";

                    cmd = new NpgsqlCommand(asql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_quyenso", NpgsqlDbType.Numeric).Value = d_quyenso;
                    cmd.Parameters.Add("d_sobienlai", NpgsqlDbType.Numeric).Value = d_sobienlai;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                    cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                    cmd.Parameters.Add("d_chandoan", NpgsqlDbType.Text).Value = d_chandoan;
                    cmd.Parameters.Add("d_maicd", NpgsqlDbType.Varchar, 9).Value = d_maicd;
                    cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                    cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                    cmd.Parameters.Add("d_maphu", NpgsqlDbType.Numeric).Value = d_maphu;
                    cmd.Parameters.Add("d_mabv", NpgsqlDbType.Varchar).Value = d_mabv;
                    cmd.Parameters.Add("d_congkham", NpgsqlDbType.Numeric).Value = d_congkham;
                    cmd.Parameters.Add("d_thuoc", NpgsqlDbType.Numeric).Value = d_thuoc;
                    cmd.Parameters.Add("d_cls", NpgsqlDbType.Numeric).Value = d_cls;
                    cmd.Parameters.Add("d_bntra", NpgsqlDbType.Numeric).Value = d_bntra;
                    cmd.Parameters.Add("d_bhyttra", NpgsqlDbType.Numeric).Value = d_bhyttra;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_loaiba", NpgsqlDbType.Numeric).Value = d_loaiba;
                    cmd.Parameters.Add("d_traituyen", NpgsqlDbType.Numeric).Value = d_traituyen;
                    cmd.Parameters.Add("d_bove", NpgsqlDbType.Numeric).Value = d_bove;
                    irc = cmd.ExecuteNonQuery();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "bhytkb");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }

        public bool upd_bhytkb(string d_mmyy, decimal d_id, int d_nhom, string d_ngay, string d_mabn, decimal d_mavaovien, decimal d_maql,
            string d_makp, string d_chandoan, string d_maicd, string d_mabs, string d_sothe, int d_maphu, string d_mabv, int d_userid,
            int d_loaiba, int d_traituyen)
        {

            schema = user + d_mmyy + ".upd_bhytkb";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                cmd.Parameters.Add("d_chandoan", NpgsqlDbType.Text).Value = d_chandoan;
                cmd.Parameters.Add("d_maicd", NpgsqlDbType.Varchar, 9).Value = d_maicd;
                cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                cmd.Parameters.Add("d_maphu", NpgsqlDbType.Numeric).Value = d_maphu;
                cmd.Parameters.Add("d_mabv", NpgsqlDbType.Varchar, 8).Value = d_mabv;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_loaiba", NpgsqlDbType.Numeric).Value = d_loaiba;
                cmd.Parameters.Add("d_traituyen", NpgsqlDbType.Numeric).Value = d_traituyen;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "bhytkb");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            upd_hcton(d_nhom, d_mmyy, d_userid);
            return true;
        }

        public bool upd_bhytds(string d_mmyy, string d_mabn, string d_hoten, string d_namsinh, string d_diachi)
        {
            schema = user + d_mmyy + ".upd_bhytds";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_hoten", NpgsqlDbType.Text).Value = d_hoten;
                cmd.Parameters.Add("d_namsinh", NpgsqlDbType.Varchar, 4).Value = d_namsinh;
                cmd.Parameters.Add("d_diachi", NpgsqlDbType.Text).Value = d_diachi;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "bhytds");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_bhytthuoc(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_makho, int d_mabd, decimal d_soluong,
            string d_cachdung, decimal d_giaban)
        {
            //schema = user + d_mmyy + ".upd_bhytthuoc";
            string sql = "update " + user + d_mmyy + ".bhytthuoc set sttt=:d_sttt,makho=:d_makho,mabd=:d_mabd,";
            sql += "soluong=:d_soluong,cachdung=:d_cachdung,giaban=:d_giaban where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".bhytthuoc(id,stt,sttt,makho,mabd,soluong,";
                    sql += "cachdung,giaban) values (:d_id,:d_stt,:d_sttt,:d_makho,:d_mabd,:d_soluong,:d_cachdung,:d_giaban)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "bhytthuoc");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_bhytthuoc(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_makho, int d_mabd, decimal d_soluong,
               string d_cachdung, decimal d_giaban, decimal d_gia_bh)
        {
            //schema = user + d_mmyy + ".upd_bhytthuoc";
            string sql = "update " + user + d_mmyy + ".bhytthuoc set sttt=:d_sttt,makho=:d_makho,mabd=:d_mabd,";
            sql += "soluong=:d_soluong,cachdung=:d_cachdung,giaban=:d_giaban,gia_bh=:d_gia_bh where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".bhytthuoc(id,stt,sttt,makho,mabd,soluong,";
                    sql += "cachdung,giaban,gia_bh) values (:d_id,:d_stt,:d_sttt,:d_makho,:d_mabd,:d_soluong,";
                    sql += ":d_cachdung,:d_giaban,:d_gia_bh)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "bhytthuoc");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_bhytcls(string d_mmyy, decimal d_id, decimal d_stt, int d_mavp, decimal d_soluong, decimal d_dongia, decimal d_idchidinh)
        {
            //schema = user + d_mmyy + ".upd_bhytcls";
            string asql = "update " + user + d_mmyy + ".bhytcls set mavp=:d_mavp,soluong=:d_soluong,dongia=:d_dongia,idchidinh=:d_idchidinh where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(asql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mavp", NpgsqlDbType.Numeric).Value = d_mavp;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                cmd.Parameters.Add("d_idchidinh", NpgsqlDbType.Numeric).Value = d_idchidinh;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int rec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (rec == 0)
                {
                    asql = "insert into " + user + d_mmyy + ".bhytcls(id,stt,mavp,soluong,dongia,idchidinh) values (:d_id,:d_stt,:d_mavp,:d_soluong,:d_dongia,:d_idchidinh)";
                    cmd = new NpgsqlCommand(asql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mavp", NpgsqlDbType.Numeric).Value = d_mavp;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                    cmd.Parameters.Add("d_idchidinh", NpgsqlDbType.Numeric).Value = d_idchidinh;
                    rec = cmd.ExecuteNonQuery();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "bhytcls");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public decimal get_dmthuoc(string d_ten, string d_dang, string d_cachdung, string d_tenhc)
        {
            decimal ret = 0;
            sql = "select max(id) as id from " + user + ".d_dmthuoc where ten='" + d_ten + "' and dang='" + d_dang + "'";
            ds = get_data(sql);
            if (ds.Tables[0].Rows[0]["id"].ToString() == "")
            {
                ret = get_id_dmbd;
                upd_dmthuoc(ret, d_ten, d_dang, d_cachdung, d_tenhc);
            }
            else ret = decimal.Parse(ds.Tables[0].Rows[0]["id"].ToString());
            return ret;
        }

        public void get_dmbd(string d_ten, string d_dang, string d_cachdung)
        {
            sql = "select id,tenhc from " + user + ".d_dmbd where ten='" + d_ten + "' and dang='" + d_dang + "'";
            ds = get_data(sql);
            if (ds.Tables[0].Rows.Count > 0) upd_dmthuoc(decimal.Parse(ds.Tables[0].Rows[0]["id"].ToString()), d_ten, d_dang, d_cachdung, ds.Tables[0].Rows[0]["tenhc"].ToString());
        }

        public bool upd_tonkhoct(string d_mmyy, int d_makho, decimal d_stt, int d_mabd, decimal d_tondau)
        {
            //schema = user + mmyy(d_mmyy) + ".upd_tonkhoct";
            string sql = "update " + user + mmyy(d_mmyy) + ".d_tonkhoct set mabd=:d_mabd,tondau=:d_tondau where makho=:d_makho and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_tondau", NpgsqlDbType.Numeric).Value = d_tondau;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy(d_mmyy) + ".d_tonkhoct(makho,stt,idn,sttn,";
                    sql += "mabd,tondau,slnhap,slxuat) values (:d_makho,:d_stt,0,0,:d_mabd,:d_tondau,0,0)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_tondau", NpgsqlDbType.Numeric).Value = d_tondau;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_tonkhoct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_tutrucct(string d_mmyy, int d_makp, int d_makho, decimal d_stt, int d_mabd, decimal d_tondau)
        {
            schema = user + mmyy(d_mmyy) + ".upd_tutrucct";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_tondau", NpgsqlDbType.Numeric).Value = d_tondau;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_tutrucct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dmphieu(int d_id, string d_ten, int d_nhom, decimal d_stt, string d_kho, string d_nguon, string d_madoituong)
        {
            sql = "update " + user + ".d_dmphieu set ten=:d_ten,nhom=:d_nhom,stt=:d_stt,kho=:d_kho,nguon=:d_nguon,madoituong=:d_madoituong where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_kho", NpgsqlDbType.Text).Value = d_kho;
                cmd.Parameters.Add("d_nguon", NpgsqlDbType.Text).Value = d_nguon;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Text).Value = d_madoituong;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmphieu (id,ten,nhom,stt,kho,nguon,madoituong)";
                    sql += " values (:d_id,:d_ten,:d_nhom,:d_stt,:d_kho,:d_nguon,:d_madoituong)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_kho", NpgsqlDbType.Text).Value = d_kho;
                    cmd.Parameters.Add("d_nguon", NpgsqlDbType.Text).Value = d_nguon;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Text).Value = d_madoituong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmphieu");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_diungthuoc(string d_mabn, string d_mahc, int d_mucdo)
        {
            sql = " update " + user + ".diungthuoc set mucdo=:d_mucdo where mabn=:d_mabn and mahc=:d_mahc";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mucdo", NpgsqlDbType.Numeric).Value = d_mucdo;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_mahc", NpgsqlDbType.Varchar, 6).Value = d_mahc;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".diungthuoc (mabn,mahc,mucdo)";
                    sql += " values (:d_mabn,:d_mahc,:d_mucdo)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_mahc", NpgsqlDbType.Varchar, 6).Value = d_mahc;
                    cmd.Parameters.Add("d_mucdo", NpgsqlDbType.Numeric).Value = d_mucdo;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "diungthuoc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        // khuyen 12.02/2014 public bool upd_qn_benhnhan(string d_mabn, decimal d_mavaovien, int d_capbac,int d_chucvu,int d_donvi)
        public bool upd_qn_benhnhan(string d_mabn, decimal d_mavaovien, int d_capbac, int d_chucvu, int d_donvicap1, int d_donvicap2, int d_donvicap3, int d_donvicap4,string d_tieudoan)//khuyen 12/02/2014
        {
            #region khuyen bo 12/02/2014
            /* sql = " update " + user + ".qn_benhnhan set mabn=:d_mabn,idcapbac=:d_capbac,idchucvu=:d_chucvu,iddonvi=:d_donvi where mavaovien=:d_mavaovien ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_capbac", NpgsqlDbType.Numeric).Value = d_capbac;
                cmd.Parameters.Add("d_chucvu", NpgsqlDbType.Numeric).Value = d_chucvu;
                cmd.Parameters.Add("d_donvi", NpgsqlDbType.Numeric).Value = d_donvi;
                cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".qn_benhnhan(mabn,mavaovien,idcapbac,idchucvu,iddonvi)";
                    sql += " values (:d_mabn,:d_mavaovien,:d_capbac,:d_chucvu,:d_donvi)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                    cmd.Parameters.Add("d_capbac", NpgsqlDbType.Numeric).Value = d_capbac;
                    cmd.Parameters.Add("d_chucvu", NpgsqlDbType.Numeric).Value = d_chucvu;
                    cmd.Parameters.Add("d_donvi", NpgsqlDbType.Numeric).Value = d_donvi;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }*/
            #endregion
            //khuyen 12/02/2014 do thay doi cau truc bang
            sql = " update " + user + ".qn_benhnhan set mabn=:d_mabn,idcapbac=:d_capbac,idchucvu=:d_chucvu,iddonvicap1=:d_donvicap1,iddonvicap2=:d_donvicap2,iddonvicap3=:d_donvicap3,iddonvicap4=:d_donvicap4,tieudoan=:d_tieudoan where mavaovien=:d_mavaovien ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_capbac", NpgsqlDbType.Numeric).Value = d_capbac;
                cmd.Parameters.Add("d_chucvu", NpgsqlDbType.Numeric).Value = d_chucvu;
                cmd.Parameters.Add("d_donvicap1", NpgsqlDbType.Numeric).Value = d_donvicap1;
                cmd.Parameters.Add("d_donvicap2", NpgsqlDbType.Numeric).Value = d_donvicap2;
                cmd.Parameters.Add("d_donvicap3", NpgsqlDbType.Numeric).Value = d_donvicap3;
                cmd.Parameters.Add("d_donvicap4", NpgsqlDbType.Numeric).Value = d_donvicap4;
                cmd.Parameters.Add("d_tieudoan", NpgsqlDbType.Varchar).Value = d_tieudoan;
                cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".qn_benhnhan(mabn,mavaovien,idcapbac,idchucvu,iddonvicap1,iddonvicap2,iddonvicap3,iddonvicap4,tieudoan)";
                    sql += " values (:d_mabn,:d_mavaovien,:d_capbac,:d_chucvu,:d_donvicap1,:d_donvicap2,:d_donvicap3,:d_donvicap4,:d_tieudoan)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                    cmd.Parameters.Add("d_capbac", NpgsqlDbType.Numeric).Value = d_capbac;
                    cmd.Parameters.Add("d_chucvu", NpgsqlDbType.Numeric).Value = d_chucvu;
                    cmd.Parameters.Add("d_donvicap1", NpgsqlDbType.Numeric).Value = d_donvicap1;
                    cmd.Parameters.Add("d_donvicap2", NpgsqlDbType.Numeric).Value = d_donvicap2;
                    cmd.Parameters.Add("d_donvicap3", NpgsqlDbType.Numeric).Value = d_donvicap3;
                    cmd.Parameters.Add("d_donvicap4", NpgsqlDbType.Numeric).Value = d_donvicap4;
                    cmd.Parameters.Add("d_tieudoan", NpgsqlDbType.Varchar).Value = d_tieudoan;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            //end khuyen 12/02/2014
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "qn_benhnhan");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_ngaylanh(string d_mmyy, decimal d_id, decimal d_stt, string d_ngay)
        {
            sql = "update " + user + d_mmyy + ".d_ngaylanh set ngay=:d_ngay where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = StringToDate(d_ngay);
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_ngaylanh (id,stt,ngay)";
                    sql += " values (:d_id,:d_stt,:d_ngay)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = StringToDate(d_ngay);
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message.ToString().Trim(), sComputer, "ngaylanh");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public string get_ngaylanh(string d_mmyy, decimal d_id, decimal d_stt)
        {
            ds = get_data("select to_char(ngay,'dd/mm/yyyy') from " + user + d_mmyy + ".d_ngaylanh where id=" + d_id + " and stt=" + d_stt);
            if (ds.Tables[0].Rows.Count == 0) return "";
            else return ds.Tables[0].Rows[0][0].ToString();
        }

        public bool upd_kiemtratondau(string d_mmyy, int d_makho, int d_userid)
        {
            sql = "update " + user + d_mmyy + ".d_solankiemtra set lan=lan+1 where makho=:d_makho and userid=:d_userid";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_solankiemtra (makho,lan,userid) values (:d_makho,1,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message.ToString().Trim(), sComputer, "d_solankiemtra");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            upd_kiemtratondau(d_mmyy, d_makho);
            return true;
        }

        public bool upd_kiemtratondau(string d_mmyy, int d_makho, int d_userid, bool bNewMonth)
        {
            sql = "update " + user + d_mmyy + ".d_solankiemtra set lan=lan+1 where makho=:d_makho and userid=:d_userid";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_solankiemtra (makho,lan,userid) values (:d_makho,1,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message.ToString().Trim(), sComputer, "d_solankiemtra");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            upd_kiemtratondau(d_mmyy, d_makho, bNewMonth);
            return true;
        }

        private void upd_kiemtratondau(string d_mmyy, int d_makho)
        {
            string mmyys = Mmyy_truoc(d_mmyy);
            if (bMmyy(mmyys) && bMmyy(d_mmyy))
            {
                upd_kho_theodoi(mmyys, d_mmyy, d_makho);
                execute_data("update " + user + d_mmyy + ".d_tonkhoct set tondau=0 where makho=" + d_makho);
                foreach (DataRow r in get_data("select a.* from " + user + mmyys + ".d_tonkhoct a where a.makho=" + d_makho + " and a.tondau+a.slnhap-a.slxuat<>0").Tables[0].Rows)
                    upd_tonkhoct(d_mmyy, d_makho, decimal.Parse(r["stt"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["tondau"].ToString()) + decimal.Parse(r["slnhap"].ToString()) - decimal.Parse(r["slxuat"].ToString()));
                if (get_data("select * from " + user + mmyys + ".d_tonkhoth where slyeucau>0 and makho=" + d_makho).Tables[0].Rows.Count > 0 && get_data("select * from " + user + d_mmyy + ".d_tonkhoth where slyeucau>0 and makho=" + d_makho).Tables[0].Rows.Count == 0)
                    foreach (DataRow r in get_data("select * from " + user + mmyys + ".d_tonkhoth where slyeucau>0 and makho=" + d_makho).Tables[0].Rows) execute_data("update " + user + d_mmyy + ".d_tonkhoth set slyeucau=" + decimal.Parse(r["slyeucau"].ToString()) + " where makho=" + d_makho + " and manguon=" + int.Parse(r["manguon"].ToString()) + " and mabd=" + int.Parse(r["mabd"].ToString()));
            }
            execute_data("delete from " + user + ".d_hcton where mmyy='" + mmyys + "' and nhom=" + get_nhomkho);
        }
        public void upd_kiemtratondau(string d_mmyy, int d_makho, bool bNewMonth)
        {
            string mmyys = Mmyy_truoc(d_mmyy);
            if (bMmyy(mmyys) && bMmyy(d_mmyy))
            {
                if (bNewMonth)
                {
                    upd_kho_theodoi(mmyys, d_mmyy, d_makho, bNewMonth);
                    string s_field_name = f_get_field_name(d_mmyy, "d_tonkhoct", "");
                    s_field_name = s_field_name.Replace("slnhap", "0 as slnhap");
                    s_field_name = s_field_name.Replace("slxuat", "0 as slxuat");
                    s_field_name = s_field_name.Replace("tondau", "tondau+slnhap-slxuat as tondau");
                    //
                    //
                    sql = " insert into " + user + d_mmyy + ".d_tonkhoct ";
                    sql += " select " + s_field_name + " from " + user + mmyys + ".d_tonkhoct a where a.tondau+a.slnhap-a.slxuat<>0";
                    if (d_makho > 0) sql += " and a.makho=" + d_makho;
                    sql += " and makho||'-'||stt not in(select  makho||'-'||stt from " + user + d_mmyy + ".d_tonkhoct)";
                    sql += " and a.mabd in(select id from " + user + ".d_dmbd) ";
                    execute_data(sql);
                    //
                    if (get_data("select * from " + user + mmyys + ".d_tonkhoth where slyeucau>0 and makho=" + d_makho).Tables[0].Rows.Count > 0 && get_data("select * from " + user + d_mmyy + ".d_tonkhoth where slyeucau>0 and makho=" + d_makho).Tables[0].Rows.Count == 0)
                        foreach (DataRow r in get_data("select * from " + user + mmyys + ".d_tonkhoth where slyeucau>0 and makho=" + d_makho).Tables[0].Rows) execute_data("update " + user + d_mmyy + ".d_tonkhoth set slyeucau=" + decimal.Parse(r["slyeucau"].ToString()) + " where makho=" + d_makho + " and manguon=" + int.Parse(r["manguon"].ToString()) + " and mabd=" + int.Parse(r["mabd"].ToString()));
                }
                else
                {
                    upd_kho_theodoi(mmyys, d_mmyy, d_makho);
                    execute_data("update " + user + d_mmyy + ".d_tonkhoct set tondau=0 where makho=" + d_makho);
                    foreach (DataRow r in get_data("select a.* from " + user + mmyys + ".d_tonkhoct a where a.makho=" + d_makho + " and a.tondau+a.slnhap-a.slxuat>0").Tables[0].Rows)
                        upd_tonkhoct(d_mmyy, d_makho, decimal.Parse(r["stt"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["tondau"].ToString()) + decimal.Parse(r["slnhap"].ToString()) - decimal.Parse(r["slxuat"].ToString()));
                    if (get_data("select * from " + user + mmyys + ".d_tonkhoth where slyeucau>0 and makho=" + d_makho).Tables[0].Rows.Count > 0 && get_data("select * from " + user + d_mmyy + ".d_tonkhoth where slyeucau>0 and makho=" + d_makho).Tables[0].Rows.Count == 0)
                        foreach (DataRow r in get_data("select * from " + user + mmyys + ".d_tonkhoth where slyeucau>0 and makho=" + d_makho).Tables[0].Rows) execute_data("update " + user + d_mmyy + ".d_tonkhoth set slyeucau=" + decimal.Parse(r["slyeucau"].ToString()) + " where makho=" + d_makho + " and manguon=" + int.Parse(r["manguon"].ToString()) + " and mabd=" + int.Parse(r["mabd"].ToString()));
                }
            }
            execute_data("delete from " + user + ".d_hcton where mmyy='" + mmyys + "' and nhom=" + get_nhomkho);
        }
        public bool upd_kiemtratutrucdau(string d_mmyy, int d_makp, int d_makho, int d_userid)
        {
            sql = "update " + user + d_mmyy + ".d_solankiemtracstt set lan=lan+1 where makp=:d_makp and makho=:d_makho and userid=:d_userid";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_solankiemtracstt (makp,makho,lan,userid) values (:d_makp,:d_makho,1,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message.ToString().Trim(), sComputer, "d_solankiemtracstt");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            upd_kiemtratutrucdau(d_mmyy, d_makp, d_makho);
            return true;
        }
        public bool upd_kiemtratutrucdau(string d_mmyy, int d_makp, int d_makho, int d_userid, bool bNewMonth)
        {
            if (bNewMonth == false)
            {
                sql = "update " + user + d_mmyy + ".d_solankiemtracstt set lan=lan+1 where makp=:d_makp and makho=:d_makho and userid=:d_userid";
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                try
                {
                    con.Open();
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    int irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    if (irec == 0)
                    {
                        sql = "insert into " + user + d_mmyy + ".d_solankiemtracstt (makp,makho,lan,userid) values (:d_makp,:d_makho,1,:d_userid)";
                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                        cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                        cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                        irec = cmd.ExecuteNonQuery();
                        cmd.Dispose();
                    }
                }
                catch (NpgsqlException ex)
                {
                    upd_error(d_mmyy, ex.Message.ToString().Trim(), sComputer, "d_solankiemtracstt");
                    return false;
                }
                finally
                {

                    con.Close(); con.Dispose();
                }
            }
            upd_kiemtratutrucdau(d_mmyy, d_makp, d_makho, bNewMonth);
            return true;
        }

        private void upd_kiemtratutrucdau(string d_mmyy, int d_makp, int d_makho)
        {
            string mmyys = Mmyy_truoc(d_mmyy);
            if (bMmyy(mmyys) && bMmyy(d_mmyy))
            {
                upd_cstt_theodoi(mmyys, d_mmyy, d_makp, d_makho);
                execute_data("update " + user + d_mmyy + ".d_tutrucct set tondau=0 where makho=" + d_makho + " and makp=" + d_makp);
                foreach (DataRow r in get_data("select a.* from " + user + mmyys + ".d_tutrucct a where a.makho=" + d_makho + " and a.makp=" + d_makp + " and a.tondau+a.slnhap-a.slxuat>0").Tables[0].Rows)
                    upd_tutrucct(d_mmyy, d_makp, d_makho, decimal.Parse(r["stt"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["tondau"].ToString()) + decimal.Parse(r["slnhap"].ToString()) - decimal.Parse(r["slxuat"].ToString()));
                foreach (DataRow r in get_data("select * from " + user + ".d_cosotutruc where mmyy='" + mmyys + "' and makp=" + d_makp).Tables[0].Rows)
                    upd_cosotutruc(int.Parse(r["nhom"].ToString()), d_mmyy, d_makp, int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()));
            }
            execute_data("delete from " + user + ".d_hcton where mmyy='" + mmyys + "' and nhom=" + get_nhomkho);
        }
        private void upd_kiemtratutrucdau(string d_mmyy, int d_makp, int d_makho, bool bNewMonth)
        {
            //bNewMonth=true: chi dung khi tao so lieu thang moi, khi tao lai: khong co tac dung
            string mmyys = Mmyy_truoc(d_mmyy);
            if (bMmyy(mmyys) && bMmyy(d_mmyy))
            {
                if (bNewMonth)
                {
                    upd_cstt_theodoi(mmyys, d_mmyy, d_makp, d_makho, bNewMonth);
                    //Chuyen tu truc thang truoc sang thang sau
                    string s_field_name = f_get_field_name(d_mmyy, "d_tutrucct", "");
                    s_field_name = s_field_name.Replace("slnhap", "0 as slnhap");
                    s_field_name = s_field_name.Replace("slxuat", "0 as slxuat");
                    s_field_name = s_field_name.Replace("tondau", "tondau+slnhap-slxuat as tondau");
                    //
                    sql = " insert into " + user + d_mmyy + ".d_tutrucct ";
                    sql += " select " + s_field_name + " from " + user + mmyys + ".d_tutrucct where tondau+slnhap-slxuat<>0 ";
                    if (d_makho > 0) sql += " and makho=" + d_makho;
                    if (d_makp > 0) sql += " and makp=" + d_makp;
                    sql += " and mabd in(select id from " + user + ".d_dmbd)";
                    execute_data(sql);
                    //
                    s_field_name = f_get_field_name("", "d_cosotutruc", "");
                    s_field_name = s_field_name.Replace("mmyy", "'" + d_mmyy + "' as mmyy");
                    sql = " insert into " + user + ".d_cosotutruc ";
                    sql += " select " + s_field_name + " from " + user + ".d_cosotutruc where mmyy='" + mmyys + "'";
                    if (d_makp > 0) sql += " and makp=" + d_makp;
                    sql += " and mabd||'-'||makp||'-'||'" + d_mmyy + "' not in (select mabd||'-'||makp||'-'||mmyy from " + user + ".d_cosotutruc)";
                    execute_data(sql);
                    //
                }
                else
                {
                    upd_cstt_theodoi(mmyys, d_mmyy, d_makp, d_makho);
                    execute_data("update " + user + d_mmyy + ".d_tutrucct set tondau=0 where makho=" + d_makho + " and makp=" + d_makp);
                    foreach (DataRow r in get_data("select a.* from " + user + mmyys + ".d_tutrucct a where a.makho=" + d_makho + " and a.makp=" + d_makp + " and a.tondau+a.slnhap-a.slxuat>0").Tables[0].Rows)
                        upd_tutrucct(d_mmyy, d_makp, d_makho, decimal.Parse(r["stt"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["tondau"].ToString()) + decimal.Parse(r["slnhap"].ToString()) - decimal.Parse(r["slxuat"].ToString()));
                    foreach (DataRow r in get_data("select * from " + user + ".d_cosotutruc where mmyy='" + mmyys + "' and makp=" + d_makp).Tables[0].Rows)
                        upd_cosotutruc(int.Parse(r["nhom"].ToString()), d_mmyy, d_makp, int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()));
                }
            }
            execute_data("delete from " + user + ".d_hcton where mmyy='" + mmyys + "' and nhom=" + get_nhomkho);
        }
        public bool upd_dmcachdung(string d_ten)
        {
            sql = " update " + user + ".d_dmcachdung set ten=:d_ten where ten=:d_ten";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmcachdung (stt,ten) values (0,:d_ten)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmcachdung");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dmcachdung(string d_ten, decimal d_stt)
        {
            sql = " update " + user + ".d_dmcachdung set stt=:d_stt where ten=:d_ten";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmcachdung (stt,ten) values (:d_stt,:d_ten)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmcachdung");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmcachdung(string d_ten, decimal d_stt, int d_hide)
        {
            sql = " update " + user + ".d_dmcachdung set stt=:d_stt, hide=:d_hide where ten=:d_ten";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_hide", NpgsqlDbType.Numeric).Value = d_hide;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;

                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmcachdung (stt,ten, hide) values (:d_stt,:d_ten,:d_hide)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_hide", NpgsqlDbType.Numeric).Value = d_hide;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmcachdung");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public void del_dmcachdung(string d_ten)
        {
            execute_data("delete from " + user + ".d_dmcachdung where ten='" + d_ten + "'");
        }

        public bool upd_nhomkhoa(int d_id, string d_ma, string d_ten, string d_nhom, decimal d_stt, string d_makp)
        {
            sql = " update " + user + ".d_nhomkhoa set ma=:d_ma,ten=:d_ten,nhom=:d_nhom,stt=:d_stt,makp=:d_makp where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Text).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Text).Value = d_makp;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_nhomkhoa (id,ma,ten,nhom,stt,makp) values (:d_id,:d_ma,:d_ten,:d_nhom,:d_stt,:d_makp)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Text).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Text).Value = d_makp;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_nhomkhoa");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_duockp(int d_id, string d_ma, string d_ten, string d_nhom, decimal d_stt, string d_makp, string d_makho, int d_matutruc, string d_nguoilinh, string d_computer, int d_somay)
        {
            sql = " update " + user + ".d_duockp set ma=:d_ma,ten=:d_ten,nhom=:d_nhom,stt=:d_stt,makp=:d_makp,makho=:d_makho,matutruc=:d_matutruc,nguoilinh=:d_nguoilinh,computer=:d_computer,somay=:d_somay where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Text).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Varchar, 50).Value = d_makho;
                cmd.Parameters.Add("d_matutruc", NpgsqlDbType.Numeric).Value = d_matutruc;
                cmd.Parameters.Add("d_nguoilinh", NpgsqlDbType.Text).Value = d_nguoilinh;
                cmd.Parameters.Add("d_computer", NpgsqlDbType.Text).Value = d_computer;
                cmd.Parameters.Add("d_somay", NpgsqlDbType.Numeric).Value = d_somay;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_duockp (id,ma,ten,nhom,stt,makp,makho,matutruc,nguoilinh,computer,somay) values (:d_id,:d_ma,:d_ten,:d_nhom,:d_stt,:d_makp,:d_makho,:d_matutruc,:d_nguoilinh,:d_computer,:d_somay)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Text).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Varchar, 50).Value = d_makho;
                    cmd.Parameters.Add("d_matutruc", NpgsqlDbType.Numeric).Value = d_matutruc;
                    cmd.Parameters.Add("d_nguoilinh", NpgsqlDbType.Text).Value = d_nguoilinh;
                    cmd.Parameters.Add("d_computer", NpgsqlDbType.Text).Value = d_computer;
                    cmd.Parameters.Add("d_somay", NpgsqlDbType.Numeric).Value = d_somay;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_duockp");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_duockp(int d_id, string d_ma, string d_ten, string d_nhom, decimal d_stt, string d_makp, string d_makho, int d_matutruc, string d_nguoilinh, string d_computer, int d_somay, int d_khudt)
        {
            sql = " update " + user + ".d_duockp set ma=:d_ma,ten=:d_ten,nhom=:d_nhom,stt=:d_stt,makp=:d_makp,makho=:d_makho,matutruc=:d_matutruc,nguoilinh=:d_nguoilinh,computer=:d_computer,somay=:d_somay, khu=:d_khudt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Text).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Varchar, 50).Value = d_makho;
                cmd.Parameters.Add("d_matutruc", NpgsqlDbType.Numeric).Value = d_matutruc;
                cmd.Parameters.Add("d_nguoilinh", NpgsqlDbType.Text).Value = d_nguoilinh;
                cmd.Parameters.Add("d_computer", NpgsqlDbType.Text).Value = d_computer;
                cmd.Parameters.Add("d_somay", NpgsqlDbType.Numeric).Value = d_somay;
                cmd.Parameters.Add("d_khudt", NpgsqlDbType.Numeric).Value = d_khudt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_duockp (id,ma,ten,nhom,stt,makp,makho,matutruc,nguoilinh,computer,somay, khu) values (:d_id,:d_ma,:d_ten,:d_nhom,:d_stt,:d_makp,:d_makho,:d_matutruc,:d_nguoilinh,:d_computer,:d_somay,:d_khudt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Text).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Text).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Varchar, 50).Value = d_makho;
                    cmd.Parameters.Add("d_matutruc", NpgsqlDbType.Numeric).Value = d_matutruc;
                    cmd.Parameters.Add("d_nguoilinh", NpgsqlDbType.Text).Value = d_nguoilinh;
                    cmd.Parameters.Add("d_computer", NpgsqlDbType.Text).Value = d_computer;
                    cmd.Parameters.Add("d_somay", NpgsqlDbType.Numeric).Value = d_somay;
                    cmd.Parameters.Add("d_khudt", NpgsqlDbType.Numeric).Value = d_khudt;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_duockp");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public DataSet get_tondau(DataSet ds, DataTable dt, string d_mmyy, int d_makho, int d_manguon, int d_nhom)
        {
            DataRow r1, r2, r3;
            DataRow[] dr;
            string s_khokhongin = "", usr = user, xxx = usr + d_mmyy;
            if (d_makho == -1)
            {
                foreach (DataRow r in get_data("select * from " + usr + ".d_dmkho where hide=0 and nhom=" + d_nhom + " and ketoan=1").Tables[0].Rows)
                    s_khokhongin += r["id"].ToString().Trim() + ",";
            }
            sql = "select a.mabd,sum(a.tondau) as tondau,sum(a.tondau*b.giamua) as sttondau,b.losx,b.handung from " + xxx + ".d_tonkhoct a," + xxx + ".d_theodoi b";
            sql += " where a.stt=b.id and a.tondau<>0";
            if (d_makho != -1) sql += " and a.makho=" + d_makho;
            else if (s_khokhongin != "") sql += " and a.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
            if (d_manguon != -1) sql += " and b.manguon=" + d_manguon;
            sql += " and a.mabd in (select mabd from " + usr + ".d_mabd) group by a.mabd,b.losx,b.handung";
            if (d_makho == -1)
            {
                sql += " union all ";
                sql += "select a.mabd,sum(a.tondau) as tondau,sum(a.tondau*b.giamua) as sttondau,b.losx,b.handung from " + xxx + ".d_tutrucct a," + xxx + ".d_theodoi b";
                sql += " where a.stt=b.id and a.tondau<>0";
                if (s_khokhongin != "") sql += " and a.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                if (d_manguon != -1) sql += " and b.manguon=" + d_manguon;
                sql += " and a.mabd in (select mabd from " + usr + ".d_mabd) group by a.mabd,b.losx,b.handung";
            }
            bool bCongdon = bThekho_congdon(get_nhomkho);
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    r3 = getrowbyid(ds.Tables[0], "mabd=" + int.Parse(r["mabd"].ToString()));
                    if (r3 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["yymmdd"] = "";
                        r2["ngay"] = "";
                        r2["sonhap"] = "";
                        r2["soxuat"] = "";
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        if (bCongdon)
                        {
                            r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                            r2["tennuoc"] = r1["tennhom"].ToString();
                        }
                        else
                        {
                            r2["tenhang"] = r1["tenhang"].ToString();
                            r2["tennuoc"] = r1["tennuoc"].ToString();
                        }
                        r2["diengiai"] = "Tồn đầu";
                        r2["tondau"] = r["tondau"].ToString();
                        r2["sttondau"] = r["sttondau"].ToString();
                        r2["slnhap"] = 0;
                        r2["stnhap"] = 0;
                        r2["slxuat"] = 0;
                        r2["stxuat"] = 0;
                        r2["toncuoi"] = r["tondau"].ToString();
                        r2["sttoncuoi"] = r["sttondau"].ToString();
                        r2["losx"] = r["losx"].ToString();
                        r2["handung"] = r["handung"].ToString();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select("mabd=" + int.Parse(r["mabd"].ToString()));
                        if (dr.Length > 0)
                        {
                            dr[0]["tondau"] = decimal.Parse(dr[0]["tondau"].ToString()) + decimal.Parse(r["tondau"].ToString());
                            dr[0]["sttondau"] = decimal.Parse(dr[0]["sttondau"].ToString()) + decimal.Parse(r["sttondau"].ToString());
                        }
                    }
                }
            }
            ds.AcceptChanges();
            return ds;
        }

        public DataSet get_nhap(DataSet ds, DataTable dt, DataTable dtkp, DataTable dtkho, string d_tu, string d_den, string d_yy, int d_makho, int d_manguon, int d_nhom)
        {
            string s_khokhongin = "", usr = user, xxx;
            if (d_makho == -1)
            {
                foreach (DataRow r in get_data("select * from " + usr + ".d_dmkho where hide=0 and nhom=" + d_nhom + " and ketoan=1").Tables[0].Rows)
                    s_khokhongin += r["id"].ToString().Trim() + ",";
            }
            bool bSophieu = bThekho_sophieu(d_nhom), bDongia = bDongia_thekho(d_nhom);
            bool bCongdon = bThekho_congdon(d_nhom);
            DataRow r1, r2, r3;
            string s_diengiai = "", d_mmyy;
            int i_tu = int.Parse(d_tu), i_den = int.Parse(d_den);
            for (int i = i_tu; i <= i_den; i++)
            {
                d_mmyy = i.ToString().PadLeft(2, '0') + d_yy;
                if (bMmyy(d_mmyy))
                {
                    xxx = usr + d_mmyy;
                    sql = "select ";
                    if (bSophieu) sql += "to_char(a.ngaysp,'dd/mm/yyyy') as ngay,a.sophieu as so,";
                    else sql += "to_char(a.ngayhd,'dd/mm/yyyy') as ngay,a.sohd as so,";
                    sql += "b.mabd,b.handung,b.soluong,b.sotien+b.sotien*b.vat/100+b.cuocvc+b.chaythu as sotien,a.loai,c.ten as diengiai,b.giamua,a.nguoigiao ";
                    sql += " from " + xxx + ".d_nhapll a inner join " + xxx + ".d_nhapct b on a.id=b.id ";
                    sql += " left join " + user + ".d_dmnx c on a.madv=c.id";
                    sql += " where b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    if (d_makho != -1) sql += " and a.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and a.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and a.manguon=" + d_manguon;
                    sql += " order by a.ngayhd";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = r["so"].ToString();
                            r2["soxuat"] = "";
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            switch (r["loai"].ToString())
                            {
                                case "M": r2["diengiai"] = "Nhập mới: ";
                                    break;
                                case "T": r2["diengiai"] = "Tái nhập: ";
                                    break;
                                default: r2["diengiai"] = "Hoàn trả : ";
                                    break;
                            }
                            r2["diengiai"] += (r["loai"].ToString() == "N") ? r["nguoigiao"].ToString() : r["diengiai"].ToString();
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = r["soluong"].ToString();
                            r2["stnhap"] = r["sotien"].ToString();
                            r2["slxuat"] = 0;
                            r2["stxuat"] = 0;
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["handung"] = r["handung"].ToString();
                            if (bDongia) r2["dongia"] = r["giamua"].ToString();
                            else r2["dongia"] = 0;
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    if (d_makho != -1)
                    {
                        sql = "select a.sophieu as so,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.lydo,a.loai,a.khox,a.khon,b.mabd,b.soluong,b.soluong*c.giamua as sotien,c.giamua,c.handung ";
                        sql += " from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b," + xxx + ".d_theodoi c ";
                        sql += " where a.id=b.id and b.sttt=c.id and a.loai in ('CK','TH','HT') and a.khon=" + d_makho;
                        if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                        sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) order by a.ngay";
                        foreach (DataRow r in get_data(sql).Tables[0].Rows)
                        {
                            r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                            if (r1 != null)
                            {
                                r3 = getrowbyid(dtkp, "id=" + int.Parse(r["khox"].ToString()));
                                r2 = ds.Tables[0].NewRow();
                                r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                                r2["ngay"] = r["ngay"].ToString();
                                r2["sonhap"] = r["so"].ToString();
                                r2["soxuat"] = "";
                                r2["mabd"] = r["mabd"].ToString();
                                r2["ma"] = r1["ma"].ToString();
                                r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                                r2["tenhc"] = r1["tenhc"].ToString();
                                r2["dang"] = r1["dang"].ToString();
                                if (bCongdon)
                                {
                                    r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                    r2["tennuoc"] = r1["tennhom"].ToString();
                                }
                                else
                                {
                                    r2["tenhang"] = r1["tenhang"].ToString();
                                    r2["tennuoc"] = r1["tennuoc"].ToString();
                                }
                                switch (r["loai"].ToString())
                                {
                                    case "TH":
                                        s_diengiai = "Thu hồi :" + r3["ten"].ToString();
                                        break;
                                    case "HT":
                                        s_diengiai = r3["ten"].ToString() + ": Hoàn trả ";
                                        break;
                                    default:
                                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["khox"].ToString()));
                                        if (r3 != null) s_diengiai = "Nhập từ :" + r3["ten"].ToString();
                                        break;
                                }
                                r2["diengiai"] = s_diengiai;
                                r2["tondau"] = 0;
                                r2["sttondau"] = 0;
                                r2["slnhap"] = r["soluong"].ToString();
                                r2["stnhap"] = r["sotien"].ToString();
                                r2["slxuat"] = 0;
                                r2["stxuat"] = 0;
                                r2["toncuoi"] = r["soluong"].ToString();
                                r2["sttoncuoi"] = r["sotien"].ToString();
                                r2["handung"] = r["handung"].ToString();
                                if (bDongia) r2["dongia"] = r["giamua"].ToString();
                                else r2["dongia"] = 0;
                                ds.Tables[0].Rows.Add(r2);
                            }
                        }
                    }
                    else if (s_khokhongin != "")
                    {
                        sql = "select a.sophieu as so,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.lydo,a.loai,a.khox,a.khon,b.mabd,b.soluong,b.soluong*c.giamua as sotien,c.giamua,c.handung ";
                        sql += " from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b," + xxx + ".d_theodoi c ";
                        sql += " where a.id=b.id and b.sttt=c.id and a.loai in ('CK')";
                        sql += " and a.khox in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                        sql += " and a.khon not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                        if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                        sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) order by a.ngay";
                        foreach (DataRow r in get_data(sql).Tables[0].Rows)
                        {
                            r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                            if (r1 != null)
                            {
                                r3 = getrowbyid(dtkp, "id=" + int.Parse(r["khox"].ToString()));
                                r2 = ds.Tables[0].NewRow();
                                r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                                r2["ngay"] = r["ngay"].ToString();
                                r2["sonhap"] = r["so"].ToString();
                                r2["soxuat"] = "";
                                r2["mabd"] = r["mabd"].ToString();
                                r2["ma"] = r1["ma"].ToString();
                                r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                                r2["tenhc"] = r1["tenhc"].ToString();
                                r2["dang"] = r1["dang"].ToString();
                                if (bCongdon)
                                {
                                    r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                    r2["tennuoc"] = r1["tennhom"].ToString();
                                }
                                else
                                {
                                    r2["tenhang"] = r1["tenhang"].ToString();
                                    r2["tennuoc"] = r1["tennuoc"].ToString();
                                }
                                r3 = getrowbyid(dtkho, "id=" + int.Parse(r["khox"].ToString()));
                                if (r3 != null) s_diengiai = "Nhập từ :" + r3["ten"].ToString();
                                r2["diengiai"] = s_diengiai;
                                r2["tondau"] = 0;
                                r2["sttondau"] = 0;
                                r2["slnhap"] = r["soluong"].ToString();
                                r2["stnhap"] = r["sotien"].ToString();
                                r2["slxuat"] = 0;
                                r2["stxuat"] = 0;
                                r2["toncuoi"] = r["soluong"].ToString();
                                r2["sttoncuoi"] = r["sotien"].ToString();
                                r2["handung"] = r["handung"].ToString();
                                if (bDongia) r2["dongia"] = r["giamua"].ToString();
                                else r2["dongia"] = 0;
                                ds.Tables[0].Rows.Add(r2);
                            }
                        }
                    }
                    sql = "select ";
                    if (bDongia) sql += "c.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien";
                    sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + xxx + ".d_theodoi c where a.id=b.id and b.sttt=c.id and a.loai=3";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                    sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += "group by ";
                    if (bDongia) sql += "c.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),a.makp,b.mabd";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = r["ngay"].ToString();
                            r2["soxuat"] = "";
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            r2["diengiai"] = r3["ten"].ToString().Trim() + ":" + "Hoàn trả ";
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = r["soluong"].ToString();
                            r2["stnhap"] = r["sotien"].ToString();
                            r2["slxuat"] = 0;
                            r2["stxuat"] = 0;
                            r2["dongia"] = r["giamua"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    #region chuyen nguon
                    sql = "select ";
                    if (bDongia) sql += "c.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,a.sophieu as makp,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien";
                    sql += " from " + xxx + ".d_chuyenll a," + xxx + ".d_chuyenct b," + xxx + ".d_theodoi c where a.id=b.id and b.stttchuyen=c.id ";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and b.nguonchuyen=" + d_manguon;
                    sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += "group by ";
                    if (bDongia) sql += "c.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),a.sophieu,b.mabd";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {

                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = r["ngay"].ToString();
                            r2["soxuat"] = "";
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            r2["diengiai"] = "Chuyển nguồn - " + r["makp"].ToString();
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = r["soluong"].ToString();
                            r2["stnhap"] = r["sotien"].ToString();
                            r2["slxuat"] = 0;
                            r2["stxuat"] = 0;
                            r2["dongia"] = r["giamua"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    #endregion
                }
            }
            ds.AcceptChanges();
            return ds;
        }

        public DataSet get_nhap(DataSet ds, DataTable dt, DataTable dtkp, DataTable dtkho, string d_tu, string d_den, string d_yy, int d_makho, int d_manguon, int d_nhom, bool bTrainrieng)
        {
            string s_khokhongin = "", usr = user, xxx;
            if (d_makho == -1)
            {
                foreach (DataRow r in get_data("select * from " + usr + ".d_dmkho where hide=0 and nhom=" + d_nhom + " and ketoan=1").Tables[0].Rows)
                    s_khokhongin += r["id"].ToString().Trim() + ",";
            }
            bool bSophieu = bThekho_sophieu(d_nhom), bDongia = bDongia_thekho(d_nhom);
            bool bCongdon = bThekho_congdon(d_nhom);
            DataRow r1, r2, r3;
            string s_diengiai = "", d_mmyy;
            int i_tu = int.Parse(d_tu), i_den = int.Parse(d_den);
            for (int i = i_tu; i <= i_den; i++)
            {
                d_mmyy = i.ToString().PadLeft(2, '0') + d_yy;
                if (bMmyy(d_mmyy))
                {
                    xxx = usr + d_mmyy;
                    sql = "select ";
                    if (bSophieu) sql += "to_char(a.ngaysp,'dd/mm/yyyy') as ngay,a.sophieu as so,";
                    else sql += "to_char(a.ngayhd,'dd/mm/yyyy') as ngay,a.sohd as so,";
                    sql += "b.mabd,b.handung,b.soluong,b.sotien+b.sotien*b.vat/100+b.cuocvc+b.chaythu as sotien,a.loai,c.ten as diengiai,b.giamua,a.nguoigiao,b.losx,to_char(a.ngaysp,'dd/mm/yyyy') as ngaysp ";
                    sql += " from " + xxx + ".d_nhapll a inner join " + xxx + ".d_nhapct b on a.id=b.id ";
                    sql += " left join " + user + ".d_dmnx c on a.madv=c.id";
                    sql += " where b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    if (d_makho != -1) sql += " and a.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and a.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and a.manguon=" + d_manguon;
                    sql += " order by a.ngayhd";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = r["so"].ToString();
                            r2["soxuat"] = "";
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            switch (r["loai"].ToString())
                            {
                                case "M": r2["diengiai"] = "Nhập mới: ";
                                    break;
                                case "T": r2["diengiai"] = "Tái nhập: ";
                                    break;
                                default: r2["diengiai"] = "Hoàn trả : ";
                                    break;
                            }
                            r2["diengiai"] += (r["loai"].ToString() == "N") ? r["nguoigiao"].ToString() : r["diengiai"].ToString();
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            if (bTrainrieng && r["loai"].ToString() != "M" && r["loai"].ToString() != "T")
                            {
                                r2["sltra"] = r["soluong"].ToString();
                                r2["sttra"] = r["sotien"].ToString();
                            }
                            else
                            {
                                r2["slnhap"] = r["soluong"].ToString();
                                r2["stnhap"] = r["sotien"].ToString();
                            }
                            r2["slxuat"] = 0;
                            r2["stxuat"] = 0;
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["handung"] = r["handung"].ToString();
                            if (bDongia) r2["dongia"] = r["giamua"].ToString();
                            else r2["dongia"] = 0;
                            r2["losx"] = r["losx"].ToString();
                            r2["ngaysp"] = r["ngaysp"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    if (d_makho != -1)
                    {
                        sql = "select a.sophieu as so,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.lydo,a.loai,a.khox,a.khon,b.mabd,b.soluong,b.soluong*c.giamua as sotien,c.giamua,c.handung,c.losx ";
                        sql += " from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b," + xxx + ".d_theodoi c ";
                        sql += " where a.id=b.id and b.sttt=c.id and a.loai in ('CK','TH','HT', 'NC') and a.khon=" + d_makho;
                        if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                        sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) order by a.ngay";
                        foreach (DataRow r in get_data(sql).Tables[0].Rows)
                        {
                            r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                            if (r1 != null)
                            {
                                r3 = getrowbyid(dtkp, "id=" + int.Parse(r["khox"].ToString()));
                                r2 = ds.Tables[0].NewRow();
                                r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                                r2["ngay"] = r["ngay"].ToString();
                                r2["sonhap"] = r["so"].ToString();
                                r2["soxuat"] = "";
                                r2["mabd"] = r["mabd"].ToString();
                                r2["ma"] = r1["ma"].ToString();
                                r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                                r2["tenhc"] = r1["tenhc"].ToString();
                                r2["dang"] = r1["dang"].ToString();
                                if (bCongdon)
                                {
                                    r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                    r2["tennuoc"] = r1["tennhom"].ToString();
                                }
                                else
                                {
                                    r2["tenhang"] = r1["tenhang"].ToString();
                                    r2["tennuoc"] = r1["tennuoc"].ToString();
                                }
                                switch (r["loai"].ToString())
                                {
                                    case "TH":
                                        s_diengiai = "Thu hồi :" + r3["ten"].ToString();
                                        break;
                                    case "HT":
                                        s_diengiai = r3["ten"].ToString() + ": Hoàn trả ";
                                        break;
                                    case "NC":
                                        s_diengiai = "Nhập từ CN" + r["khox"].ToString();
                                        break;
                                    default:
                                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["khox"].ToString()));
                                        if (r3 != null) s_diengiai = "Nhập từ :" + r3["ten"].ToString();
                                        break;
                                }
                                r2["diengiai"] = s_diengiai;
                                r2["tondau"] = 0;
                                r2["sttondau"] = 0;
                                r2["slnhap"] = 0;
                                r2["stnhap"] = 0;
                                if (bTrainrieng && r["loai"].ToString() != "CK")
                                {
                                    r2["sltra"] = r["soluong"].ToString();
                                    r2["sttra"] = r["sotien"].ToString();
                                }
                                else
                                {
                                    r2["slnhap"] = r["soluong"].ToString();
                                    r2["stnhap"] = r["sotien"].ToString();
                                }
                                r2["slxuat"] = 0;
                                r2["stxuat"] = 0;
                                r2["toncuoi"] = r["soluong"].ToString();
                                r2["sttoncuoi"] = r["sotien"].ToString();
                                r2["handung"] = r["handung"].ToString();
                                if (bDongia) r2["dongia"] = r["giamua"].ToString();
                                else r2["dongia"] = 0;
                                r2["losx"] = r["losx"].ToString();
                                ds.Tables[0].Rows.Add(r2);
                            }
                        }
                    }
                    else if (s_khokhongin != "")
                    {
                        sql = "select a.sophieu as so,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.lydo,a.loai,a.khox,a.khon,b.mabd,b.soluong,b.soluong*c.giamua as sotien,c.giamua,c.handung,c.losx ";
                        sql += " from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b," + xxx + ".d_theodoi c ";
                        sql += " where a.id=b.id and b.sttt=c.id and a.loai in ('CK')";
                        sql += " and a.khox in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                        sql += " and a.khon not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                        if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                        sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) order by a.ngay";
                        foreach (DataRow r in get_data(sql).Tables[0].Rows)
                        {
                            r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                            if (r1 != null)
                            {
                                r3 = getrowbyid(dtkp, "id=" + int.Parse(r["khox"].ToString()));
                                r2 = ds.Tables[0].NewRow();
                                r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                                r2["ngay"] = r["ngay"].ToString();
                                r2["sonhap"] = r["so"].ToString();
                                r2["soxuat"] = "";
                                r2["mabd"] = r["mabd"].ToString();
                                r2["ma"] = r1["ma"].ToString();
                                r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                                r2["tenhc"] = r1["tenhc"].ToString();
                                r2["dang"] = r1["dang"].ToString();
                                if (bCongdon)
                                {
                                    r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                    r2["tennuoc"] = r1["tennhom"].ToString();
                                }
                                else
                                {
                                    r2["tenhang"] = r1["tenhang"].ToString();
                                    r2["tennuoc"] = r1["tennuoc"].ToString();
                                }
                                r3 = getrowbyid(dtkho, "id=" + int.Parse(r["khox"].ToString()));
                                if (r3 != null) s_diengiai = "Nhập từ :" + r3["ten"].ToString();
                                r2["diengiai"] = s_diengiai;
                                r2["tondau"] = 0;
                                r2["sttondau"] = 0;
                                r2["slnhap"] = r["soluong"].ToString();
                                r2["stnhap"] = r["sotien"].ToString();
                                r2["slxuat"] = 0;
                                r2["stxuat"] = 0;
                                r2["toncuoi"] = r["soluong"].ToString();
                                r2["sttoncuoi"] = r["sotien"].ToString();
                                r2["handung"] = r["handung"].ToString();
                                if (bDongia) r2["dongia"] = r["giamua"].ToString();
                                else r2["dongia"] = 0;
                                r2["losx"] = r["losx"].ToString();
                                ds.Tables[0].Rows.Add(r2);
                            }
                        }
                    }
                    sql = "select ";
                    if (bDongia) sql += "c.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien,c.losx,c.handung ";
                    sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + xxx + ".d_theodoi c where a.id=b.id and b.sttt=c.id and a.loai=3";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                    sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += "group by ";
                    if (bDongia) sql += "c.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),a.makp,b.mabd,c.losx,c.handung";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = r["ngay"].ToString();
                            r2["soxuat"] = "";
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            r2["diengiai"] = r3["ten"].ToString().Trim() + ":" + "Hoàn trả ";
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            if (bTrainrieng)
                            {
                                r2["sltra"] = r["soluong"].ToString();
                                r2["sttra"] = r["sotien"].ToString();
                            }
                            else
                            {
                                r2["slnhap"] = r["soluong"].ToString();
                                r2["stnhap"] = r["sotien"].ToString();
                            }
                            r2["slxuat"] = 0;
                            r2["stxuat"] = 0;
                            r2["dongia"] = r["giamua"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["losx"] = r["losx"].ToString();
                            r2["handung"] = r["handung"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    #region chuyen nguon
                    sql = "select ";
                    if (bDongia) sql += "c.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,a.sophieu as makp,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien,c.losx,c.handung ";
                    sql += " from " + xxx + ".d_chuyenll a," + xxx + ".d_chuyenct b," + xxx + ".d_theodoi c where a.id=b.id and b.stttchuyen=c.id ";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and b.nguonchuyen=" + d_manguon;
                    sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += "group by ";
                    if (bDongia) sql += "c.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),a.sophieu,b.mabd,c.losx,c.handung ";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {

                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = r["ngay"].ToString();
                            r2["soxuat"] = "";
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            r2["diengiai"] = "Chuyển nguồn - " + r["makp"].ToString();
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = r["soluong"].ToString();
                            r2["stnhap"] = r["sotien"].ToString();
                            r2["slxuat"] = 0;
                            r2["stxuat"] = 0;
                            r2["sltra"] = 0;
                            r2["sttra"] = 0;
                            r2["dongia"] = r["giamua"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["losx"] = r["losx"].ToString();
                            r2["handung"] = r["handung"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    #endregion
                }
            }
            ds.AcceptChanges();
            return ds;
        }
        public DataSet get_xuat(DataSet ds, DataTable dt, DataTable dtkp, DataTable dtloaint, DataTable dtkhac, DataTable dtkho, string d_tu, string d_den, string d_yy, int d_makho, int d_manguon, int d_nhom)
        {
            string s_khokhongin = "", usr = user, xxx;
            if (d_makho == -1)
            {
                foreach (DataRow r in get_data("select * from " + usr + ".d_dmkho where hide=0 and nhom=" + d_nhom + " and ketoan=1").Tables[0].Rows)
                    s_khokhongin += r["id"].ToString().Trim() + ",";
            }
            DataTable dtvay = get_data("select * from " + usr + ".d_dmvay").Tables[0];
            DataTable dtnx = get_data("select * from " + usr + ".d_dmnx where nhom=" + d_nhom).Tables[0];
            DataRow r1, r2, r3;
            bool bDongia = bDongia_thekho(d_nhom), bCongdon = bThekho_congdon(d_nhom);
            bool incstt = bIntheocstt(d_nhom);
            string s_diengiai, d_mmyy;
            int i_tu = int.Parse(d_tu), i_den = int.Parse(d_den);
            for (int i = i_tu; i <= i_den; i++)
            {
                d_mmyy = i.ToString().PadLeft(2, '0') + d_yy;
                if (bMmyy(d_mmyy))
                {
                    xxx = usr + d_mmyy;
                    sql = "select a.idduyet,a.sophieu as so,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.lydo,a.loai,a.khox,a.khon,b.mabd,c.handung,c.giamua,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien,c.losx ";
                    sql += " from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b," + xxx + ".d_theodoi c ";
                    sql += " where a.id=b.id and b.sttt=c.id";
                    if (d_makho != -1) sql += " and a.loai in ('CK','BS','XK','VA', 'XC') and a.khox=" + d_makho;
                    else
                    {
                        sql += " and a.loai in ('XK')";
                        if (s_khokhongin != "") sql += " and a.khox not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    }
                    if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                    sql += " and b.mabd in (select mabd from " + usr + ".d_mabd)";
                    sql += " group by a.idduyet,a.sophieu,to_char(a.ngay,'dd/mm/yyyy'),a.lydo,a.loai,a.khox,a.khon,b.mabd,c.handung,c.giamua,c.losx";
                    if (d_makho == -1 && s_khokhongin != "")
                    {
                        sql += " union all ";
                        sql += "select a.idduyet,a.sophieu as so,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.lydo,a.loai,a.khox,a.khon,b.mabd,c.handung,c.giamua,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien,c.losx ";
                        sql += " from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b," + xxx + ".d_theodoi c ";
                        sql += " where a.id=b.id and b.sttt=c.id";
                        sql += " and a.loai='CK'";
                        sql += " and a.khox not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                        sql += " and a.khon in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                        if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                        sql += " and b.mabd in (select mabd from " + usr + ".d_mabd)";
                        sql += " group by a.idduyet,a.sophieu,to_char(a.ngay,'dd/mm/yyyy'),a.lydo,a.loai,a.khox,a.khon,b.mabd,c.handung,c.giamua,c.losx";
                    }
                    foreach (DataRow r in get_data(sql).Tables[0].Select("true", "ngay"))
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = "";
                            r2["soxuat"] = r["so"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            switch (r["loai"].ToString())
                            {
                                case "CK":
                                    s_diengiai = "Xuất đến :";
                                    r3 = getrowbyid(dtkho, "id=" + int.Parse(r["khon"].ToString()));
                                    break;
                                case "XC":
                                    s_diengiai = "Xuất chuyển CN: " + r["khon"].ToString();
                                    r3 = null;
                                    break;
                                case "BS":
                                    s_diengiai = "Bổ sung tủ trực :";
                                    r3 = getrowbyid(dtkp, "id=" + int.Parse(r["khon"].ToString()));
                                    break;
                                case "VA":
                                    s_diengiai = "Vay :";
                                    r3 = getrowbyid(dtvay, "id=" + int.Parse(r["khon"].ToString()));
                                    break;
                                default:
                                    if (int.Parse(r["khon"].ToString()) == 0)
                                    {
                                        s_diengiai = "Hoàn trả :";
                                        r3 = getrowbyid(dtnx, "id=" + int.Parse(r["idduyet"].ToString()));
                                    }
                                    else
                                    {
                                        s_diengiai = r["lydo"].ToString().Trim();
                                        s_diengiai += (s_diengiai != "") ? ":" : "";
                                        r3 = getrowbyid(dtkhac, "id=" + int.Parse(r["khon"].ToString()));
                                    }
                                    break;
                            }
                            r2["diengiai"] = s_diengiai;
                            r2["diengiai"] += (r3 != null) ? r3["ten"].ToString() : "";
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            r2["slxuat"] = r["soluong"].ToString();
                            r2["stxuat"] = r["sotien"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["handung"] = r["handung"].ToString();
                            if (bDongia) r2["dongia"] = r["giamua"].ToString();
                            else r2["dongia"] = 0;
                            r2["losx"] = r["losx"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    sql = "select ";
                    if (bDongia) sql += "c.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,b.mabd,a.loai,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien,c.losx ";
                    sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + xxx + ".d_theodoi c where a.id=b.id and b.sttt=c.id and a.loai in (1,4) ";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                    sql += " and a.maql<>0 and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += "group by ";
                    if (bDongia) sql += "c.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),a.makp,b.mabd,a.loai,c.losx";
                    sql += " union all ";
                    sql += "select ";
                    if (bDongia) sql += "c.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,";
                    if (incstt) sql += "a.makp,";
                    else sql += "a.makhoa as makp,";
                    sql += "b.mabd,a.loai,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien,c.losx";
                    sql += " from " + xxx + ".d_xuatsdll a,";
                    if (d_makho != -1) sql += xxx + ".d_thucbucstt b";
                    else sql += xxx + ".d_thucxuat b";
                    sql += "," + xxx + ".d_theodoi c";
                    sql += " where a.id=b.id and b.sttt=c.id and a.loai=2 ";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                    sql += " and a.maql<>0 and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += "group by ";
                    if (bDongia) sql += "c.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),";
                    if (incstt) sql += "a.makp,";
                    else sql += "a.makhoa,";
                    sql += "b.mabd,a.loai,c.losx";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            s_diengiai = (r["loai"].ToString() == "2" && d_makho == -1) ? "Tủ trực" : (r["loai"].ToString() == "1") ? "Lĩnh" : (r["loai"].ToString() == "2") ? "Bù trực" : "Hao phí";
                            r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = "";
                            r2["soxuat"] = r["ngay"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            r2["diengiai"] = "Xuất :" + r3["ten"].ToString() + "[" + s_diengiai + "]";
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            r2["slxuat"] = r["soluong"].ToString();
                            r2["stxuat"] = r["sotien"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["dongia"] = r["giamua"].ToString();
                            r2["losx"] = r["losx"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    sql = "select ";
                    if (bDongia) sql += "c.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,b.mabd,a.mabn,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien,c.losx";
                    sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + xxx + ".d_theodoi c where a.id=b.id and b.sttt=c.id and a.loai in (1,4) ";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                    sql += " and a.maql=0 and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += "group by ";
                    if (bDongia) sql += "c.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),a.makp,b.mabd,a.mabn,c.losx";
                    sql += " union all ";
                    sql += "select ";
                    if (bDongia) sql += "c.giamua,";
                    else sql += "0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,";
                    if (incstt) sql += "a.makp,";
                    else sql += "a.makhoa as makp,";
                    sql += "b.mabd,a.mabn,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien,c.losx";
                    sql += " from " + xxx + ".d_xuatsdll a,";
                    if (d_makho != -1) sql += xxx + ".d_thucbucstt b ";
                    else sql += xxx + ".d_thucxuat b ";
                    sql += "," + xxx + ".d_theodoi c ";
                    sql += "where a.id=b.id and b.sttt=c.id and a.loai=2 ";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                    sql += " and a.maql=0 and b.mabd in (select mabd from " + usr + ".d_mabd)";
                    sql += "group by ";
                    if (bDongia) sql += "c.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),";
                    if (incstt) sql += "a.makp,";
                    else sql += "a.makhoa,";
                    sql += "b.mabd,a.mabn,c.losx";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = "";
                            r2["soxuat"] = r["mabn"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            r2["diengiai"] = "Xuất :" + r3["ten"].ToString();
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            r2["slxuat"] = r["soluong"].ToString();
                            r2["stxuat"] = r["sotien"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["dongia"] = r["giamua"].ToString();
                            r2["losx"] = r["losx"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    sql = "select ";
                    if (bDongia) sql += "c.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "a.mabn,a.hoten,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.loai,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien,c.losx";
                    sql += ",c.handung";
                    //if (bCongdon) sql += ",c.handung";
                    //else sql += ",'' as handung";
                    sql += " from " + xxx + ".d_ngtrull a," + xxx + ".d_ngtruct b," + xxx + ".d_theodoi c where a.id=b.id and b.sttt=c.id";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                    sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += " group by ";
                    if (bDongia) sql += "c.giamua,";
                    //if (bCongdon) sql += "c.handung,";
                    sql += " c.handung, ";
                    sql += "a.mabn,a.hoten,to_char(a.ngay,'dd/mm/yyyy'),a.loai,b.mabd,c.losx";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r3 = getrowbyid(dtloaint, "id=" + int.Parse(r["loai"].ToString()));
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = "";
                            r2["soxuat"] = r["mabn"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            if (bCongdon) r2["diengiai"] = "Xuất ngoại trú :" + r3["ten"].ToString().Trim();
                            else r2["diengiai"] = "Xuất ngoại trú :" + (r3 == null ? "" : r3["ten"].ToString().Trim()) + "[" + r["hoten"].ToString().Trim() + "]";//Thuy 12/12/11
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            r2["slxuat"] = r["soluong"].ToString();
                            r2["stxuat"] = r["sotien"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["dongia"] = r["giamua"].ToString();
                            r2["handung"] = r["handung"].ToString();
                            r2["losx"] = r["losx"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    sql = "select ";
                    if (bDongia) sql += "d.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "a.id,a.sothe,c.hoten,to_char(a.ngay,'dd/mm/yyyy') as ngay,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien,d.losx";
                    sql += ",d.handung";
                    //if (bCongdon) sql += ",d.handung";
                    //else sql += ",'' as handung";
                    sql += " from " + xxx + ".bhytkb a," + xxx + ".bhytthuoc b," + xxx + ".bhytds c," + xxx + ".d_theodoi d where a.id=b.id and a.mabn=c.mabn and b.sttt=d.id";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and d.manguon=" + d_manguon;
                    sql += " and b.mabd in (select mabd from " + usr + ".d_mabd)";
                    sql += "group by ";
                    if (bDongia) sql += "d.giamua,";
                    sql += "d.handung,"; // if (bCongdon) sql += "d.handung,";
                    sql += "a.id,a.sothe,c.hoten,to_char(a.ngay,'dd/mm/yyyy'),b.mabd,d.losx";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = "";
                            r2["soxuat"] = r["sothe"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            if (bCongdon) r2["diengiai"] = "BHYT Ngoại trú";
                            else r2["diengiai"] = "BHYT Ngoại trú [" + r["hoten"].ToString().Trim() + "]";
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            r2["slxuat"] = r["soluong"].ToString();
                            r2["stxuat"] = r["sotien"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["dongia"] = r["giamua"].ToString();
                            r2["handung"] = r["handung"].ToString();
                            r2["losx"] = r["losx"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    #region chuyen nguon
                    sql = "select ";
                    if (bDongia) sql += "c.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "a.sophieu as mabn,'Xuất chuyển nguồn' as hoten,to_char(a.ngay,'dd/mm/yyyy') as ngay,0 as loai,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*c.giamua) as sotien,c.losx";
                    sql += ",c.handung";
                    //if (bCongdon) sql += ",c.handung";
                    //else sql += ",'' as handung";
                    sql += " from " + xxx + ".d_chuyenll a," + xxx + ".d_chuyenct b," + xxx + ".d_theodoi c where a.id=b.id and b.sttt=c.id";
                    if (d_makho != -1) sql += " and b.makho=" + d_makho;
                    else if (s_khokhongin != "") sql += " and b.makho not in (" + s_khokhongin.Substring(0, s_khokhongin.Length - 1) + ")";
                    if (d_manguon != -1) sql += " and c.manguon=" + d_manguon;
                    sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += " group by ";
                    if (bDongia) sql += "c.giamua,";
                  //  if (bCongdon) sql += "c.handung,";
                    sql += "c.handung,";
                    sql += "a.sophieu, to_char(a.ngay,'dd/mm/yyyy'), b.mabd,c.losx";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = "";
                            r2["soxuat"] = r["mabn"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            r2["diengiai"] = "Xuất chuyển nguồn - " + r["mabn"].ToString();

                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            r2["slxuat"] = r["soluong"].ToString();
                            r2["stxuat"] = r["sotien"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["dongia"] = r["giamua"].ToString();
                            r2["handung"] = r["handung"].ToString();
                            r2["losx"] = r["losx"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    #endregion
                }
            }
            ds.AcceptChanges();
            return ds;
        }

        public DataSet get_xuat_tungay(DataSet ds, DataTable dt, DataTable dtkp, DataTable dtloaint, DataTable dtkhac, DataTable dtkho, string d_tu, string d_den, int d_makho, int d_manguon)
        {
            DataTable dtvay = get_data("select * from " + user + ".d_dmvay").Tables[0];
            DataRow r1, r2, r3;
            string s_diengiai, xxx, stime = "'" + f_ngay + "'", usr = user;

            DateTime dt1 = StringToDate(d_tu).AddDays(-iNgaykiemke);
            DateTime dt2 = StringToDate(d_den).AddDays(iNgaykiemke);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            string d_mmyy = "";
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    d_mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(d_mmyy))
                    {
                        xxx = usr + d_mmyy;
                        sql = "select a.sophieu as so,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.lydo,a.loai,a.khox,a.khon,b.mabd,b.soluong,b.soluong*t.giamua as sotien";
                        sql += " from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b," + xxx + ".d_theodoi t ";
                        sql += " where a.id=b.id and b.sttt=t.id and a.loai in ('CK','BS','XK','VA') and a.khox=" + d_makho;
                        sql += " and a.ngay between to_date('" + d_tu + "'," + stime + ") and to_date('" + d_den + "'," + stime + ")";
                        if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                        sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) order by a.ngay";
                        foreach (DataRow r in get_data(sql).Tables[0].Rows)
                        {
                            r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                            if (r1 != null)
                            {
                                r2 = ds.Tables[0].NewRow();
                                r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                                r2["ngay"] = r["ngay"].ToString();
                                r2["sonhap"] = "";
                                r2["soxuat"] = r["so"].ToString();
                                r2["mabd"] = r["mabd"].ToString();
                                r2["ma"] = r1["ma"].ToString();
                                r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                                r2["tenhc"] = r1["tenhc"].ToString();
                                r2["dang"] = r1["dang"].ToString();
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                                switch (r["loai"].ToString())
                                {
                                    case "CK":
                                        s_diengiai = "Xuất đến :";
                                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["khon"].ToString()));
                                        break;
                                    case "BS":
                                        s_diengiai = "Bổ sung tủ trực :";
                                        r3 = getrowbyid(dtkp, "id=" + int.Parse(r["khon"].ToString()));
                                        break;
                                    case "VA":
                                        s_diengiai = "Vay :";
                                        r3 = getrowbyid(dtvay, "id=" + int.Parse(r["khon"].ToString()));
                                        break;
                                    default:
                                        s_diengiai = r["lydo"].ToString().Trim();
                                        s_diengiai += (s_diengiai != "") ? ":" : "";
                                        r3 = getrowbyid(dtkhac, "id=" + int.Parse(r["khon"].ToString()));
                                        break;
                                }
                                r2["diengiai"] = s_diengiai;
                                r2["diengiai"] += (r3 != null) ? r3["ten"].ToString() : "";
                                r2["tondau"] = 0;
                                r2["sttondau"] = 0;
                                r2["slnhap"] = 0;
                                r2["stnhap"] = 0;
                                r2["slxuat"] = r["soluong"].ToString();
                                r2["stxuat"] = r["sotien"].ToString();
                                r2["toncuoi"] = r["soluong"].ToString();
                                r2["sttoncuoi"] = r["sotien"].ToString();
                                ds.Tables[0].Rows.Add(r2);
                            }
                        }
                        sql = "select to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*t.giamua) as sotien";
                        sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.loai in (1,4) and b.makho=" + d_makho;
                        sql += " and a.ngay between to_date('" + d_tu + "'," + stime + ") and to_date('" + d_den + "'," + stime + ")";
                        if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                        sql += " and a.maql<>0 and b.mabd in (select mabd from " + usr + ".d_mabd) group by a.ngay,a.makp,b.mabd";
                        sql += " union all ";
                        sql += "select to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*t.giamua) as sotien";
                        sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucbucstt b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.loai=2 and b.makho=" + d_makho;
                        sql += " and a.ngay between to_date('" + d_tu + "'," + stime + ") and to_date('" + d_den + "'," + stime + ")";
                        if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                        sql += " and a.maql<>0 and b.mabd in (select mabd from " + usr + ".d_mabd) group by a.ngay,a.makp,b.mabd";
                        foreach (DataRow r in get_data(sql).Tables[0].Rows)
                        {
                            r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                            if (r1 != null)
                            {
                                r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                                r2 = ds.Tables[0].NewRow();
                                r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                                r2["ngay"] = r["ngay"].ToString();
                                r2["sonhap"] = "";
                                r2["soxuat"] = r["ngay"].ToString();
                                r2["mabd"] = r["mabd"].ToString();
                                r2["ma"] = r1["ma"].ToString();
                                r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                                r2["tenhc"] = r1["tenhc"].ToString();
                                r2["dang"] = r1["dang"].ToString();
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                                r2["diengiai"] = "Xuất :" + r3["ten"].ToString();
                                r2["tondau"] = 0;
                                r2["sttondau"] = 0;
                                r2["slnhap"] = 0;
                                r2["stnhap"] = 0;
                                r2["slxuat"] = r["soluong"].ToString();
                                r2["stxuat"] = r["sotien"].ToString();
                                r2["toncuoi"] = r["soluong"].ToString();
                                r2["sttoncuoi"] = r["sotien"].ToString();
                                ds.Tables[0].Rows.Add(r2);
                            }
                        }
                        sql = "select to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,b.mabd,a.mabn,sum(b.soluong) as soluong,sum(b.soluong*t.giamua) as sotien";
                        sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.loai in (1,4) and b.makho=" + d_makho;
                        sql += " and a.ngay between to_date('" + d_tu + "'," + stime + ") and to_date('" + d_den + "'," + stime + ")";
                        if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                        sql += " and a.maql=0 and b.mabd in (select mabd from " + usr + ".d_mabd) group by a.ngay,a.makp,b.mabd,a.mabn";
                        sql += " union all ";
                        sql += "select to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,b.mabd,a.mabn,sum(b.soluong) as soluong,sum(b.soluong*t.giamua) as sotien";
                        sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucbucstt b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.loai=2 and b.makho=" + d_makho;
                        sql += " and a.ngay between to_date('" + d_tu + "'," + stime + ") and to_date('" + d_den + "'," + stime + ")";
                        if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                        sql += " and a.maql=0 and b.mabd in (select mabd from " + usr + ".d_mabd) group by a.ngay,a.makp,b.mabd,a.mabn";
                        foreach (DataRow r in get_data(sql).Tables[0].Rows)
                        {
                            r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                            if (r1 != null)
                            {
                                r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                                r2 = ds.Tables[0].NewRow();
                                r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                                r2["ngay"] = r["ngay"].ToString();
                                r2["sonhap"] = "";
                                r2["soxuat"] = r["mabn"].ToString();
                                r2["mabd"] = r["mabd"].ToString();
                                r2["ma"] = r1["ma"].ToString();
                                r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                                r2["tenhc"] = r1["tenhc"].ToString();
                                r2["dang"] = r1["dang"].ToString();
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                                r2["diengiai"] = "Xuất :" + r3["ten"].ToString();
                                r2["tondau"] = 0;
                                r2["sttondau"] = 0;
                                r2["slnhap"] = 0;
                                r2["stnhap"] = 0;
                                r2["slxuat"] = r["soluong"].ToString();
                                r2["stxuat"] = r["sotien"].ToString();
                                r2["toncuoi"] = r["soluong"].ToString();
                                r2["sttoncuoi"] = r["sotien"].ToString();
                                ds.Tables[0].Rows.Add(r2);
                            }
                        }
                        sql = "select a.mabn,a.hoten,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.loai,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*t.giamua) as sotien";
                        sql += " from " + xxx + ".d_ngtrull a," + xxx + ".d_ngtruct b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and b.makho=" + d_makho;
                        sql += " and a.ngay between to_date('" + d_tu + "'," + stime + ") and to_date('" + d_den + "'," + stime + ")";
                        if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                        sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) group by a.mabn,a.hoten,a.ngay,a.loai,b.mabd";
                        foreach (DataRow r in get_data(sql).Tables[0].Rows)
                        {
                            r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                            if (r1 != null)
                            {
                                r3 = getrowbyid(dtloaint, "id=" + int.Parse(r["loai"].ToString()));
                                r2 = ds.Tables[0].NewRow();
                                r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                                r2["ngay"] = r["ngay"].ToString();
                                r2["sonhap"] = "";
                                r2["soxuat"] = r["mabn"].ToString();
                                r2["mabd"] = r["mabd"].ToString();
                                r2["ma"] = r1["ma"].ToString();
                                r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                                r2["tenhc"] = r1["tenhc"].ToString();
                                r2["dang"] = r1["dang"].ToString();
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                                r2["diengiai"] = "Xuất ngoại trú :" + r3["ten"].ToString().Trim() + "[" + r["hoten"].ToString().Trim() + "]";
                                r2["tondau"] = 0;
                                r2["sttondau"] = 0;
                                r2["slnhap"] = 0;
                                r2["stnhap"] = 0;
                                r2["slxuat"] = r["soluong"].ToString();
                                r2["stxuat"] = r["sotien"].ToString();
                                r2["toncuoi"] = r["soluong"].ToString();
                                r2["sttoncuoi"] = r["sotien"].ToString();
                                ds.Tables[0].Rows.Add(r2);
                            }
                        }
                        sql = "select a.id,a.sothe,c.hoten,to_char(a.ngay,'dd/mm/yyyy') as ngay,b.mabd,sum(b.soluong) as soluong,sum(b.soluong*t.giamua) as sotien";
                        sql += " from " + xxx + ".bhytkb a," + xxx + ".bhytthuoc b," + xxx + ".bhytds c," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.mabn=c.mabn and b.makho=" + d_makho;
                        sql += " and a.ngay between to_date('" + d_tu + "'," + stime + ") and to_date('" + d_den + "'," + stime + ")";
                        if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                        sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) group by a.id,a.sothe,c.hoten,a.ngay,b.mabd";
                        foreach (DataRow r in get_data(sql).Tables[0].Rows)
                        {
                            r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                            if (r1 != null)
                            {
                                r2 = ds.Tables[0].NewRow();
                                r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                                r2["ngay"] = r["ngay"].ToString();
                                r2["sonhap"] = "";
                                r2["soxuat"] = r["sothe"].ToString();
                                r2["mabd"] = r["mabd"].ToString();
                                r2["ma"] = r1["ma"].ToString();
                                r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                                r2["tenhc"] = r1["tenhc"].ToString();
                                r2["dang"] = r1["dang"].ToString();
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                                r2["diengiai"] = "BHYT Ngoại trú [" + r["hoten"].ToString().Trim() + "]";
                                r2["tondau"] = 0;
                                r2["sttondau"] = 0;
                                r2["slnhap"] = 0;
                                r2["stnhap"] = 0;
                                r2["slxuat"] = r["soluong"].ToString();
                                r2["stxuat"] = r["sotien"].ToString();
                                r2["toncuoi"] = r["soluong"].ToString();
                                r2["sttoncuoi"] = r["sotien"].ToString();
                                ds.Tables[0].Rows.Add(r2);
                            }
                        }
                    }
                }
            }
            ds.AcceptChanges();
            return ds;
        }

        public DataSet ins_items(DataSet dsxml, DataRow[] dr, int i, decimal soluong, decimal sotien)
        {
            DataRow r2;
            r2 = dsxml.Tables[0].NewRow();
            r2["yymmdd"] = dr[i]["yymmdd"].ToString();
            r2["ngay"] = dr[i]["ngay"].ToString();
            r2["sonhap"] = dr[i]["sonhap"].ToString();
            r2["soxuat"] = dr[i]["soxuat"].ToString();
            r2["mabd"] = dr[i]["mabd"].ToString();
            r2["ma"] = dr[i]["ma"].ToString();
            r2["ten"] = dr[i]["ten"].ToString().Trim();
            r2["tenhc"] = dr[i]["tenhc"].ToString();
            r2["dang"] = dr[i]["dang"].ToString();
            r2["tenhang"] = dr[i]["tenhang"].ToString();
            r2["tennuoc"] = dr[i]["tennuoc"].ToString();
            r2["diengiai"] = dr[i]["diengiai"].ToString();
            r2["tondau"] = dr[i]["tondau"].ToString();
            r2["sttondau"] = dr[i]["sttondau"].ToString();
            r2["slnhap"] = dr[i]["slnhap"].ToString();
            r2["stnhap"] = dr[i]["stnhap"].ToString();
            r2["slxuat"] = dr[i]["slxuat"].ToString();
            r2["stxuat"] = dr[i]["stxuat"].ToString();
            if (dr[i]["dongia"].ToString() != "") r2["dongia"] = dr[i]["dongia"].ToString();
            r2["handung"] = dr[i]["handung"].ToString();
            r2["losx"] = dr[i]["losx"].ToString();
            r2["toncuoi"] = soluong;
            r2["sttoncuoi"] = sotien;

            r2["sltra"] = dr[i]["sltra"].ToString();
            r2["sttra"] = dr[i]["sttra"].ToString();
            r2["ngaysp"] = dr[i]["ngaysp"].ToString();
            dsxml.Tables[0].Rows.Add(r2);
            return dsxml;
        }

        public bool upd_theodoigia(string d_mmyy, int d_mabd, string d_ngay, decimal d_dongia)
        {
            schema = user + d_mmyy + ".upd_theodoigia";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_theodoigia");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dutrukho(decimal d_sophieu, int d_makho, string d_mmyy, int d_mabd, decimal d_dau, decimal d_nhap, decimal d_xuat, decimal d_ton,
            decimal d_tutruc, decimal d_tc, decimal d_lan, decimal d_l1, decimal d_d1, decimal d_l2, decimal d_d2, string d_nhacc, string d_donvi, 
            string d_diengiai,int d_loaiphieu,int d_userid,int d_idnhacc,string d_tungay,string d_denngay,int i_manguon)
        {
            sql = " update " + user + ".d_dutrukho set mmyy=:d_mmyy,makho=:d_makho,mabd=:d_mabd,dau=:d_dau,nhap=:d_nhap,xuat=:d_xuat,ton=:d_ton,"+
            "tutruc=:d_tutruc,tc=:d_tc,lan=:d_lan,l1=:d_l1,d1=:d_d1,l2=:d_l2,d2=:d_d2,nhacc=:d_nhacc,diengiai=:d_diengiai,loaiphieu="+d_loaiphieu+","+
            "userid=:d_userid,idnhacc=:d_idnhacc,tungay=to_timestamp(:d_tungay,'dd/mm/yyyy'),denngay=to_timestamp(:d_denngay,'dd/mm/yyyy'),"+
            "manguon=:i_manguon where sophieu=:d_sophieu";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_dau", NpgsqlDbType.Numeric).Value = d_dau;
                cmd.Parameters.Add("d_nhap", NpgsqlDbType.Numeric).Value = d_nhap;
                cmd.Parameters.Add("d_xuat", NpgsqlDbType.Numeric).Value = d_xuat;
                cmd.Parameters.Add("d_ton", NpgsqlDbType.Numeric).Value = d_ton;
                cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
                cmd.Parameters.Add("d_tc", NpgsqlDbType.Numeric).Value = d_tc;
                cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                cmd.Parameters.Add("d_l1", NpgsqlDbType.Numeric).Value = d_l1;
                cmd.Parameters.Add("d_d1", NpgsqlDbType.Numeric).Value = d_d1;
                cmd.Parameters.Add("d_l2", NpgsqlDbType.Numeric).Value = d_l2;
                cmd.Parameters.Add("d_d2", NpgsqlDbType.Numeric).Value = d_d2;
                cmd.Parameters.Add("d_nhacc", NpgsqlDbType.Text).Value = d_nhacc;
                cmd.Parameters.Add("d_diengiai", NpgsqlDbType.Text).Value = d_diengiai;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_idnhacc", NpgsqlDbType.Numeric).Value = d_idnhacc;
                cmd.Parameters.Add("d_tungay", NpgsqlDbType.Varchar).Value = d_tungay;
                cmd.Parameters.Add("d_denngay", NpgsqlDbType.Varchar).Value = d_denngay;
                cmd.Parameters.Add("i_manguon", NpgsqlDbType.Numeric).Value = i_manguon;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Numeric).Value = d_sophieu;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dutrukho(mmyy,makho,mabd,dau,nhap,xuat,ton,tutruc,tc,lan,l1,"+
                        "d1,l2,d2,nhacc,sophieu,diengiai,loaiphieu,userid,idnhacc,tungay,denngay,manguon) values "+
                        "(:d_mmyy,:d_makho,:d_mabd,:d_dau,:d_nhap,:d_xuat,:d_ton,:d_tutruc,:d_tc,:d_lan,:d_l1,:d_d1,:d_l2,:d_d2,:d_nhacc"+
                        ",:d_sophieu,:d_diengiai,"+d_loaiphieu+",:d_userid,:d_idnhacc,to_timestamp(:d_tungay,'dd/mm/yyyy'),"+
                        "to_timestamp(:d_denngay,'dd/mm/yyyy'),:i_manguon)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_dau", NpgsqlDbType.Numeric).Value = d_dau;
                    cmd.Parameters.Add("d_nhap", NpgsqlDbType.Numeric).Value = d_nhap;
                    cmd.Parameters.Add("d_xuat", NpgsqlDbType.Numeric).Value = d_xuat;
                    cmd.Parameters.Add("d_ton", NpgsqlDbType.Numeric).Value = d_ton;
                    cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
                    cmd.Parameters.Add("d_tc", NpgsqlDbType.Numeric).Value = d_tc;
                    cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                    cmd.Parameters.Add("d_l1", NpgsqlDbType.Numeric).Value = d_l1;
                    cmd.Parameters.Add("d_d1", NpgsqlDbType.Numeric).Value = d_d1;
                    cmd.Parameters.Add("d_l2", NpgsqlDbType.Numeric).Value = d_l2;
                    cmd.Parameters.Add("d_d2", NpgsqlDbType.Numeric).Value = d_d2;
                    cmd.Parameters.Add("d_nhacc", NpgsqlDbType.Text).Value = d_nhacc;
                    cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Numeric).Value = d_sophieu;
                    cmd.Parameters.Add("d_diengiai", NpgsqlDbType.Text).Value = d_diengiai;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_idnhacc", NpgsqlDbType.Numeric).Value = d_idnhacc;
                    cmd.Parameters.Add("d_tungay", NpgsqlDbType.Varchar).Value = d_tungay;
                    cmd.Parameters.Add("d_denngay", NpgsqlDbType.Varchar).Value = d_denngay;
                    cmd.Parameters.Add("i_manguon", NpgsqlDbType.Numeric).Value = i_manguon;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_duockp");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
            //schema = user + ".upd_dutrukho";
            //if (con != null)
            //{
            //    con.Close(); con.Dispose();
            //}
            //con = new NpgsqlConnection(sConn);
            //try
            //{
            //    con.Open();
            //    cmd = new NpgsqlCommand(schema, con);
            //    cmd.CommandType = CommandType.StoredProcedure;
            //    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
            //    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            //    cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
            //    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            //    cmd.Parameters.Add("d_dau", NpgsqlDbType.Numeric).Value = d_dau;
            //    cmd.Parameters.Add("d_nhap", NpgsqlDbType.Numeric).Value = d_nhap;
            //    cmd.Parameters.Add("d_xuat", NpgsqlDbType.Numeric).Value = d_xuat;
            //    cmd.Parameters.Add("d_ton", NpgsqlDbType.Numeric).Value = d_ton;
            //    cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
            //    cmd.Parameters.Add("d_tc", NpgsqlDbType.Numeric).Value = d_tc;
            //    cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
            //    cmd.Parameters.Add("d_l1", NpgsqlDbType.Numeric).Value = d_l1;
            //    cmd.Parameters.Add("d_d1", NpgsqlDbType.Numeric).Value = d_d1;
            //    cmd.Parameters.Add("d_l2", NpgsqlDbType.Numeric).Value = d_l2;
            //    cmd.Parameters.Add("d_d2", NpgsqlDbType.Numeric).Value = d_d2;
            //    cmd.Parameters.Add("d_nhacc", NpgsqlDbType.Text).Value = d_nhacc;
            //    cmd.Parameters.Add("d_donvi", NpgsqlDbType.Text).Value = d_donvi;
            //    cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
            //    cmd.ExecuteNonQuery();
            //}
            //catch (NpgsqlException ex)
            //{
            //    upd_error(ex.Message, sComputer, "d_dutrukho");
            //    return false;
            //}
            //finally
            //{
            //    cmd.Dispose();
            //    con.Close(); con.Dispose();
            //}
            //return true;
        }

        public bool upd_dutruthang(int d_manguon, int d_nhom, string d_mmyy, int d_mabd, decimal d_k1, decimal d_k2, decimal d_k3, decimal d_k4, decimal d_k5, decimal d_tc, decimal d_xuat, decimal d_l1, decimal d_d1, decimal d_l2, decimal d_d2, string d_nhacc, string d_donvi, int d_lan)
        {
            schema = user + ".upd_dutruthang";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_k1", NpgsqlDbType.Numeric).Value = d_k1;
                cmd.Parameters.Add("d_k2", NpgsqlDbType.Numeric).Value = d_k2;
                cmd.Parameters.Add("d_k3", NpgsqlDbType.Numeric).Value = d_k3;
                cmd.Parameters.Add("d_k4", NpgsqlDbType.Numeric).Value = d_k4;
                cmd.Parameters.Add("d_k5", NpgsqlDbType.Numeric).Value = d_k5;
                cmd.Parameters.Add("d_tc", NpgsqlDbType.Numeric).Value = d_tc;
                cmd.Parameters.Add("d_xuat", NpgsqlDbType.Numeric).Value = d_xuat;
                cmd.Parameters.Add("d_l1", NpgsqlDbType.Numeric).Value = d_l1;
                cmd.Parameters.Add("d_d1", NpgsqlDbType.Numeric).Value = d_d1;
                cmd.Parameters.Add("d_l2", NpgsqlDbType.Numeric).Value = d_l2;
                cmd.Parameters.Add("d_d2", NpgsqlDbType.Numeric).Value = d_d2;
                cmd.Parameters.Add("d_nhacc", NpgsqlDbType.Text).Value = d_nhacc;
                cmd.Parameters.Add("d_donvi", NpgsqlDbType.Text).Value = d_donvi;
                cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dutruthang");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dutrumua(int d_nhom, int d_mabd, decimal d_tongton, decimal d_soluong, decimal d_sldukien, string d_quicach, int d_noisx, string d_handung, decimal d_dongia, int d_congty, string d_mmyy, int d_nhomctd)
        {
            schema = user + ".upd_dutrumua";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_tongton", NpgsqlDbType.Numeric).Value = d_tongton;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_sldukien", NpgsqlDbType.Numeric).Value = d_sldukien;
                cmd.Parameters.Add("d_quicach", NpgsqlDbType.Text).Value = d_quicach;
                cmd.Parameters.Add("d_noisx", NpgsqlDbType.Numeric).Value = d_noisx;
                cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                cmd.Parameters.Add("d_dongia", NpgsqlDbType.Numeric).Value = d_dongia;
                cmd.Parameters.Add("d_congty", NpgsqlDbType.Numeric).Value = d_congty;
                cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                cmd.Parameters.Add("d_nhomctd", NpgsqlDbType.Numeric).Value = d_nhomctd;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dutrumua");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dutrull(string d_mmyy, decimal d_id, decimal d_idduyet, string d_mabn, decimal d_mavaovien, decimal d_maql, decimal d_idkhoa, string d_ngayvv, decimal d_songay)
        {
            schema = user + d_mmyy + ".upd_dutrull";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                cmd.Parameters.Add("d_ngayvv", NpgsqlDbType.Varchar, 16).Value = d_ngayvv;
                cmd.Parameters.Add("d_songay", NpgsqlDbType.Numeric).Value = d_songay;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_dutrull");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dutrull_new(string d_mmyy, decimal d_id, decimal d_idduyet, string d_mabn, decimal d_mavaovien, decimal d_maql, decimal d_idkhoa, string d_ngayvv, decimal d_songay, int d_loaipttt)
        {
            //schema = user + d_mmyy + ".upd_dutrull";
            int rec = 0;
            string dsql = " update " + user + d_mmyy + ".d_dutrull set idduyet=:d_idduyet,mabn=:d_mabn,mavaovien=:d_mavaovien,maql=:d_maql,idkhoa=:d_idkhoa,ngayvv=to_timestamp(:d_ngayvv,'dd/mm/yyyy hh24:mi'),songay=:d_songay,loaipttt=:d_loaipttt where id=:d_id ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(dsql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                cmd.Parameters.Add("d_ngayvv", NpgsqlDbType.Varchar, 16).Value = d_ngayvv;
                cmd.Parameters.Add("d_songay", NpgsqlDbType.Numeric).Value = d_songay;
                cmd.Parameters.Add("d_loaipttt", NpgsqlDbType.Numeric).Value = d_loaipttt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                rec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (rec == 0)
                {
                    dsql = "insert into " + user + d_mmyy + ".d_dutrull(id,idduyet,mabn,mavaovien,maql,idkhoa,ngayvv,songay,loaipttt) values (:d_id,:d_idduyet,:d_mabn,:d_mavaovien,:d_maql,:d_idkhoa,to_timestamp(:d_ngayvv,'dd/mm/yyyy hh24:mi'),:d_songay,:d_loaipttt)";
                    cmd = new NpgsqlCommand(dsql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                    cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                    cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                    cmd.Parameters.Add("d_ngayvv", NpgsqlDbType.Varchar, 16).Value = d_ngayvv;
                    cmd.Parameters.Add("d_songay", NpgsqlDbType.Numeric).Value = d_songay;
                    cmd.Parameters.Add("d_loaipttt", NpgsqlDbType.Numeric).Value = d_loaipttt;
                    rec = cmd.ExecuteNonQuery();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_dutrull");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_duyet(string d_mmyy, decimal d_id, int d_nhom, string d_ngay, int d_loai, int d_phieu, int d_makp, int d_done, int d_userid, int d_makhoa, int d_loaipttt)
        {
            //schema = user + d_mmyy + ".upd_duyet";
            int rec = 0;
            string asql = "update " + user + d_mmyy + ".d_duyet set nhom=:d_nhom,ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),loai=:d_loai,phieu=:d_phieu,makp=:d_makp,userid=:d_userid,makhoa=:d_makhoa,loaipttt=:d_loaipttt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(asql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_makhoa", NpgsqlDbType.Numeric).Value = d_makhoa;
                cmd.Parameters.Add("d_loaipttt", NpgsqlDbType.Numeric).Value = d_loaipttt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                rec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (rec == 0)
                {
                    asql = "insert into " + user + d_mmyy + ".d_duyet(id,nhom,ngay,loai,phieu,makp,done,userid,makhoa,loaipttt) values (:d_id,:d_nhom,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_loai,:d_phieu,:d_makp,:d_done,:d_userid,:d_makhoa,:d_loaipttt)";
                    cmd = new NpgsqlCommand(asql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_makhoa", NpgsqlDbType.Numeric).Value = d_makhoa;
                    cmd.Parameters.Add("d_loaipttt", NpgsqlDbType.Numeric).Value = d_loaipttt;
                    rec = cmd.ExecuteNonQuery();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_duyet");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public void del_dangduyet(int d_nhom, string d_tu, string d_den, int d_loai, int d_makp)
        {
            execute_data("delete from " + user + ".d_dangduyet where nhom=" + d_nhom + " and tu='" + d_tu + "' and den='" + d_den + "' and loai=" + d_loai + " and makp=" + d_makp);
        }

        public DataSet get_dangduyet(int d_nhom, string d_tu, int d_loai, int d_makp)
        {
            return get_data("select computer from " + user + ".d_dangduyet where nhom=" + d_nhom + " and tu='" + d_tu + "' and loai=" + d_loai + " and makp=" + d_makp + " and to_char(ngayud,'dd/mm/yyyy')='" + ngayhienhanh_server.Substring(0, 10) + "' and computer<>'" + System.Environment.MachineName + "'");
        }

        public bool upd_dangduyet(int d_nhom, string d_tu, string d_den, int d_loai, int d_makp)
        {
            sql = "update " + user + ".d_dangduyet set nhom=:d_nhom where nhom=:d_nhom and tu=:d_tu and den=:d_den and loai=:d_loai and makp=:d_makp";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_tu", NpgsqlDbType.Varchar, 10).Value = d_tu;
                cmd.Parameters.Add("d_den", NpgsqlDbType.Varchar, 10).Value = d_den;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dangduyet (nhom,tu,den,loai,makp,computer) values (:d_nhom,:d_tu,:d_den,:d_loai,:d_makp,:sComputer)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_tu", NpgsqlDbType.Varchar, 10).Value = d_tu;
                    cmd.Parameters.Add("d_den", NpgsqlDbType.Varchar, 10).Value = d_den;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("sComputer", NpgsqlDbType.Varchar, 50).Value = sComputer;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dangduyet");
                return false;
            }
            finally
            {

                con.Dispose(); con.Close();
            }
            return true;
        }
        public bool upd_duyetkho(string d_mmyy, decimal d_idduyet, int d_makho, int d_done)
        {
            string xxx = user + d_mmyy;
            sql = "update " + xxx + ".d_duyetkho set done=:d_done where idduyet=:d_idduyet and makho=:d_makho";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + xxx + ".d_duyetkho (idduyet,makho,done) values (:d_idduyet,:d_makho,:d_done)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_duyetkho");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_ngayduyet(string d_mmyy, int d_nhom, int d_loai, int d_phieu, int d_makp, string d_ngay, decimal d_idduyet, string d_makho, string d_sttduyet)
        {
            //schema = user + d_mmyy + ".upd_ngayduyet";
            string sql = "Update " + user + d_mmyy + ".d_ngayduyet set idduyet=:d_idduyet,";
            sql += "sttduyet=:d_sttduyet where nhom=:d_nhom and loai=:d_loai and phieu=:d_phieu ";
            sql += "and makp=:d_makp and to_char(ngay,'dd/mm/yyyy')=:d_ngay and idduyet=" + d_idduyet + " and makho=:d_makho";

            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);


            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
            cmd.Parameters.Add("d_sttduyet", NpgsqlDbType.Text).Value = d_sttduyet;
            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
            cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
            cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Text).Value = d_makho;


            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_ngayduyet(nhom,loai,phieu,makp,ngay,idduyet,makho,sttduyet)";
                    sql += " values (:d_nhom,:d_loai,:d_phieu,:d_makp,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_idduyet,:d_makho,:d_sttduyet)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Text).Value = d_makho;
                    cmd.Parameters.Add("d_sttduyet", NpgsqlDbType.Text).Value = d_sttduyet;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_ngayduyet");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dausinhton(string d_mmyy, decimal d_id, decimal d_idkhoa, decimal d_iddutru, string d_ngay, string d_mabs, string d_manv, decimal d_mach, decimal d_nhietdo, string d_huyetap, decimal d_nhiptho, int d_cannang, string d_phong, string d_giuong, string d_ghichu, string d_mabn)
        {
            schema = user + d_mmyy + ".upd_dausinhton";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                cmd.Parameters.Add("d_iddutru", NpgsqlDbType.Numeric).Value = d_iddutru;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 16).Value = d_ngay;
                cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                cmd.Parameters.Add("d_manv", NpgsqlDbType.Varchar, 4).Value = d_manv;
                cmd.Parameters.Add("d_mach", NpgsqlDbType.Numeric).Value = d_mach;
                cmd.Parameters.Add("d_nhietdo", NpgsqlDbType.Numeric).Value = d_nhietdo;
                cmd.Parameters.Add("d_huyetap", NpgsqlDbType.Varchar, 7).Value = d_huyetap;
                cmd.Parameters.Add("d_nhiptho", NpgsqlDbType.Numeric).Value = d_nhiptho;
                cmd.Parameters.Add("d_cannang", NpgsqlDbType.Numeric).Value = d_cannang;
                cmd.Parameters.Add("d_phong", NpgsqlDbType.Varchar, 10).Value = d_phong;
                cmd.Parameters.Add("d_giuong", NpgsqlDbType.Varchar, 20).Value = d_giuong;
                cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                cmd.ExecuteNonQuery();
                execute_data("update " + user + d_mmyy + ".d_dausinhton set mabn='" + d_mabn + "' where id=" + d_id + "");
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_dausinhton");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dutruct(string d_mmyy, decimal d_id, decimal d_stt, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau, decimal d_slthuc, string d_cachdung, int d_manguon, int d_tutruc, decimal d_solan, decimal d_lan)
        {
            schema = user + d_mmyy + ".upd_dutruct";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
                cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_dutruct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }


        public bool upd_dutruct(string d_mmyy, decimal d_id, decimal d_stt, int d_madoituong, int d_makho, int d_mabd,
            decimal d_slyeucau, decimal d_slthuc, string d_cachdung, int d_manguon, int d_tutruc,
            decimal d_solan, decimal d_lan, int d_choduyet)
        {
            schema = user + d_mmyy + ".upd_dutruct";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
                cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                cmd.Parameters.Add("d_choduyet", NpgsqlDbType.Numeric).Value = d_choduyet;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_dutruct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        //Thanhcuong 01/03/2012
        public bool upd_dutruct(string d_mmyy, decimal d_id, decimal d_stt, int d_madoituong, int d_makho, int d_mabd,
            decimal d_slyeucau, decimal d_slthuc, string d_cachdung, int d_manguon, int d_tutruc,
            decimal d_solan, decimal d_lan, int d_choduyet, decimal d_userid)
        {
            string sql = "update " + user + d_mmyy + ".d_dutruct set madoituong=:d_madoituong,makho=:d_makho,mabd=:d_mabd,slyeucau=:d_slyeucau,";
            sql += "cachdung=:d_cachdung,manguon=:d_manguon,tutruc=:d_tutruc,solan=:d_solan,lan=:d_lan,choduyet=:d_choduyet,userid=:d_userid where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
            cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
            cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
            cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
            cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
            cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
            cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
            cmd.Parameters.Add("d_choduyet", NpgsqlDbType.Numeric).Value = d_choduyet;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_dutruct(id,stt,madoituong,makho,mabd,slyeucau,slthuc,cachdung,manguon,";
                    sql += "tutruc,solan,lan,choduyet,userid) values (:d_id,:d_stt,:d_madoituong,:d_makho,:d_mabd,:d_slyeucau,:d_slthuc,:d_cachdung,";
                    sql += ":d_manguon,:d_tutruc,:d_solan,:d_lan,:d_choduyet,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                    cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
                    cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                    cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                    cmd.Parameters.Add("d_choduyet", NpgsqlDbType.Numeric).Value = d_choduyet;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_dutruct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        //

        public bool upd_hoantrall(string d_mmyy, decimal d_id, decimal d_idduyet, string d_mabn, decimal d_mavaovien, decimal d_maql, decimal d_idkhoa, string d_ngayvv, int d_lydo, int d_thuoc)
        {
            //schema = user + d_mmyy + ".upd_hoantrall";
            string sql = "update " + user + d_mmyy + ".d_hoantrall set idduyet=:d_idduyet,mabn=:d_mabn,";
            sql += "mavaovien=:d_mavaovien,maql=:d_maql,idkhoa=:d_idkhoa,ngayvv=to_timestamp(:d_ngayvv,'dd/mm/yyyy hh24:mi'),";
            sql += "lydo=:d_lydo,thuoc=:d_thuoc where id=:d_id;";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
            cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
            cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
            cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
            cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
            cmd.Parameters.Add("d_ngayvv", NpgsqlDbType.Varchar, 16).Value = d_ngayvv;
            cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
            cmd.Parameters.Add("d_thuoc", NpgsqlDbType.Numeric).Value = d_thuoc;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_hoantrall(id,idduyet,mabn,mavaovien,";
                    sql += "maql,idkhoa,ngayvv,lydo,thuoc) values (:d_id,:d_idduyet,:d_mabn,:d_mavaovien,";
                    sql += ":d_maql,:d_idkhoa,to_timestamp(:d_ngayvv,'dd/mm/yyyy hh24:mi'),:d_lydo,:d_thuoc)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                    cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                    cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                    cmd.Parameters.Add("d_ngayvv", NpgsqlDbType.Varchar, 16).Value = d_ngayvv;
                    cmd.Parameters.Add("d_lydo", NpgsqlDbType.Numeric).Value = d_lydo;
                    cmd.Parameters.Add("d_thuoc", NpgsqlDbType.Numeric).Value = d_thuoc;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_hoantrall");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_hoantract(string d_mmyy, decimal d_id, decimal d_stt, string d_ngay, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau, decimal d_slthuc, int d_manguon)
        {
            schema = user + d_mmyy + ".upd_hoantract";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_hoantract");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        //Thuy 03.02.2012
        public bool upd_hoantract(string d_mmyy, decimal d_id, decimal d_stt, string d_ngay, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau, decimal d_slthuc, int d_manguon, int d_userid)
        {
            string sql = "update " + user + d_mmyy + ".d_hoantract set ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),";
            sql += "madoituong=:d_madoituong,makho=:d_makho,mabd=:d_mabd,slyeucau=:d_slyeucau,slthuc=:d_slthuc," +
                "manguon=:d_manguon,";
            sql += "userid=:d_userid where id=:d_id and stt=:d_stt";

            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
            cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
            cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_hoantract(id,stt,ngay,madoituong,";
                    sql += "makho,mabd,slyeucau,slthuc,manguon,userid) values (:d_id,:d_stt,to_timestamp(:d_ngay,'dd/mm/yyyy'),";
                    sql += ":d_madoituong,:d_makho,:d_mabd,:d_slyeucau,:d_slthuc,:d_manguon,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                    cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_hoantract");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        //end Thuy 03.02.2012
        public bool upd_hoantract(string d_mmyy, decimal d_id, decimal d_stt, string d_ngay, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau, decimal d_slthuc, int d_manguon, decimal d_sttt)
        {
            //schema = user + d_mmyy + ".upd_hoantract";
            string sql = "update " + user + d_mmyy + ".d_hoantract set ngay=to_timestamp(:d_ngay,'dd/mm/yyyy'),";
            sql += "madoituong=:d_madoituong,makho=:d_makho,mabd=:d_mabd,slyeucau=:d_slyeucau,slthuc=:d_slthuc,manguon=:d_manguon,";
            sql += "sttt=:d_sttt where id=:d_id and stt=:d_stt";

            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
            cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
            cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_hoantract(id,stt,ngay,madoituong,";
                    sql += "makho,mabd,slyeucau,slthuc,manguon,sttt) values (:d_id,:d_stt,to_timestamp(:d_ngay,'dd/mm/yyyy'),";
                    sql += ":d_madoituong,:d_makho,:d_mabd,:d_slyeucau,:d_slthuc,:d_manguon,:d_sttt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                    cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_hoantract");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmnguon(decimal d_id, string d_ten, int d_nhom, int d_loai, decimal d_stt, int d_nguon_tt)
        {
            sql = "update " + user + ".d_dmnguon set ten=:d_ten,nhom=:d_nhom,loai=:d_loai,stt=:d_stt,nguon_tt=:d_nguon_tt where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_nguon_tt", NpgsqlDbType.Numeric).Value = d_nguon_tt;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmnguon (id,ten,nhom,loai,stt,nguon_tt) values (:d_id,:d_ten,:d_nhom,:d_loai,:d_stt,:d_nguon_tt)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_nguon_tt", NpgsqlDbType.Numeric).Value = d_nguon_tt;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dmnguon");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmkho(decimal d_id, string d_ten, int d_nhom, int d_loai, decimal d_stt, int d_khott, string d_computer, string d_matat, int d_ketoan, int d_thua)
        {
            sql = "update " + user + ".d_dmkho set ten=:d_ten,nhom=:d_nhom,loai=:d_loai,stt=:d_stt,khott=:d_khott,computer=:d_computer,matat=:d_matat,ketoan=:d_ketoan,thua=:d_thua where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_khott", NpgsqlDbType.Numeric).Value = d_khott;
                cmd.Parameters.Add("d_computer", NpgsqlDbType.Text).Value = d_computer;
                cmd.Parameters.Add("d_matat", NpgsqlDbType.Varchar, 10).Value = d_matat;
                cmd.Parameters.Add("d_ketoan", NpgsqlDbType.Numeric).Value = d_ketoan;
                cmd.Parameters.Add("d_thua", NpgsqlDbType.Numeric).Value = d_thua;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmkho (id,ten,nhom,loai,stt,khott,computer,matat,ketoan,thua) values (:d_id,:d_ten,:d_nhom,:d_loai,:d_stt,:d_khott,:d_computer,:d_matat,:d_ketoan,:d_thua)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_khott", NpgsqlDbType.Numeric).Value = d_khott;
                    cmd.Parameters.Add("d_computer", NpgsqlDbType.Text).Value = d_computer;
                    cmd.Parameters.Add("d_matat", NpgsqlDbType.Varchar, 10).Value = d_matat;
                    cmd.Parameters.Add("d_ketoan", NpgsqlDbType.Numeric).Value = d_ketoan;
                    cmd.Parameters.Add("d_thua", NpgsqlDbType.Numeric).Value = d_thua;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dmkho");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dmkho(decimal d_id, string d_ten, int d_nhom, int d_loai, decimal d_stt, int d_khott, string d_computer, string d_matat, int d_ketoan, int d_thua, int d_khudt, int d_chinhanh, bool d_New,int d_khohaohut)
        {

            sql = "update " + user + ".d_dmkho set ten=:d_ten,nhom=:d_nhom,loai=:d_loai,stt=:d_stt,khott=:d_khott,computer=:d_computer,matat=:d_matat,ketoan=:d_ketoan,thua=:d_thua, khu=:d_khudt,chinhanh=" + d_chinhanh.ToString() + ",haohut=:d_khohaohut where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                int irec = 0;
                con.Open();
                if (d_New == false)
                {
                    cmd = new NpgsqlCommand(sql, con); 
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_khott", NpgsqlDbType.Numeric).Value = d_khott;
                    cmd.Parameters.Add("d_computer", NpgsqlDbType.Text).Value = d_computer;
                    cmd.Parameters.Add("d_matat", NpgsqlDbType.Varchar, 10).Value = d_matat;
                    cmd.Parameters.Add("d_ketoan", NpgsqlDbType.Numeric).Value = d_ketoan;
                    cmd.Parameters.Add("d_thua", NpgsqlDbType.Numeric).Value = d_thua;
                    cmd.Parameters.Add("d_khudt", NpgsqlDbType.Numeric).Value = d_khudt;
                    cmd.Parameters.Add("d_khohaohut", NpgsqlDbType.Numeric).Value = d_khohaohut;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmkho (id,ten,nhom,loai,stt,khott,computer,matat,ketoan,thua,khu,chinhanh,haohut) values (:d_id,:d_ten,:d_nhom,:d_loai,:d_stt,:d_khott,:d_computer,:d_matat,:d_ketoan,:d_thua,:d_khudt," + d_chinhanh.ToString() + ",:d_khohaohut)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_khott", NpgsqlDbType.Numeric).Value = d_khott;
                    cmd.Parameters.Add("d_computer", NpgsqlDbType.Text).Value = d_computer;
                    cmd.Parameters.Add("d_matat", NpgsqlDbType.Varchar, 10).Value = d_matat;
                    cmd.Parameters.Add("d_ketoan", NpgsqlDbType.Numeric).Value = d_ketoan;
                    cmd.Parameters.Add("d_thua", NpgsqlDbType.Numeric).Value = d_thua;
                    cmd.Parameters.Add("d_khudt", NpgsqlDbType.Numeric).Value = d_khudt;
                    cmd.Parameters.Add("d_khohaohut", NpgsqlDbType.Numeric).Value = d_khohaohut;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dmkho");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thucxuat_stt(string d_mmyy, decimal d_id, decimal d_sttt, int d_madoituong, int d_makho, int d_mabd, decimal d_soluong, decimal d_stt, decimal d_giaban, decimal d_gia_bh)
        {
            //schema = user + d_mmyy + ".upd_thucxuat_stt";
            string sql = "update " + user + d_mmyy + ".d_thucxuat set mabd=:d_mabd,soluong=:d_soluong,";
            sql += "sttt=:d_sttt,madoituong=:d_madoituong,makho=:d_makho,giaban=:d_giaban, gia_bh=:d_gia_bh where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_thucxuat(id,sttt,madoituong,makho,mabd,soluong,";
                    sql += "stt,giaban,gia_bh) values (:d_id,:d_sttt,:d_madoituong,:d_makho,:d_mabd,:d_soluong,:d_stt,:d_giaban, :d_gia_bh)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_thucxuat");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_thucxuat_stt(string d_mmyy, decimal d_id, decimal d_sttt, int d_madoituong, int d_makho, int d_mabd, decimal d_soluong, decimal d_stt, decimal d_giaban, decimal d_gia_bh,decimal d_id_ktcao)
        {
            //schema = user + d_mmyy + ".upd_thucxuat_stt";
            string sql = "update " + user + d_mmyy + ".d_thucxuat set mabd=:d_mabd,soluong=:d_soluong,";
            sql += "sttt=:d_sttt,madoituong=:d_madoituong,makho=:d_makho,giaban=:d_giaban, gia_bh=:d_gia_bh where id=:d_id and stt=:d_stt and id_ktcao=:d_id_ktcao";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            cmd.Parameters.Add("d_id_ktcao", NpgsqlDbType.Numeric).Value = d_id_ktcao;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_thucxuat(id,sttt,madoituong,makho,mabd,soluong,";
                    sql += "stt,giaban,gia_bh,id_ktcao) values (:d_id,:d_sttt,:d_madoituong,:d_makho,:d_mabd,:d_soluong,:d_stt,:d_giaban, :d_gia_bh,:d_id_ktcao)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                    cmd.Parameters.Add("d_id_ktcao", NpgsqlDbType.Numeric).Value = d_id_ktcao;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_thucxuat");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thucxuat(string d_mmyy, decimal d_id, decimal d_sttt, int d_madoituong, int d_makho, int d_mabd, decimal d_soluong, decimal d_giaban, decimal d_gia_bh)
        {
            //schema = user + d_mmyy + ".upd_thucxuat";
            string sql = "update " + user + d_mmyy + ".d_thucxuat set mabd=:d_mabd,soluong=soluong+:d_soluong,";
            sql += "giaban=:d_giaban, gia_bh=:d_gia_bh where id=:d_id and sttt=:d_sttt and madoituong=:d_madoituong and makho=:d_makho";

            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_thucxuat(id,sttt,madoituong,makho,mabd,soluong,giaban, gia_bh) ";
                    sql += "values (:d_id,:d_sttt,:d_madoituong,:d_makho,:d_mabd,:d_soluong,:d_giaban, :d_gia_bh)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_thucxuat");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        private decimal get_id(string d_ngay, int d_nhom, int d_loai, int d_phieu, int d_makp, string d_mmyy, int d_makho, string d_table)
        {
            try
            {
                sql = "select a.id from " + user + d_mmyy + ".d_xuatsdll a," + user + d_mmyy + "." + d_table + " b where a.id=b.id and to_char(a.ngay,'dd/mm/yyyy')='" + d_ngay + "' and a.nhom=" + d_nhom + " and a.loai=" + d_loai + " and a.phieu=" + d_phieu + " and a.makhoa=" + d_makp;//and a.lk=1 
                if (d_makho != 0) sql += " and a.lydo=" + d_makho;
                ds = get_data(sql);
                if (ds.Tables[0].Rows.Count == 0) return 0;
                else return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
            }
            catch { return 0; }
        }

        public void upd_thucxuat(string d_ngay, int d_nhom, int d_loai, int d_phieu, int d_makp, int d_makhoa, string d_mmyy, int d_thuoc, int d_makho)
        {
            string str, xxx = user + d_mmyy;
            if (d_loai == 2)
                str = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban, c.gia_bh from " + xxx + ".d_tutrucct a," + xxx + ".d_theodoi t, " + user + ".d_dmbd c where a.stt=t.id and a.mabd=c.id and a.makp=" + d_makp;
            else
                str = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban, c.gia_bh from " + xxx + ".d_tonkhoct a," + xxx + ".d_theodoi t, " + user + ".d_dmbd c where a.stt=t.id and a.mabd=c.id ";
            if (d_loai == 3)
            {
                sql = "select b.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban, b.gia_bh from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_theodoi t";
                sql += " where a.id=b.id and b.sttt=t.id and to_char(a.ngay,'dd/mm/yyyy')='" + d_ngay + "' and a.nhom=" + d_nhom + " and loai=" + d_loai + " and a.phieu=" + d_phieu + " and a.makhoa=" + d_makhoa;//and a.lk=1 
                if (d_makho != 0) sql += " and a.lydo=" + d_makho;
                upd_hoantra(sql, d_ngay, d_nhom, d_loai, d_phieu, d_makp, d_mmyy, d_thuoc, d_makho);
            }
            else
            {
                bool bPhattron_doituong = bPhattron_congdondoituong(d_nhom);
                if (bPhattron_doituong)
                {
                    sql = "select t.manguon,1 as madoituong,b.makho,b.mabd,case when x.phattron=1 then sum(b.soluong) else ceil(sum(b.soluong)) end as soluong, b.gia_bh from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_theodoi t," + userid + ".d_dmbd x ";
                    sql += " where a.id=b.id and b.mabd=x.id and b.sttt=t.id and to_char(a.ngay,'dd/mm/yyyy')='" + d_ngay + "' and a.nhom=" + d_nhom + " and a.loai=" + d_loai + " and a.phieu=" + d_phieu + " and a.makhoa=" + d_makhoa;//and a.lk=1 
                    if (d_makho != 0) sql += " and a.lydo=" + d_makho;
                    sql += " group by t.manguon,1,b.makho,b.mabd, b.gia_bh ,x.phattron";
                }
                else
                {
                    sql = "select t.manguon,b.madoituong,b.makho,b.mabd,case when x.phattron=1 then sum(b.soluong) else ceil(sum(b.soluong)) end as soluong, b.gia_bh from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_theodoi t," + userid + ".d_dmbd x ";
                    sql += " where a.id=b.id and b.sttt=t.id and b.mabd=x.id and to_char(a.ngay,'dd/mm/yyyy')='" + d_ngay + "' and a.nhom=" + d_nhom + " and a.loai=" + d_loai + " and a.phieu=" + d_phieu + " and a.makhoa=" + d_makhoa;//and a.lk=1 
                    if (d_makho != 0) sql += " and a.lydo=" + d_makho;
                    sql += " group by t.manguon,b.madoituong,b.makho,b.mabd, b.gia_bh,x.phattron ";
                }
                upd_xuat(str, sql, d_ngay, d_nhom, d_loai, d_phieu, d_makp, d_makhoa, d_mmyy, true, d_thuoc, d_makho);
            }
        }

        public void upd_thucxuat_cstt(decimal d_id, string d_ngay, int d_nhom, int d_loai, int d_phieu, int d_makp, int d_makhoa, string d_mmyy, int d_thuoc, int d_makho)
        {
            string xxx = user + d_mmyy, str;
            str = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban, c.gia_bh from " + xxx + ".d_tutrucct a," + xxx + ".d_theodoi t," + user + ".d_dmbd c where a.stt=t.id and a.mabd=c.id and a.makp=" + d_makp;
            sql = "select b.manguon,b.madoituong,b.makho,b.mabd,sum(b.soluong) soluong from " + user + d_mmyy + ".d_xuatsdll a," + user + d_mmyy + ".d_xuatsdct b ";
            sql += " where a.id=b.id and to_char(a.ngay,'dd/mm/yyyy')='" + d_ngay + "'" + " and a.nhom=" + d_nhom + " and loai=" + d_loai + " and a.phieu=" + d_phieu + " and a.makhoa=" + d_makhoa;// and a.lk=1
            if (d_makho != 0) sql += " and a.lydo=" + d_makho;
            sql += " and a.id=" + d_id;
            sql += " group by b.manguon,b.madoituong,b.makho,b.mabd,c.gia_bh";
            upd_xuat(str, sql, d_ngay, d_nhom, d_loai, d_phieu, d_makp, d_makhoa, d_mmyy, false, d_thuoc, d_makho);
        }

        private void upd_xuat(string str, string sql, string d_ngay, int d_nhom, int d_loai, int d_phieu, int d_makp, int d_makhoa, string d_mmyy, bool bRound, int d_thuoc, int d_makho)
        {
            DataRow[] dr;
            DataRow r1;
            DataTable dttonct;
            decimal sl, slton, sltx, sttx, dongia, dongia_bh;
            double slqd, d_sl1, d_sl2;
            string _sl = "";
            int j;
            decimal id = 0;
            DataTable dt = get_data("select id,soluong,phattron from " + user + ".d_dmbd where nhom=" + d_nhom + " order by id").Tables[0];
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    d_sl1 = double.Parse(r["soluong"].ToString());
                    d_sl2 = double.Parse(r1["soluong"].ToString());
                    if (bRound && (d_sl2 != 1 || r["soluong"].ToString().IndexOf(".") != -1))
                    {
                        _sl = r["soluong"].ToString().Trim();
                        if (_sl.IndexOf(".") != -1)
                        {
                            if (int.Parse(_sl.Substring(_sl.IndexOf(".") + 1)) > 0)
                            {
                                j = (d_sl1 == d_sl2) ? 0 : 1;
                                slqd = (Math.Floor(d_sl1 / d_sl2) + j) * d_sl2;
                            }
                            else if (d_sl2 != 1) slqd = Convert.ToInt16(Math.Ceiling((d_sl1 - 1) / d_sl2)) * d_sl2;
                            else slqd = d_sl1;
                        }
                        else if (r1["phattron"].ToString() == "1") { slqd = Convert.ToInt16(Math.Ceiling((d_sl1 - 1) / d_sl2)) * d_sl2; }
                        else slqd = Convert.ToInt16((d_sl1 - 1) / d_sl2) * d_sl2;
                        sl = Convert.ToDecimal(slqd);
                    }
                    else sl = Convert.ToDecimal(r["soluong"].ToString());
                    sql = str + " and tondau+slnhap-slxuat>0 and makho=" + int.Parse(r["makho"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()) + " and a.mabd=" + int.Parse(r["mabd"].ToString());
                    sql += " order by stt";
                    dttonct = get_data(sql).Tables[0];
                    dr = dttonct.Select("true", "stt");
                    for (int i = 0; i < dr.Length; i++)
                    {
                        slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        dongia_bh = decimal.Parse(dr[i]["gia_bh"].ToString());
                        sltx = Math.Min(sl, Math.Max(0, slton));
                        if (sltx > 0)
                        {
                            id = get_id(d_ngay, d_nhom, d_loai, d_phieu, d_makhoa, d_mmyy, d_makho, "d_xuatsdct");
                            sttx = dongia * sltx;
                            updrec_tonkhoct(dttonct, int.Parse(r["makho"].ToString()), decimal.Parse(dr[i]["stt"].ToString()), sltx, sttx, "+");
                            upd_thucxuat(d_mmyy, id, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["madoituong"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(r["mabd"].ToString()), sltx, decimal.Parse(dr[i]["giaban"].ToString()), dongia_bh);
                            upd_tonkhoct_thucxuat(insert, d_mmyy, d_makp, d_loai, d_thuoc, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sltx);
                            dttonct.AcceptChanges();
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                    if (id != 0 && sl > 0) upd_treo(id, 0, int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "thucxuat", int.Parse(r["makho"].ToString()), 0);
                }
            }
        }

        private void upd_hoantra(string sql, string d_ngay, int d_nhom, int d_loai, int d_phieu, int d_makp, string d_mmyy, int d_thuoc, int d_makho)
        {
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                upd_thucxuat(d_mmyy, get_id(d_ngay, d_nhom, d_loai, d_phieu, d_makp, d_mmyy, d_makho, "d_xuatsdct"), decimal.Parse(r["sttt"].ToString()), int.Parse(r["madoituong"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["gia_bh"].ToString()));
                upd_tonkhoct_thucxuat(insert, d_mmyy, d_makp, d_loai, d_thuoc, decimal.Parse(r["sttt"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()));
            }
        }

        public void del(string d_mmyy, string file, decimal id, DataTable dtll, int i_loai, bool buhaophi, int i_nhom, int i_phieu,
            string d_ngay, int i_userid, bool bDuyettreole, string d_ngayylenh)
        {
            string tenfile, xxx = user + d_mmyy, xxx_ylenh = user + mmyy(d_ngayylenh);
            int itable = tableid(d_mmyy, "d_thucxuat");
            bool Phattron = bPhattron(i_nhom), Bucstt_tronso = bBucstt_tronso(i_nhom);
            switch (i_loai)
            {
                case 1: tenfile = "xxx.d_dutruct";
                    break;
                case 2: tenfile = "xxx.d_xtutrucct";
                    break;
                case 3: tenfile = "xxx.d_hoantract";
                    break;
                default: tenfile = "xxx.d_haophict";
                    break;
            }
            if (!buhaophi)
            {
                foreach (DataRow r in get_data("select a.makp,a.idduyet,a.ghichu,b.*,t.manguon from " + xxx + ".d_xuatsdll a," + xxx + "." + file + " b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.id=" + id + " order by a.idduyet").Tables[0].Rows)
                {
                    if (i_loai == 1 || i_loai == 4) upd_tonkhoth_dutru(dutru, i_nhom, d_mmyy, int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()));
                    if (i_loai == 2 && Bucstt_tronso)
                    {
                        if (r["ghichu"].ToString() == "treophanle") //execute_data("update " + user + ".d_treoduyet set slthuc=0 where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()));
                            execute_data("update " + user + ".d_treoduyet set slthuc=slthuc-(" + decimal.Parse(r["soluong"].ToString()) + ") where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()));
                        else
                        {
                            execute_data_mmyy("update " + tenfile + " set slthuc=0 where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()), d_ngayylenh, d_ngay, true);
                            //execute_data("update " + user + ".d_treoduyet set slthuc="+decimal.Parse(r["soluong"].ToString())+" where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()));
                            execute_data("delete from " + user + ".d_treoduyet where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()));
                            foreach (DataRow r1 in get_data("select a.makp,a.idduyet,b.*,t.manguon from " + xxx + ".d_xuatsdll a," + xxx + ".d_bucstt b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and b.sltreo>0 and a.id=" + id + " order by a.idduyet").Tables[0].Rows)
                                upd_treoduyet(decimal.Parse(r1["idduyet"].ToString()), decimal.Parse(r1["sttduyet"].ToString()), int.Parse(r1["madoituong"].ToString()), int.Parse(r1["makho"].ToString()), int.Parse(r1["mabd"].ToString()), decimal.Parse(r1["sltreo"].ToString()), 0, int.Parse(r1["manguon"].ToString()));
                        }
                    }
                    else if (!bDuyettreole) execute_data_mmyy("update " + tenfile + " set slthuc=0 where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()), d_ngayylenh, d_ngay, true);
                }
            }
            if (i_loai == 2)
            {
                foreach (DataRow r in get_data("select a.makp,a.idduyet,b.* from " + xxx + ".d_xuatsdll a," + xxx + "." + file + " b where a.id=b.id and a.id=" + id).Tables[0].Rows)
                {
                    if (buhaophi)
                        execute_data_mmyy("update xxx.d_haophict set slthuc=0 where tutruc=1 and id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()), d_ngayylenh, d_ngay, true);
                    else
                        execute_data_mmyy("update xxx.d_dutruct set slthuc=0 where tutruc=1 and id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()), d_ngayylenh, d_ngay, true);
                }
                itable = tableid(d_mmyy, "d_thucbucstt");
                foreach (DataRow r in get_data("select a.makp,b.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,b.soluong*t.giamua as sotien from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucbucstt b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.id=" + id).Tables[0].Rows)
                {
                    upd_eve_tables(d_mmyy, itable, i_userid, "del");
                    upd_eve_upd_del(d_mmyy, itable, i_userid, "del", fields(user + d_mmyy + ".d_thucbucstt", "id=" + id + " and stt=" + decimal.Parse(r["stt"].ToString())));
                    upd_tonkhoct_thucbucstt(delete, d_mmyy, int.Parse(r["makp"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()));
                }
                execute_data("delete from " + xxx + ".d_bucstt where id=" + id);
                execute_data("delete from " + xxx + ".d_thucbucstt where id=" + id);
            }
            else
            {
                itable = tableid(d_mmyy, "d_thucxuat");
                foreach (DataRow r in get_data("select a.mabn,a.mavaovien,a.maql,a.idkhoa,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,a.thuoc,b.*,t.manguon,t.nhomcc,t.handung,t.losx,b.soluong*t.giamua as sotien,t.giamua,t.giaban from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.id=" + id).Tables[0].Rows)
                {
                    upd_eve_tables(d_mmyy, itable, i_userid, "del");
                    upd_eve_upd_del(d_mmyy, itable, i_userid, "del", fields(user + d_mmyy + ".d_thucxuat", "id=" + id + " and stt=" + decimal.Parse(r["stt"].ToString())));
                    upd_tonkhoct_thucxuat(delete, d_mmyy, int.Parse(r["makp"].ToString()), i_loai, int.Parse(r["thuoc"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()));
                }
                if (i_loai == 1 || i_loai == 3)
                {
                    foreach (DataRow r in get_data("select a.mabn,a.mavaovien,a.maql,a.idkhoa,to_char(b.ngayylenh,'dd/mm/yyyy') as ngay,a.makhoa as makp,a.thuoc,b.*,t.giamua,t.gianovat,t.giaban,b.soluong*t.giamua as sotien, a.traituyen from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.thuoc=1 and a.id=" + id).Tables[0].Rows)
                    {
                        upd_tienthuoc(delete, d_mmyy, id, r["mabn"].ToString(), decimal.Parse(r["mavaovien"].ToString()), decimal.Parse(r["maql"].ToString()), decimal.Parse(r["idkhoa"].ToString()), r["ngay"].ToString(), int.Parse(r["makp"].ToString()), i_loai, int.Parse(r["madoituong"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["gianovat"].ToString()), 0, 0, "");
                        upd_theodoicongno((i_loai == 3) ? insert : delete, r["mabn"].ToString(), decimal.Parse(r["mavaovien"].ToString()), decimal.Parse(r["maql"].ToString()), decimal.Parse(r["idkhoa"].ToString()), int.Parse(r["madoituong"].ToString()), decimal.Parse(r["sotien"].ToString()), "thuoc");
                    }
                }
                execute_data("delete from " + xxx + ".d_xuatsdct where id=" + id);
                execute_data("delete from " + xxx + ".d_thucxuat where id=" + id);
            }
            itable = tableid(d_mmyy, "d_xuatsdll");
            upd_eve_tables(d_mmyy, itable, i_userid, "del");
            upd_eve_upd_del(d_mmyy, itable, i_userid, "del", fields(user + d_mmyy + ".d_xuatsdll", "id=" + id));
            execute_data("delete from " + xxx + ".d_xuatsdll where id=" + id);
            execute_data("delete from " + user + ".d_tscdkhoa where idduyet=" + id);
            delrec(dtll, "id='" + id+"'");
        }
        public void del_cu(string d_mmyy, string file, decimal id, DataTable dtll, int i_loai, bool buhaophi, int i_nhom, int i_phieu,
            string d_ngay, int i_userid, bool bDuyettreole)
        {
            string tenfile, xxx = user + d_mmyy;
            int itable = tableid(d_mmyy, "d_thucxuat");
            bool Phattron = bPhattron(i_nhom), Bucstt_tronso = bBucstt_tronso(i_nhom);
            switch (i_loai)
            {
                case 1: tenfile = "xxx.d_dutruct";
                    break;
                case 2: tenfile = "xxx.d_xtutrucct";
                    break;
                case 3: tenfile = "xxx.d_hoantract";
                    break;
                default: tenfile = "xxx.d_haophict";
                    break;
            }
            if (!buhaophi)
            {
                foreach (DataRow r in get_data("select a.makp,a.idduyet,a.ghichu,b.*,t.manguon from " + xxx + ".d_xuatsdll a," + xxx + "." + file + " b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.id=" + id + " order by a.idduyet").Tables[0].Rows)
                {
                    if (i_loai == 1 || i_loai == 4) upd_tonkhoth_dutru(dutru, i_nhom, d_mmyy, int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()));
                    if (i_loai == 2 && Bucstt_tronso)
                    {
                        if (r["ghichu"].ToString() == "treophanle") //execute_data("update " + user + ".d_treoduyet set slthuc=0 where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()));
                            execute_data("update " + user + ".d_treoduyet set slthuc=slthuc-(" + decimal.Parse(r["soluong"].ToString()) + ") where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()));
                        else
                        {
                            execute_data_mmyy("update " + tenfile + " set slthuc=0 where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()), d_ngay, d_ngay, true);
                            //execute_data("update " + user + ".d_treoduyet set slthuc="+decimal.Parse(r["soluong"].ToString())+" where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()));
                            execute_data("delete from " + user + ".d_treoduyet where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()));
                            foreach (DataRow r1 in get_data("select a.makp,a.idduyet,b.*,t.manguon from " + xxx + ".d_xuatsdll a," + xxx + ".d_bucstt b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and b.sltreo>0 and a.id=" + id + " order by a.idduyet").Tables[0].Rows)
                                upd_treoduyet(decimal.Parse(r1["idduyet"].ToString()), decimal.Parse(r1["sttduyet"].ToString()), int.Parse(r1["madoituong"].ToString()), int.Parse(r1["makho"].ToString()), int.Parse(r1["mabd"].ToString()), decimal.Parse(r1["sltreo"].ToString()), 0, int.Parse(r1["manguon"].ToString()));
                        }
                    }
                    else if (!bDuyettreole) execute_data_mmyy("update " + tenfile + " set slthuc=0 where id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()), d_ngay, d_ngay, true);
                }
            }
            if (i_loai == 2)
            {
                foreach (DataRow r in get_data("select a.makp,a.idduyet,b.* from " + xxx + ".d_xuatsdll a," + xxx + "." + file + " b where a.id=b.id and a.id=" + id).Tables[0].Rows)
                {
                    if (buhaophi)
                        execute_data_mmyy("update xxx.d_haophict set slthuc=0 where tutruc=1 and id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()), d_ngay, d_ngay, true);
                    else
                        execute_data_mmyy("update xxx.d_dutruct set slthuc=0 where tutruc=1 and id=" + decimal.Parse(r["idduyet"].ToString()) + " and stt=" + int.Parse(r["sttduyet"].ToString()), d_ngay, d_ngay, true);
                }
                itable = tableid(d_mmyy, "d_thucbucstt");
                foreach (DataRow r in get_data("select a.makp,b.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,b.soluong*t.giamua as sotien from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucbucstt b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.id=" + id).Tables[0].Rows)
                {
                    upd_eve_tables(d_mmyy, itable, i_userid, "del");
                    upd_eve_upd_del(d_mmyy, itable, i_userid, "del", fields(user + d_mmyy + ".d_thucbucstt", "id=" + id + " and stt=" + decimal.Parse(r["stt"].ToString())));
                    upd_tonkhoct_thucbucstt(delete, d_mmyy, int.Parse(r["makp"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()));
                }
                execute_data("delete from " + xxx + ".d_bucstt where id=" + id);
                execute_data("delete from " + xxx + ".d_thucbucstt where id=" + id);
            }
            else
            {
                itable = tableid(d_mmyy, "d_thucxuat");
                foreach (DataRow r in get_data("select a.mabn,a.mavaovien,a.maql,a.idkhoa,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,a.thuoc,b.*,t.manguon,t.nhomcc,t.handung,t.losx,b.soluong*t.giamua as sotien,t.giamua,t.giaban from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.id=" + id).Tables[0].Rows)
                {
                    upd_eve_tables(d_mmyy, itable, i_userid, "del");
                    upd_eve_upd_del(d_mmyy, itable, i_userid, "del", fields(user + d_mmyy + ".d_thucxuat", "id=" + id + " and stt=" + decimal.Parse(r["stt"].ToString())));
                    upd_tonkhoct_thucxuat(delete, d_mmyy, int.Parse(r["makp"].ToString()), i_loai, int.Parse(r["thuoc"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()));
                }
                if (i_loai == 1 || i_loai == 3)
                {
                    foreach (DataRow r in get_data("select a.mabn,a.mavaovien,a.maql,a.idkhoa,to_char(a.ngayylenh,'dd/mm/yyyy') as ngay,a.makhoa as makp,a.thuoc,b.*,t.giamua,t.gianovat,t.giaban,b.soluong*t.giamua as sotien, a.traituyen from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_theodoi t where a.id=b.id and b.sttt=t.id and a.thuoc=1 and a.id=" + id).Tables[0].Rows)
                    {
                        upd_tienthuoc(delete, d_mmyy, id, r["mabn"].ToString(), decimal.Parse(r["mavaovien"].ToString()), decimal.Parse(r["maql"].ToString()), decimal.Parse(r["idkhoa"].ToString()), r["ngay"].ToString(), int.Parse(r["makp"].ToString()), i_loai, int.Parse(r["madoituong"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["gianovat"].ToString()), 0, 0, "");
                        upd_theodoicongno((i_loai == 3) ? insert : delete, r["mabn"].ToString(), decimal.Parse(r["mavaovien"].ToString()), decimal.Parse(r["maql"].ToString()), decimal.Parse(r["idkhoa"].ToString()), int.Parse(r["madoituong"].ToString()), decimal.Parse(r["sotien"].ToString()), "thuoc");
                    }
                }
                execute_data("delete from " + xxx + ".d_xuatsdct where id=" + id);
                execute_data("delete from " + xxx + ".d_thucxuat where id=" + id);
            }
            itable = tableid(d_mmyy, "d_xuatsdll");
            upd_eve_tables(d_mmyy, itable, i_userid, "del");
            upd_eve_upd_del(d_mmyy, itable, i_userid, "del", fields(user + d_mmyy + ".d_xuatsdll", "id=" + id));
            execute_data("delete from " + xxx + ".d_xuatsdll where id=" + id);
            delrec(dtll, "id=" + id);
        }

        public void upd_duyet(string s_mmyy, int i_makp, int i_nhom, int i_loai, int i_phieu, string s_ngay, string s_makho)
        {
            string xxx = user + s_mmyy, tenfile = "xxx.d_dutrull", tmp_kho = s_makho;
            switch (i_loai)
            {
                case 2: tenfile = "xxx.d_xtutrucll"; break;
                case 3: tenfile = "xxx.d_hoantrall"; break;
                case 4: tenfile = "xxx.d_haophill"; break;
            }
            sql = "select distinct a.idduyet, b.makho from " + tenfile + " a," + xxx + ".d_ngayduyet b where a.id=b.idduyet and b.nhom=" + i_nhom + " and b.loai=" + i_loai + " and b.phieu=" + i_phieu + " and b.makp=" + i_makp + " and to_char(b.ngay,'dd/mm/yyyy')='" + s_ngay + "'";
            if (s_makho != "") sql += " and (b.makho='" + s_makho + "' or ','||'" + s_makho + "' like '%,'||b.makho||'%')";
            foreach (DataRow r in get_data_mmyy(sql, s_ngay, s_ngay, true).Tables[0].Rows)
            {
                tmp_kho = r["makho"].ToString();
                execute_data_mmyy("update xxx.d_duyet set done=1 where id=" + decimal.Parse(r["idduyet"].ToString()), s_ngay, s_ngay, true);
                if (tmp_kho == "") execute_data_mmyy("update xxx.d_duyetkho set done=1 where idduyet=" + decimal.Parse(r["idduyet"].ToString()), s_ngay, s_ngay, true);
                else
                {
                    foreach (DataRow r1 in get_data("select * from " + user + ".d_dmkho where hide=0 and id in (" + tmp_kho.Trim().Trim(',') + ")").Tables[0].Rows)//foreach(DataRow r1 in get_data("select * from "+user+".d_dmkho where id in ("+s_makho.Substring(0,s_makho.Length-1)+")").Tables[0].Rows)
                        execute_data_mmyy("update xxx.d_duyetkho set done=1 where idduyet=" + decimal.Parse(r["idduyet"].ToString()) + " and makho=" + int.Parse(r1["id"].ToString()), s_ngay, s_ngay, true);
                }
            }
            sql = "delete from " + xxx + ".d_ngayduyet where nhom=" + i_nhom + " and loai=" + i_loai + " and phieu=" + i_phieu + " and makp=" + i_makp + " and to_char(ngay,'dd/mm/yyyy')='" + s_ngay + "'";
            if (tmp_kho != "") sql += " and makho='" + tmp_kho + "'"; //if (s_makho != "") sql += " and makho='" + s_makho + "'";//bbb
            execute_data(sql);
        }

        public bool get_duyet(string s_mmyy, int i_makp, int i_nhom, int i_loai, int i_phieu, string s_ngay, string s_makho)
        {
            sql = "select * from " + user + s_mmyy + ".d_ngayduyet where nhom=" + i_nhom + " and loai=" + i_loai + " and phieu=" + i_phieu + " and makp=" + i_makp + " and to_char(ngay,'dd/mm/yyyy')='" + s_ngay + "'";
            if (s_makho != "") sql += " and makho='" + s_makho + "'";
            return get_data(sql).Tables[0].Rows.Count > 0;
        }

        public bool upd_haophill(string d_mmyy, decimal d_id, decimal d_idduyet, string d_sophieu)
        {
            schema = user + d_mmyy + ".upd_haophill";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar).Value = d_sophieu;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_haophill");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_haophict(string d_mmyy, decimal d_id, decimal d_stt, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau, decimal d_slthuc, int d_manguon, int d_tutruc)
        {
            schema = user + d_mmyy + ".upd_haophict";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_haophict");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        //ThanhCuong 01/03/2012
        public bool upd_haophict(string d_mmyy, decimal d_id, decimal d_stt, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau, decimal d_slthuc, int d_manguon, int d_tutruc, decimal d_userid)
        {
            sql = "update " + user + d_mmyy + ".d_haophict set madoituong=:d_madoituong,makho=:d_makho,mabd=:d_mabd,slyeucau=:d_slyeucau,";
            sql += "manguon=:d_manguon,tutruc=:d_tutruc,userid=:d_userid where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_haophict(id,stt,madoituong,makho,mabd,slyeucau,slthuc,manguon,tutruc,userid) ";
                    sql += "values(:d_id, :d_stt, :d_madoituong, :d_makho, :d_mabd, :d_slyeucau, :d_slthuc, :d_manguon, :d_tutruc,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                    cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_tutruc", NpgsqlDbType.Numeric).Value = d_tutruc;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_haophict");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        //

        public bool upd_xtutrucll(string d_mmyy, decimal d_id, decimal d_idduyet, string d_mabn, decimal d_mavaovien, decimal d_maql, decimal d_idkhoa, string d_ngayvv, decimal d_songay)
        {
            schema = user + d_mmyy + ".upd_xtutrucll";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                cmd.Parameters.Add("d_ngayvv", NpgsqlDbType.Varchar, 16).Value = d_ngayvv;
                cmd.Parameters.Add("d_songay", NpgsqlDbType.Numeric).Value = d_songay;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xtutrucll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_treoduyet(decimal d_id, decimal d_stt, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau, decimal d_slthuc, int d_manguon)
        {
            schema = user + ".upd_treoduyet";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_treoduyet");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_xtutrucct(string d_mmyy, decimal d_id, decimal d_stt, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau, decimal d_slthuc, string d_cachdung, int d_manguon, decimal d_idvpkhoa, decimal d_solan, decimal d_lan)
        {
            schema = user + d_mmyy + ".upd_xtutrucct";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_idvpkhoa", NpgsqlDbType.Numeric).Value = d_idvpkhoa;
                cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xtutrucct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        //Thuy 22.08.2012
        public bool upd_xtutrucct_cdha(string d_mmyy, decimal d_id, decimal d_stt, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau, decimal d_slthuc, string d_cachdung, int d_manguon, decimal d_idvpkhoa, decimal d_solan, decimal d_lan,decimal d_hu)
        {
            schema = user + d_mmyy + ".upd_xtutrucct_cdha";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_idvpkhoa", NpgsqlDbType.Numeric).Value = d_idvpkhoa;
                cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                cmd.Parameters.Add("d_hu", NpgsqlDbType.Numeric).Value = d_hu;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xtutrucct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        //ThanhCuong 01/03/2012
        public bool upd_xtutrucct(string d_mmyy, decimal d_id, decimal d_stt, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau,
            decimal d_slthuc, string d_cachdung, int d_manguon, decimal d_idvpkhoa, decimal d_solan, decimal d_lan, decimal d_userid)
        {
            sql = "update " + user + d_mmyy + ".d_xtutrucct set madoituong=:d_madoituong,makho=:d_makho,mabd=:d_mabd,";
            sql += "slyeucau=:d_slyeucau,cachdung=:d_cachdung,manguon=:d_manguon,idvpkhoa=:d_idvpkhoa,solan=:d_solan,lan=:d_lan, ";
            sql += "userid=:d_userid where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_idvpkhoa", NpgsqlDbType.Numeric).Value = d_idvpkhoa;
                cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_xtutrucct(id,stt,madoituong,makho,mabd,slyeucau,slthuc,cachdung,manguon,idvpkhoa,solan,lan,userid) ";
                    sql += "values (:d_id,:d_stt,:d_madoituong,:d_makho,:d_mabd,:d_slyeucau,:d_slthuc,:d_cachdung,:d_manguon,:d_idvpkhoa,:d_solan,:d_lan,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                    cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_idvpkhoa", NpgsqlDbType.Numeric).Value = d_idvpkhoa;
                    cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                    cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xtutrucct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        //Kỹ thuật cao
        public bool upd_xtutrucct(string d_mmyy, decimal d_id, decimal d_stt, int d_madoituong, int d_makho, int d_mabd, decimal d_slyeucau,
            decimal d_slthuc, string d_cachdung, int d_manguon, decimal d_idvpkhoa, decimal d_solan, decimal d_lan, decimal d_userid,decimal d_id_ktcao)
        {
            sql = "update " + user + d_mmyy + ".d_xtutrucct set madoituong=:d_madoituong,makho=:d_makho,mabd=:d_mabd,";
            sql += "slyeucau=:d_slyeucau,cachdung=:d_cachdung,manguon=:d_manguon,idvpkhoa=:d_idvpkhoa,solan=:d_solan,lan=:d_lan, ";
            sql += "userid=:d_userid where id=:d_id and stt=:d_stt and id_ktcao=:d_id_ktcao";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_idvpkhoa", NpgsqlDbType.Numeric).Value = d_idvpkhoa;
                cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_id_ktcao", NpgsqlDbType.Numeric).Value = d_id_ktcao;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_xtutrucct(id,stt,madoituong,makho,mabd,slyeucau,slthuc,cachdung,manguon,idvpkhoa,solan,lan,userid,id_ktcao) ";
                    sql += "values (:d_id,:d_stt,:d_madoituong,:d_makho,:d_mabd,:d_slyeucau,:d_slthuc,:d_cachdung,:d_manguon,:d_idvpkhoa,:d_solan,:d_lan,:d_userid,:d_id_ktcao)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                    cmd.Parameters.Add("d_slthuc", NpgsqlDbType.Numeric).Value = d_slthuc;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_idvpkhoa", NpgsqlDbType.Numeric).Value = d_idvpkhoa;
                    cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                    cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_id_ktcao", NpgsqlDbType.Numeric).Value = d_id_ktcao;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_xtutrucct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        //
        public DataTable get_tutrucct_dutru(string mmyy, int makp, int makho, int manguon, int mabd, int tutruc, int nhom)
        {
            bool bGiaban = false;
            if (!bGiaban_theodot(nhom))
                bGiaban = get_data("select * from " + user + ".d_doituong where loai=1").Tables[0].Rows.Count > 0;

            sql = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.gianovat,";
            if (bGiaban) sql += "d.giaban,";
            else sql += "t.giaban,";
            sql += "b.ten as tennguon,c.ten as tennhomcc ";
            if (bGia_bh_quydinh)
            {                
                if (bLaygiamua_khi_giabh_0_giabh_nho_giamua)//gia_bh > gia mua --> lay gia_mua lam gia bh
                {
                    sql += ",case when d.gia_bh > 0 and t.giamua>d.gia_bh then d.gia_bh else t.giamua end as gia_bh ";
                }
                else
                {
                    //luon lay gia_bh tu d_dmbd
                    sql += ",case when d.gia_bh > 0 then d.gia_bh else t.giamua end as gia_bh ";
                }
            }
            else
            {
                sql += ", t.giamua as gia_bh ";
            }
            sql += " from " + user + mmyy + ".d_tutrucct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + ".d_dmbd d," + user + mmyy + ".d_theodoi t ";
            sql += " where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.mabd=d.id and a.makp=" + makp;
            if (tutruc == 1) sql += " and d.tutruc=1";
            sql += " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.mabd=" + mabd;
            sql += " and a.tondau+a.slnhap-a.slxuat>0 ";
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.makho,a.stt,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tutrucct a," + user + ".d_dmbd d," + user + mmyys + ".d_theodoi t where a.stt=t.id and a.mabd=d.id and a.slxuat>0 and a.makp=" + makp;
                if (tutruc == 1) sql += " and d.tutruc=1";
                sql += " and a.makho=" + makho + " and t.manguon=" + manguon + " and a.mabd=" + mabd;
                sql += " group by a.makho,a.stt";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and stt=" + decimal.Parse(r["stt"].ToString()));
                    if (r1 != null) r1["slxuat"] = decimal.Parse(r1["slxuat"].ToString()) + decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public void get_xuatsdct_cstt(string mmyy, DataRow[] r, int makp, int makhoa, int tutruc, decimal id,
            string mabn, decimal mavaovien, decimal maql, decimal idkhoa, int loai, int thuoc, string ngay, int nhom,
            string ngayylenh, int traituyen, string mabs)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatsdct.xml");
            try
            {
                ds.Tables[0].Columns.Add("gia_bh", typeof(decimal)).DefaultValue = 0;
            }
            catch { }
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            DataTable dttonct;
            decimal sl, sltx, sttx, slton, dongia, dongia_bh = 0;
            for (int j = 0; j < r.Length; j++)
            {
                sl = decimal.Parse(r[j]["soluong"].ToString());
                dttonct = get_tutrucct_dutru(mmyy, makp, int.Parse(r[j]["makho"].ToString()), int.Parse(r[j]["manguon"].ToString()), int.Parse(r[j]["mabd"].ToString()), tutruc, nhom);
                dr = dttonct.Select("true", "");
                irec = dr.Length;
                for (int i = 0; i < irec; i++)
                {
                    slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                    dongia = decimal.Parse(dr[i]["giamua"].ToString());
                    dongia_bh = decimal.Parse(dr[i]["gia_bh"].ToString());
                    sltx = Math.Min(sl, Math.Max(0, slton));
                    decimal d_sttt_mach = 0;
                    try
                    {
                        d_sttt_mach = decimal.Parse(r[j]["sttt"].ToString());
                    }
                    catch
                    {
                        d_sttt_mach = 0;
                    }
                    if (sltx > 0)
                    {
                        stt = get_stt(ds.Tables[0]);
                        sttx = dongia * sltx;
                        if (d_sttt_mach == 0)
                        {
                            d_sttt_mach = decimal.Parse(dr[i]["stt"].ToString());
                        }
                        dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;//linh
                        updrec_xuatsdct("-", ds.Tables[0], stt, (decimal)d_sttt_mach, "", int.Parse(r[j]["mabd"].ToString()), "", "", "", "", "", "", "", dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), int.Parse(r[j]["madoituong"].ToString()), int.Parse(r[j]["makho"].ToString()), int.Parse(r[j]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), "", int.Parse(r[j]["stt"].ToString()), tutruc, null, dongia_bh);//binh 290611
                        //
                        upd_xuatsdct(mmyy, id, stt, (decimal)d_sttt_mach, int.Parse(r[j]["madoituong"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(r[j]["mabd"].ToString()), sltx, int.Parse(r[j]["stt"].ToString()), decimal.Parse(dr[i]["giaban"].ToString()), ngayylenh, dongia_bh, true);
                        upd_thucxuat_stt(mmyy, id, (decimal)d_sttt_mach, int.Parse(r[j]["madoituong"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(r[j]["mabd"].ToString()), sltx, stt, decimal.Parse(dr[i]["giaban"].ToString()), dongia_bh);
                        upd_tonkhoct_thucxuat(insert, mmyy, makp, loai, thuoc, (decimal)d_sttt_mach, int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(r[j]["mabd"].ToString()), sltx);
                        if (mabn != "")
                        {
                            upd_tienthuoc(insert, mmyy, id, mabn, mavaovien, maql, idkhoa, ngayylenh, makhoa, loai, int.Parse(r[j]["madoituong"].ToString()), int.Parse(r[j]["mabd"].ToString()), sltx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), decimal.Parse(dr[i]["gianovat"].ToString()), traituyen, dongia_bh, mabs);
                            execute_data("update " + user + mmyy + ".d_tienthuoc set traituyen=" + traituyen + " where id=" + id);
                            upd_theodoicongno(insert, mabn, mavaovien, maql, idkhoa, int.Parse(r[j]["madoituong"].ToString()), sttx, "thuoc");
                        }
                        //
                    }
                    sl -= sltx;
                    if (sl <= 0) break;
                }
                if (sl > 0 && id != 0) upd_treo(id, int.Parse(r[j]["stt"].ToString()), int.Parse(r[j]["manguon"].ToString()), int.Parse(r[j]["mabd"].ToString()), sl, "dutruct", int.Parse(r[j]["makho"].ToString()), int.Parse(r[j]["madoituong"].ToString()));
            }
            ds.AcceptChanges();
        }

        //ThanhCuong - 06/08/2012 - Kỹ thuật cao
        public void get_xuatsdct_cstt(string mmyy, DataRow[] r, int makp, int makhoa, int tutruc, decimal id,
            string mabn, decimal mavaovien, decimal maql, decimal idkhoa, int loai, int thuoc, string ngay, int nhom,
            string ngayylenh, int traituyen, string mabs,long id_ktcao)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_xuatsdct.xml");
            ds.Merge(get_data("select * from " + user + mmyy + ".d_xuatsdct where id=" + id));
            try
            {
                ds.Tables[0].Columns.Add("gia_bh", typeof(decimal)).DefaultValue = 0;
            }
            catch { }
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            DataTable dttonct;
            decimal sl, sltx, sttx, slton, dongia, dongia_bh = 0;
            for (int j = 0; j < r.Length; j++)
            {
                sl = decimal.Parse(r[j]["soluong"].ToString());
                dttonct = get_tutrucct_dutru(mmyy, makp, int.Parse(r[j]["makho"].ToString()), int.Parse(r[j]["manguon"].ToString()), int.Parse(r[j]["mabd"].ToString()), tutruc, nhom);
                dr = dttonct.Select("true", "stt");
                irec = dr.Length;
                for (int i = 0; i < irec; i++)
                {
                    slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                    dongia = decimal.Parse(dr[i]["giamua"].ToString());
                    dongia_bh = decimal.Parse(dr[i]["gia_bh"].ToString());
                    sltx = Math.Min(sl, Math.Max(0, slton));
                    decimal d_sttt_mach = 0;
                    try
                    {
                        d_sttt_mach = decimal.Parse(r[j]["sttt"].ToString());
                    }
                    catch
                    {
                        d_sttt_mach = 0;
                    }
                    if (sltx > 0)
                    {
                        stt = get_stt(ds.Tables[0]);
                        sttx = dongia * sltx;
                        if (d_sttt_mach == 0)
                        {
                            d_sttt_mach = decimal.Parse(dr[i]["stt"].ToString());
                        }
                        dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;//linh
                        updrec_xuatsdct("-", ds.Tables[0], stt, (decimal)d_sttt_mach, "", int.Parse(r[j]["mabd"].ToString()), "", "", "", "", "", "", "", dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), int.Parse(r[j]["madoituong"].ToString()), int.Parse(r[j]["makho"].ToString()), int.Parse(r[j]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), "", int.Parse(r[j]["stt"].ToString()), tutruc, null, dongia_bh);//binh 290611
                        //
                        upd_xuatsdct(mmyy, id, stt, (decimal)d_sttt_mach, int.Parse(r[j]["madoituong"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(r[j]["mabd"].ToString()), sltx, int.Parse(r[j]["stt"].ToString()), decimal.Parse(dr[i]["giaban"].ToString()), ngayylenh, dongia_bh, true,id_ktcao);
                        upd_thucxuat_stt(mmyy, id, (decimal)d_sttt_mach, int.Parse(r[j]["madoituong"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(r[j]["mabd"].ToString()), sltx, stt, decimal.Parse(dr[i]["giaban"].ToString()), dongia_bh,id_ktcao);
                        upd_tonkhoct_thucxuat(insert, mmyy, makp, loai, thuoc, (decimal)d_sttt_mach, int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(r[j]["mabd"].ToString()), sltx);
                        if (mabn != "")
                        {
                            upd_tienthuoc(insert, mmyy, id, mabn, mavaovien, maql, idkhoa, ngayylenh, makhoa, loai, int.Parse(r[j]["madoituong"].ToString()), int.Parse(r[j]["mabd"].ToString()), sltx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), decimal.Parse(dr[i]["gianovat"].ToString()), traituyen, dongia_bh, mabs,id_ktcao);
                            execute_data("update " + user + mmyy + ".d_tienthuoc set traituyen=" + traituyen + " where id=" + id);
                            upd_theodoicongno(insert, mabn, mavaovien, maql, idkhoa, int.Parse(r[j]["madoituong"].ToString()), sttx, "thuoc");
                        }
                        //
                    }
                    sl -= sltx;
                    if (sl <= 0) break;
                }
                if (sl > 0 && id != 0) upd_treo(id, int.Parse(r[j]["stt"].ToString()), int.Parse(r[j]["manguon"].ToString()), int.Parse(r[j]["mabd"].ToString()), sl, "dutruct", int.Parse(r[j]["makho"].ToString()), int.Parse(r[j]["madoituong"].ToString()));
            }
            ds.AcceptChanges();
        }
        //End

        public bool upd_cosotutruc(int d_nhom, string d_mmyy, int d_makp, int d_mabd, decimal d_soluong)
        {
            sql = "update " + user + ".d_cosotutruc set soluong=:d_soluong where nhom=:d_nhom and mmyy=:d_mmyy and makp=:d_makp and mabd=:d_mabd";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_cosotutruc (nhom,mmyy,makp,mabd,soluong) values (:d_nhom,:d_mmyy,:d_makp,:d_mabd,:d_soluong)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_cosotutruc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_sophieu(string d_mmyy, int d_nhom, string d_ngay, int d_makp, int d_loai, int d_phieu, int d_loaiin, int d_makho, string d_madoituong, string d_manguon, string d_nguoilinh)
        {
            schema = user + d_mmyy + ".upd_sophieu";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                cmd.Parameters.Add("d_loaiin", NpgsqlDbType.Numeric).Value = d_loaiin;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Text).Value = d_madoituong;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Text).Value = d_manguon;
                cmd.Parameters.Add("d_nguoilinh", NpgsqlDbType.Text).Value = d_nguoilinh;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_sophieu");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public DataTable get_sophieu(string d_mmyy, int d_nhom, string d_ngay, int d_makp, int d_loai, int d_phieu, int d_loaiin, int d_makho, string d_madoituong, string d_manguon)
        {
            sql = "select so,lanin,nguoilinh from " + user + d_mmyy + ".d_sophieu where nhom=" + d_nhom;
            sql += " and to_char(ngay,'dd/mm/yyyy')='" + d_ngay + "' and makp=" + d_makp;
            sql += " and loai=" + d_loai + " and phieu=" + d_phieu + " and loaiin=" + d_loaiin;
            sql += " and makho=" + d_makho + " and madoituong='" + d_madoituong + "'";
            sql += " and manguon='" + d_manguon + "'";
            return get_data(sql).Tables[0];
        }

        public bool upd_sophieu_yy(string d_yy, int d_nhom, string d_ngay, int d_makp, int d_loai, int d_phieu, int d_loaiin, int d_makho, string d_madoituong, string d_manguon, string d_nguoilinh)
        {
            schema = user + ".upd_sophieu";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_yy", NpgsqlDbType.Varchar, 2).Value = d_yy;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                cmd.Parameters.Add("d_loaiin", NpgsqlDbType.Numeric).Value = d_loaiin;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Text).Value = d_madoituong;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Text).Value = d_manguon;
                cmd.Parameters.Add("d_nguoilinh", NpgsqlDbType.Text).Value = d_nguoilinh;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_sophieu");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public DataTable get_sophieu_yy(string d_yy, int d_nhom, string d_ngay, int d_makp, int d_loai, int d_phieu, int d_loaiin, int d_makho, string d_madoituong, string d_manguon)
        {
            sql = "select so,lanin,nguoilinh from " + user + ".d_sophieu where yy='" + d_yy + "'" + " and nhom=" + d_nhom;
            sql += " and to_char(ngay,'dd/mm/yyyy')='" + d_ngay + "'" + " and makp=" + d_makp;
            sql += " and loai=" + d_loai + " and phieu=" + d_phieu + " and loaiin=" + d_loaiin;
            sql += " and makho=" + d_makho + " and madoituong='" + d_madoituong + "'";
            sql += " and manguon='" + d_manguon + "'";
            return get_data(sql).Tables[0];
        }

        public bool upd_daduyet(string d_mmyy, int d_nhom, string d_ngay, int d_makp, int d_loai, int d_phieu, int d_makho)
        {
            //schema = user + d_mmyy + ".upd_daduyet";
            string sql = "update " + user + d_mmyy + ".d_daduyet set nhom=:d_nhom where nhom=" + d_nhom + " and ";
            sql += "to_char(ngay,'dd/mm/yyyy')=:d_ngay and makp=:d_makp and loai=:d_loai and phieu=:d_phieu and makho=:d_makho";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
            cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                if (irec == 0)
                {

                    sql = "insert into " + user + d_mmyy + ".d_daduyet(nhom,ngay,makp,loai,phieu,makho) values ";
                    sql += "(:d_nhom,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_makp,:d_loai,:d_phieu,:d_makho)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_daduyet");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_daduyet(string d_mmyy, int d_nhom, string d_ngay, int d_makp, int d_loai, int d_phieu, int d_makho, int d_duyettreole)
        {
            //schema = user + d_mmyy + ".upd_daduyet";
            string sql = "update " + user + d_mmyy + ".d_daduyet set duyettreole=:d_duyettreole ";
            sql += "where nhom=:d_nhom and to_char(ngay,'dd/mm/yyyy')=:d_ngay and ";
            sql += "makp=:d_makp and loai=:d_loai and phieu=:d_phieu and makho=:d_makho";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_duyettreole", NpgsqlDbType.Numeric).Value = d_duyettreole;
            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
            cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
            cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_daduyet(nhom,ngay,makp,loai,";
                    sql += "phieu,makho,duyettreole) values (:d_nhom,to_timestamp(:d_ngay,'dd/mm/yyyy')";
                    sql += ",:d_makp,:d_loai,:d_phieu,:d_makho,:d_duyettreole)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_duyettreole", NpgsqlDbType.Numeric).Value = d_duyettreole;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_daduyet");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thucbucstt(string d_mmyy, decimal d_id, decimal d_sttt, int d_makho, int d_mabd, decimal d_soluong, decimal d_giaban)
        {
            //schema = user + d_mmyy + ".upd_thucbucstt";
            string sql = "update " + user + d_mmyy + ".d_thucbucstt set mabd=:d_mabd,";
            sql += "soluong=soluong+:d_soluong,giaban=:d_giaban where id=:d_id and sttt=:d_sttt and makho=:d_makho";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_thucbucstt(id,sttt,makho,mabd,";
                    sql += "soluong,giaban) values (:d_id,:d_sttt,:d_makho,:d_mabd,:d_soluong,:d_giaban)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_thucbucstt");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thucbucstt_stt(string d_mmyy, decimal d_id, decimal d_sttt, int d_makho, int d_mabd, decimal d_soluong, decimal d_stt,
            decimal d_giaban)
        {
            //schema = user + d_mmyy + ".upd_thucbucstt_stt";
            string sql = "update " + user + d_mmyy + ".d_thucbucstt set mabd=:d_mabd,soluong=soluong+:d_soluong,";
            sql += "giaban=:d_giaban where id=:d_id and sttt=:d_sttt and makho=:d_makho and stt=:d_stt";

            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_thucbucstt(id,sttt,makho,mabd,soluong,giaban,stt) ";
                    sql += "values (:d_id,:d_sttt,:d_makho,:d_mabd,:d_soluong,:d_giaban,:d_stt)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_thucbucstt");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public void upd_thucbucstt(string d_ngay, int d_nhom, int d_loai, int d_phieu, int d_makp, int d_makhoa, string d_mmyy, int d_makho)
        {
            string xxx = user + d_mmyy, str = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban from " + xxx + ".d_tonkhoct a," + xxx + ".d_theodoi t where a.stt=t.id ";
            sql = "select a.makhoa, t.manguon,b.makho,b.mabd,sum(b.soluong) as soluong from " + xxx + ".d_xuatsdll a," + xxx + ".d_bucstt b," + xxx + ".d_theodoi t";
            sql += " where a.id=b.id and b.sttt=t.id and to_char(a.ngay,'dd/mm/yyyy')='" + d_ngay + "' and a.nhom=" + d_nhom + " and loai=" + d_loai + " and a.phieu=" + d_phieu;// and a.lk=1
            if (bIntheocstt(d_nhom))
                sql += " and  a.makp=" + d_makp;
            else
                sql += " and a.makhoa=" + d_makhoa;
            if (d_makho != 0) sql += " and a.lydo=" + d_makho;
            sql += " group by a.makhoa, t.manguon,b.makho,b.mabd";
            upd_xuatbucstt(str, sql, d_ngay, d_nhom, d_loai, d_phieu, d_makp, d_makhoa, d_mmyy, d_makho, true);
        }

        private void upd_xuatbucstt(string str, string sql, string d_ngay, int d_nhom, int d_loai, int d_phieu, int d_makp, int d_makhoa, string d_mmyy, int d_makho, bool bRound)
        {
            DataRow[] dr;
            DataRow r1;
            DataTable dttonct;
            decimal sl, slton, sltx, sttx, dongia;
            double slqd, d_sl1, d_sl2;
            string _sl = "";
            decimal id = 0;
            int j;
            bool _bNhaptruocxuat = bNhaptruocxuat(d_nhom);
            DataTable dt = get_data("select id,soluong from " + user + ".d_dmbd where nhom=" + d_nhom + " order by id").Tables[0];
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                d_makhoa = int.Parse(r["makhoa"].ToString());//bbbb
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    d_sl1 = double.Parse(r["soluong"].ToString());
                    d_sl2 = double.Parse(r1["soluong"].ToString());
                    if (bRound && (d_sl2 != 1 || r["soluong"].ToString().IndexOf(".") != -1))
                    {
                        _sl = r["soluong"].ToString().Trim();
                        if (_sl.IndexOf(".") != -1)
                        {
                            if (int.Parse(_sl.Substring(_sl.IndexOf(".") + 1)) > 0)
                            {
                                j = (d_sl1 == d_sl2) ? 0 : 1;
                                slqd = (Math.Floor(d_sl1 / d_sl2) + j) * d_sl2;
                            }
                            else if (d_sl2 != 1) slqd = Convert.ToInt16(Math.Ceiling((d_sl1 - 1) / d_sl2)) * d_sl2;
                            else slqd = d_sl1;
                        }
                        else slqd = Convert.ToInt16(Math.Ceiling((d_sl1 - 1) / d_sl2)) * d_sl2;
                        sl = Convert.ToDecimal(slqd);
                    }
                    else sl = Convert.ToDecimal(r["soluong"].ToString());
                    sql = str + " and a.tondau+a.slnhap-a.slxuat>0 and a.makho=" + int.Parse(r["makho"].ToString()) + " and t.manguon=" + int.Parse(r["manguon"].ToString()) + " and a.mabd=" + int.Parse(r["mabd"].ToString());
                    if (_bNhaptruocxuat) sql += " order by a.stt";
                    else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
                    dttonct = get_data(sql).Tables[0];
                    dr = dttonct.Select("true", "stt");
                    for (int i = 0; i < dr.Length; i++)
                    {
                        slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        sltx = Math.Min(sl, Math.Max(0, slton));
                        if (sltx > 0)
                        {
                            id = get_id(d_ngay, d_nhom, d_loai, d_phieu, d_makhoa, d_mmyy, d_makho, "d_bucstt");
                            sttx = dongia * sltx;
                            updrec_tonkhoct(dttonct, int.Parse(r["makho"].ToString()), decimal.Parse(dr[i]["stt"].ToString()), sltx, sttx, "+");
                            upd_thucbucstt(d_mmyy, id, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(r["mabd"].ToString()), sltx, decimal.Parse(dr[i]["giaban"].ToString()));
                            upd_tonkhoct_thucbucstt(insert, d_mmyy, d_makp, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(r["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()));
                            dttonct.AcceptChanges();
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                    if (id != 0 && sl > 0) upd_treo(id, 0, int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "thucbucstt", int.Parse(r["makho"].ToString()), 0);
                }
            }
        }

        public string get_ngayylenh(string tu, string den, int i_loai, string file1, string file2, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, bool bNhomin_mabd, string s_doc, bool doc)
        {
            sql = "select distinct to_char(e.ngay,'dd/mm/yyyy') ngay,f.ten nhomphieu,g.ten loaiphieu  from xxx." + file1 + " a, xxx." + file2 + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d,xxx.d_duyet e," + user + ".d_dmphieu f," + user + ".d_loaiphieu g";
            sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and a.idduyet=e.id and e.loai=f.id and e.phieu=g.id ";
            if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
            if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
            if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
            if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
            if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
            else if (buhaophi) sql += " and b.tutruc=1";
            if (s_doc != "")
            {
                if (doc)
                {
                    if (bNhomin_mabd) sql += " and c.nhomin in (" + s_doc + ")";
                    else sql += " and d.nhomin in (" + s_doc + ")";
                }
                else
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
            }
            if (i_loai == 2 && !buhaophi)
            {
                sql += " union select distinct to_char(e.ngay,'dd/mm/yyyy') ngay,f.ten nhomphieu,g.ten loaiphieu from xxx.d_dutrull a,xxx.d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d,xxx.d_duyet e," + user + ".d_dmphieu f," + user + ".d_loaiphieu g";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and a.idduyet=e.id and e.loai=f.id and e.phieu=g.id and b.tutruc=1 ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (doc)
                    {
                        if (bNhomin_mabd) sql += " and c.nhomin in (" + s_doc + ")";
                        else sql += " and d.nhomin in (" + s_doc + ")";
                    }
                    else
                    {
                        if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                        else sql += " and d.nhomin not in (" + s_doc + ")";
                    }
                }
            }
            sql += " order by ngay,nhomphieu,loaiphieu";
            string t = "", ngay = "", phieu = "";
            foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
            {
                ngay = r["ngay"].ToString();
                phieu = r["loaiphieu"].ToString();
                t += ngay + "(" + phieu + "),";
            }
            return t;
        }

        public string get_ngayduyet(string tu, string den, int i_loai, string file1, string file2,
            string s_dk, string s_madt, string s_makho, string s_manguon, bool buhaophi, bool bNhomin_mabd,
            string s_doc, bool doc)
        {
            sql = "select distinct to_char(a.ngay,'dd/mm/yyyy') as ngay,f.ten as nhomphieu,g.ten as loaiphieu,x.hoten ";
            sql += " from xxx." + file1 + " a, xxx." + file2 + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
            sql += "," + user + ".d_dmphieu f," + user + ".d_loaiphieu g,xxx.d_theodoi t," + user + ".d_dlogin x";
            sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and a.loai=f.id and a.phieu=g.id and b.sttt=t.id";
            sql += " and a.userid=x.id ";
            if (s_dk != "") sql += s_dk;
            //if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
            if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
            if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
            if (s_doc != "")
            {
                if (doc)
                {
                    if (bNhomin_mabd) sql += " and c.nhomin in (" + s_doc + ")";
                    else sql += " and d.nhomin in (" + s_doc + ")";
                }
                else
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
            }
            sql += " order by ngay,nhomphieu,loaiphieu,hoten";
            string t = "", ngay = "";
            DataTable tmp = get_thuoc(tu, den, sql).Tables[0];
            foreach (DataRow r in tmp.Rows)
            {
                ngay = r["ngay"].ToString();
                t += ngay + ",";
            }
            if (tmp.Rows.Count > 0) t += "^" + tmp.Rows[0]["hoten"].ToString();
            return t;
        }

        public DataSet get_slyeucau_cu(string tu, string den, DataSet ds, DataTable dt, DataTable dtkho, int i_loai, string file1, string file2, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, DataTable dtdt, bool bChitiet, bool bNhomin_mabd, string s_doc, int nhom, string s_ngayylenh)
        {
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            ds.Clear();
            string s = "", s_id = "";
            bool bucstt_tronso = bBucstt_tronso(nhom);
            if (bucstt_tronso && i_loai == 2)
            {
                s = s_idduyet.Replace("b.", "a.");
                sql = " select a.id,a.stt,a.makho,a.mabd,a.slyeucau as soluong from  " + user + ".d_treoduyet a," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.mabd=c.id and c.manhom=d.id ";
                if (s != "") sql += " and (" + s + ")";
                if (s_madt != "") sql += " and a.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and a.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and a.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                s = "";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                    if (r1 != null)
                    {
                        s += "(a.id=" + decimal.Parse(r["id"].ToString());
                        if (r["stt"].ToString() != "")
                            s += " and b.stt=" + int.Parse(r["stt"].ToString().Trim());
                        s += ") or ";
                        sql = "mabd=" + int.Parse(r["mabd"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString());
                        r4 = getrowbyid(ds.Tables[0], sql);
                        if (r4 == null)
                        {
                            r2 = ds.Tables[0].NewRow();
                            r2["makho"] = r["makho"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["stt"] = r1["stt"].ToString();
                            r2["manhom"] = r1["manhom"].ToString();
                            r2["tennhom"] = r1["tennhom"].ToString();
                            r2["tenhang"] = r1["tenhang"].ToString();
                            r2["slyeucau"] = r["soluong"].ToString();
                            r2["dongia"] = 0;
                            r2["soluong"] = 0;
                            if (bChitiet) foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                            if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = ds.Tables[0].Select(sql);
                            if (dr.Length > 0) dr[0]["slyeucau"] = decimal.Parse(dr[0]["slyeucau"].ToString()) + decimal.Parse(r["soluong"].ToString());
                        }
                    }
                }
            }
            if (s != "") s = s.Substring(0, s.Length - 4);
            if (file1 == "d_xtutrucll" && file2 == "d_xtutrucct")
            {

                sql = "select b.makho,b.mabd,sum(b.slyeucau) as soluong,f.handung,f.losx from xxx." + file1 + " a,xxx." + file2 + " b,";//gam 10-03-2011 bỏ sum(slyeucau) thành slyeucau
                sql += user + ".d_dmbd c," + user + ".d_dmnhom d,xxx.d_thucxuat e,xxx.d_theodoi f  ";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and a.id=e.id and b.stt=e.stt and e.sttt=f.id ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s != "") sql += " and not (" + s + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
                else if (buhaophi) sql += " and b.tutruc=1";


            }
            else
            {
                sql = "select b.makho,b.mabd,sum(b.slyeucau) as soluong,'    ' as handung,' ' as losx ";
                sql += " from xxx." + file1 + " a,xxx." + file2 + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s != "") sql += " and not (" + s + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
                else if (buhaophi) sql += " and b.tutruc=1";
            }
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                else sql += " and d.nhomin not in (" + s_doc + ")";
            }
            if (file1 == "d_xtutrucll") sql += " and b.idvpkhoa=0";
            sql += " group by b.makho,b.mabd";
            //if (file1 == "d_xtutrucll" && file2 == "d_xtutrucct") sql += ",b.slyeucau";
            if (file1 == "d_xtutrucll" && file2 == "d_xtutrucct") sql += ",f.handung,f.losx";
            if (i_loai == 2 && !buhaophi && file1 == "d_xtutrucll" && file2 == "d_xtutrucct")
            {
                sql += " union all select b.makho,b.mabd,sum(b.slyeucau) as soluong,to_char('0') as handung,to_char('0') as losx ";
                sql += "from  xxx.d_dutrull a,xxx.d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.tutruc=1 ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                sql += " group by b.makho,b.mabd ";
            }
            else if (i_loai == 2 && !buhaophi && file1 != "d_xtutrucll" && file2 != "d_xtutrucct")
            {
                sql += " union all select b.makho,b.mabd,sum(b.slyeucau) as soluong ";
                sql += "from  xxx.d_dutrull a,xxx.d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.tutruc=1 ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                sql += " group by b.makho,b.mabd";
            }
            DataSet ads = get_thuoc(s_ngayylenh, den, sql);
            foreach (DataRow r in ads.Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    sql = "mabd=" + int.Parse(r["mabd"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString());
                    r4 = getrowbyid(ds.Tables[0], sql);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["slyeucau"] = r["soluong"].ToString();
                        r2["dongia"] = 0;
                        r2["soluong"] = 0;
                        if (ads.Tables[0].Columns.Count == 5)
                        {
                            r2["handung"] = r["handung"].ToString();
                            r2["losx"] = r["losx"].ToString();
                        }

                        if (bChitiet) foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(sql);
                        if (dr.Length > 0) dr[0]["slyeucau"] = decimal.Parse(dr[0]["slyeucau"].ToString()) + decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return ds;
        }
        public DataSet get_slyeucau(string tu, string den, DataSet ds, DataTable dt, DataTable dtkho, int i_loai, string file1, string file2, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, DataTable dtdt, bool bChitiet, bool bNhomin_mabd, string s_doc, int nhom, string s_ngayylenh, string s_id)
        {
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            ds.Clear();
            string s = "";
            bool bucstt_tronso = bBucstt_tronso(nhom);
            if (bucstt_tronso && i_loai == 2)
            {
                s = s_idduyet.Replace("b.", "a.");
                sql = " select a.id,a.stt,a.makho,a.mabd,a.slyeucau as soluong from  " + user + ".d_treoduyet a," + user +
                    ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.mabd=c.id and c.manhom=d.id ";
                if (s != "") sql += " and (" + s + ")";
                if (s_madt != "") sql += " and a.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and a.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and a.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                s = "";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                    if (r1 != null)
                    {
                        s += "(a.id=" + decimal.Parse(r["id"].ToString());
                        if (r["stt"].ToString() != "")
                            s += " and b.stt=" + int.Parse(r["stt"].ToString().Trim());
                        s += ") or ";
                        sql = "mabd=" + int.Parse(r["mabd"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString());
                        r4 = getrowbyid(ds.Tables[0], sql);
                        if (r4 == null)
                        {
                            r2 = ds.Tables[0].NewRow();
                            r2["makho"] = r["makho"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["stt"] = r1["stt"].ToString();
                            r2["manhom"] = r1["manhom"].ToString();
                            r2["tennhom"] = r1["tennhom"].ToString();
                            r2["manhom1"] = r1["manhom1"].ToString();
                            r2["tennhom1"] = r1["tennhom1"].ToString();
                            r2["tenhang"] = r1["tenhang"].ToString();
                            r2["slyeucau"] = r["soluong"].ToString();
                            r2["dongia"] = 0;
                            r2["soluong"] = 0;
                            if (bChitiet) foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                            if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = ds.Tables[0].Select(sql);
                            if (dr.Length > 0) dr[0]["slyeucau"] = decimal.Parse(dr[0]["slyeucau"].ToString()) + decimal.Parse(r["soluong"].ToString());
                        }
                    }
                }
            }
            if (s != "") s = s.Substring(0, s.Length - 4);
            if (file1 == "d_xtutrucll" && file2 == "d_xtutrucct")
            {
                //gam 05/09/2011
                sql = "select b.makho,b.mabd,sum(b.slyeucau) as soluong,to_char('0') as handung,to_char('0') as losx from xxx." + file1 + " a,xxx." + file2 + " b,";//gam 10-03-2011 bỏ sum(slyeucau) thành slyeucau
                sql += user + ".d_dmbd c," + user + ".d_dmnhom d  ";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s != "") sql += " and not (" + s + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
                else if (buhaophi) sql += " and b.tutruc=1";
                //sql = "select b.makho,b.mabd,sum(b.soluong) as soluong,f.handung,f.losx from xxx." + file1 + " a,xxx.d_thucxuat b,";//gam 10-03-2011 bỏ sum(slyeucau) thành slyeucau
                //sql += user + ".d_dmbd c," + user + ".d_dmnhom d,xxx.d_theodoi f  ";
                //sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.sttt=f.id ";
                //if (s_id != "") sql += " and "+ s_id + "";
                //if (s != "") sql += " and not (" + s + ")";
                //if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                //if (s_manguon != "") sql += " and f.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                //if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                ////if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
                ////else if (buhaophi) sql += " and b.tutruc=1";

                //end gam
            }
            else
            {
                sql = "select b.makho,b.mabd,sum(b.slyeucau) as soluong,'    ' as handung,' ' as losx ";
                sql += " from xxx." + file1 + " a,xxx." + file2 + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s != "") sql += " and not (" + s + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
                else if (buhaophi) sql += " and b.tutruc=1";
            }
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                else sql += " and d.nhomin not in (" + s_doc + ")";
            }
            sql += " group by b.makho,b.mabd";
            //if (file1 == "d_xtutrucll" && file2 == "d_xtutrucct") sql += ",f.handung,f.losx";
            if (i_loai == 2 && !buhaophi && file1 == "d_xtutrucll" && file2 == "d_xtutrucct")
            {
                sql += " union all select b.makho,b.mabd,sum(b.slyeucau) as soluong,to_char('0') as handung,to_char('0') as losx ";
                sql += "from  xxx.d_dutrull a,xxx.d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.tutruc=1 ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                sql += " group by b.makho,b.mabd ";
            }
            else if (i_loai == 2 && !buhaophi && file1 != "d_xtutrucll" && file2 != "d_xtutrucct")
            {
                sql += " union all select b.makho,b.mabd,sum(b.slyeucau) as soluong ";
                sql += "from  xxx.d_dutrull a,xxx.d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.tutruc=1 ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                sql += " group by b.makho,b.mabd";
            }
            DataSet ads = get_thuoc(s_ngayylenh, den, sql);
            foreach (DataRow r in ads.Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    sql = "mabd=" + int.Parse(r["mabd"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString());
                    r4 = getrowbyid(ds.Tables[0], sql);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["manhom1"] = r1["manhom1"].ToString();
                        r2["tennhom1"] = r1["tennhom1"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["slyeucau"] = r["soluong"].ToString();
                        r2["dongia"] = 0;
                        r2["soluong"] = 0;
                        if (ads.Tables[0].Columns.Count == 5)
                        {
                            r2["handung"] = r["handung"].ToString();
                            r2["losx"] = r["losx"].ToString();
                        }

                        if (bChitiet) foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(sql);
                        if (dr.Length > 0) dr[0]["slyeucau"] = decimal.Parse(dr[0]["slyeucau"].ToString()) + decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return ds;
        }
        //khuyen khoa 11/01/2014  public DataSet get_slyeucau(string tu, string den, DataSet ds, DataTable dt, DataTable dtkho, int i_loai, string file1, string file2, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, DataTable dtdt, bool bChitiet, bool bNhomin_mabd, string s_doc, int nhom, string s_ngayylenh, string s_id)
        //khuyen them 11/01/2014 them tham so string s_nhomin
        public DataSet get_slyeucau(string tu, string den, DataSet ds, DataTable dt, DataTable dtkho, int i_loai, string file1, string file2, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, DataTable dtdt, bool bChitiet, bool bNhomin_mabd, string s_doc, int nhom, string s_ngayylenh, string s_id, string s_nhomin)
        {
            //
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            ds.Clear();
            string s = "";
            bool bucstt_tronso = bBucstt_tronso(nhom);
            if (bucstt_tronso && i_loai == 2)
            {
                s = s_idduyet.Replace("b.", "a.");
                sql = " select a.id,a.stt,a.makho,a.mabd,a.slyeucau as soluong from  " + user + ".d_treoduyet a," + user +
                    ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.mabd=c.id and c.manhom=d.id ";
                if (s != "") sql += " and (" + s + ")";
                if (s_madt != "") sql += " and a.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and a.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and a.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                //khuyen10/01/2014
                if (s_nhomin != "")
                {
                    sql += " and d.nhomin in (" + s_nhomin.Substring(0, s_nhomin.Length - 1) + ")";
                }
                //
                s = "";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                    if (r1 != null)
                    {
                        s += "(a.id=" + decimal.Parse(r["id"].ToString());
                        if (r["stt"].ToString() != "")
                            s += " and b.stt=" + int.Parse(r["stt"].ToString().Trim());
                        s += ") or ";
                        sql = "mabd=" + int.Parse(r["mabd"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString());
                        r4 = getrowbyid(ds.Tables[0], sql);
                        if (r4 == null)
                        {
                            r2 = ds.Tables[0].NewRow();
                            r2["makho"] = r["makho"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["stt"] = r1["stt"].ToString();
                            r2["manhom"] = r1["manhom"].ToString();
                            r2["tennhom"] = r1["tennhom"].ToString();
                            r2["manhom1"] = r1["manhom1"].ToString();
                            r2["tennhom1"] = r1["tennhom1"].ToString();
                            r2["tenhang"] = r1["tenhang"].ToString();
                            r2["slyeucau"] = r["soluong"].ToString();
                            r2["dongia"] = 0;
                            r2["soluong"] = 0;
                            if (bChitiet) foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                            if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = ds.Tables[0].Select(sql);
                            if (dr.Length > 0) dr[0]["slyeucau"] = decimal.Parse(dr[0]["slyeucau"].ToString()) + decimal.Parse(r["soluong"].ToString());
                        }
                    }
                }
            }
            if (s != "") s = s.Substring(0, s.Length - 4);
            if (file1 == "d_xtutrucll" && file2 == "d_xtutrucct")
            {
                //gam 05/09/2011
                sql = "select b.makho,b.mabd,sum(b.slyeucau) as soluong,to_char('0') as handung,to_char('0') as losx from xxx." + file1 + " a,xxx." + file2 + " b,";//gam 10-03-2011 bỏ sum(slyeucau) thành slyeucau
                sql += user + ".d_dmbd c," + user + ".d_dmnhom d  ";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s != "") sql += " and not (" + s + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
                else if (buhaophi) sql += " and b.tutruc=1";
                //sql = "select b.makho,b.mabd,sum(b.soluong) as soluong,f.handung,f.losx from xxx." + file1 + " a,xxx.d_thucxuat b,";//gam 10-03-2011 bỏ sum(slyeucau) thành slyeucau
                //sql += user + ".d_dmbd c," + user + ".d_dmnhom d,xxx.d_theodoi f  ";
                //sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.sttt=f.id ";
                //if (s_id != "") sql += " and "+ s_id + "";
                //if (s != "") sql += " and not (" + s + ")";
                //if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                //if (s_manguon != "") sql += " and f.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                //if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                ////if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
                ////else if (buhaophi) sql += " and b.tutruc=1";

                //end gam
            }
            else
            {
                sql = "select b.makho,b.mabd,sum(b.slyeucau) as soluong,'    ' as handung,' ' as losx ";
                sql += " from xxx." + file1 + " a,xxx." + file2 + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s != "") sql += " and not (" + s + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
                else if (buhaophi) sql += " and b.tutruc=1";
            }
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                else sql += " and d.nhomin not in (" + s_doc + ")";
            }
            //khuyen10/01/2014
            if (s_nhomin != "")
            {
                sql += " and d.nhomin in (" + s_nhomin.Substring(0, s_nhomin.Length - 1) + ")";
            }
            //
            sql += " group by b.makho,b.mabd";
            //if (file1 == "d_xtutrucll" && file2 == "d_xtutrucct") sql += ",f.handung,f.losx";
            if (i_loai == 2 && !buhaophi && file1 == "d_xtutrucll" && file2 == "d_xtutrucct")
            {
                sql += " union all select b.makho,b.mabd,sum(b.slyeucau) as soluong,to_char('0') as handung,to_char('0') as losx ";
                sql += "from  xxx.d_dutrull a,xxx.d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.tutruc=1 ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                //khuyen/01/2014
                if (s_nhomin != "")
                {
                    sql += " and d.nhomin in (" + s_nhomin.Substring(0, s_nhomin.Length - 1) + ")";
                }
                //
                sql += " group by b.makho,b.mabd ";
            }
            else if (i_loai == 2 && !buhaophi && file1 != "d_xtutrucll" && file2 != "d_xtutrucct")
            {
                sql += " union all select b.makho,b.mabd,sum(b.slyeucau) as soluong ";
                sql += "from  xxx.d_dutrull a,xxx.d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.tutruc=1 ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                //khuyen10/01/2014
                if (s_nhomin != "")
                {
                    sql += " and d.nhomin in (" + s_nhomin.Substring(0, s_nhomin.Length - 1) + ")";
                }
                //
                sql += " group by b.makho,b.mabd";
            }
            DataSet ads = get_thuoc(s_ngayylenh, den, sql);
            foreach (DataRow r in ads.Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    sql = "mabd=" + int.Parse(r["mabd"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString());
                    r4 = getrowbyid(ds.Tables[0], sql);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["manhom1"] = r1["manhom1"].ToString();
                        r2["tennhom1"] = r1["tennhom1"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["slyeucau"] = r["soluong"].ToString();
                        r2["dongia"] = 0;
                        r2["soluong"] = 0;
                        if (ads.Tables[0].Columns.Count == 5)
                        {
                            r2["handung"] = r["handung"].ToString();
                            r2["losx"] = r["losx"].ToString();
                        }

                        if (bChitiet) foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(sql);
                        if (dr.Length > 0) dr[0]["slyeucau"] = decimal.Parse(dr[0]["slyeucau"].ToString()) + decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return ds;
        }


        public DataSet get_slyeucau(string mmyy, DataSet ds, DataTable dt, DataTable dtkho, int i_loai, string file1, string file2, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, DataTable dtdt, bool bChitiet, bool bNhomin_mabd, string s_doc, string s_ngayylenh, string s_ngayinphieu)
        {
            string xxx = user + mmyy;
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            ds.Clear();
            sql = "select b.makho,b.mabd,sum(b.slyeucau) as soluong from xxx." + file1 + " a,xxx." + file2 + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
            sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and (" + s_idduyet + ")";
            if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
            if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
            if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
            if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
            else if (buhaophi) sql += " and b.tutruc=1";
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                else sql += " and d.nhomin not in (" + s_doc + ")";
            }
            if (file1 == "d_xtutrucll") sql += " and b.idvpkhoa=0";
            sql += " group by b.makho,b.mabd";
            if (i_loai == 2 && !buhaophi)
            {
                sql += " union all select b.makho,b.mabd,sum(b.slyeucau) as soluong from xxx.d_dutrull a, xxx.d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.tutruc=1 and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                sql += " group by b.makho,b.mabd";
            }
            foreach (DataRow r in get_data_mmyy(sql, s_ngayylenh, s_ngayinphieu, true).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    sql = "mabd=" + int.Parse(r["mabd"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString());
                    r4 = getrowbyid(ds.Tables[0], sql);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["slyeucau"] = r["soluong"].ToString();
                        r2["dongia"] = 0;
                        r2["soluong"] = 0;
                        if (bChitiet) foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(sql);
                        if (dr.Length > 0) dr[0]["slyeucau"] = decimal.Parse(dr[0]["slyeucau"].ToString()) + decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return ds;
        }
        public DataSet get_slyeucau_cu(string tu, string den, DataSet ds, DataTable dt, DataTable dtkho, int i_loai, string file1, string file2, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, DataTable dtdt, bool bChitiet, bool bNhomin_mabd, string s_doc, int nhom)
        {
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            ds.Clear();
            string s = "";
            bool bucstt_tronso = bBucstt_tronso(nhom);
            if (bucstt_tronso && i_loai == 2)
            {
                s = s_idduyet.Replace("b.", "a.");
                sql = " select a.id,a.stt,a.makho,a.mabd,a.slyeucau as soluong from  " + user + ".d_treoduyet a," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.mabd=c.id and c.manhom=d.id ";
                if (s != "") sql += " and (" + s + ")";
                if (s_madt != "") sql += " and a.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and a.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and a.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                s = "";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                    if (r1 != null)
                    {
                        s += "(a.id=" + decimal.Parse(r["id"].ToString());
                        if (r["stt"].ToString() != "")
                            s += " and b.stt=" + int.Parse(r["stt"].ToString().Trim());
                        s += ") or ";
                        sql = "mabd=" + int.Parse(r["mabd"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString());
                        r4 = getrowbyid(ds.Tables[0], sql);
                        if (r4 == null)
                        {
                            r2 = ds.Tables[0].NewRow();
                            r2["makho"] = r["makho"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["stt"] = r1["stt"].ToString();
                            r2["manhom"] = r1["manhom"].ToString();
                            r2["tennhom"] = r1["tennhom"].ToString();
                            r2["tenhang"] = r1["tenhang"].ToString();
                            r2["slyeucau"] = r["soluong"].ToString();
                            r2["dongia"] = 0;
                            r2["soluong"] = 0;
                            if (bChitiet) foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                            if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = ds.Tables[0].Select(sql);
                            if (dr.Length > 0) dr[0]["slyeucau"] = decimal.Parse(dr[0]["slyeucau"].ToString()) + decimal.Parse(r["soluong"].ToString());
                        }
                    }
                }
            }
            if (s != "") s = s.Substring(0, s.Length - 4);
            sql = "select b.makho,b.mabd,sum(b.slyeucau) as soluong from xxx." + file1 + " a,xxx." + file2 + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
            sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id ";
            if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
            if (s != "") sql += " and not (" + s + ")";
            if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
            if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
            if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
            if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
            else if (buhaophi) sql += " and b.tutruc=1";
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                else sql += " and d.nhomin not in (" + s_doc + ")";
            }
            if (file1 == "d_xtutrucll") sql += " and b.idvpkhoa=0";
            sql += " group by b.makho,b.mabd";
            if (i_loai == 2 && !buhaophi)
            {
                sql += " union all select b.makho,b.mabd,sum(b.slyeucau) as soluong from  xxx.d_dutrull a,xxx.d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.tutruc=1 ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                sql += " group by b.makho,b.mabd";
            }
            foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    sql = "mabd=" + int.Parse(r["mabd"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString());
                    r4 = getrowbyid(ds.Tables[0], sql);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["slyeucau"] = r["soluong"].ToString();
                        r2["dongia"] = 0;
                        r2["soluong"] = 0;
                        if (bChitiet) foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(sql);
                        if (dr.Length > 0) dr[0]["slyeucau"] = decimal.Parse(dr[0]["slyeucau"].ToString()) + decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return ds;
        }
        public DataSet get_slyeucau_Cu(string mmyy, DataSet ds, DataTable dt, DataTable dtkho, int i_loai, string file1, string file2, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, DataTable dtdt, bool bChitiet, bool bNhomin_mabd, string s_doc)
        {
            string xxx = user + mmyy;
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            ds.Clear();
            sql = "select b.makho,b.mabd,sum(b.slyeucau) as soluong from " + xxx + "." + file1 + " a," + xxx + "." + file2 + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
            sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and (" + s_idduyet + ")";
            if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
            if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
            if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
            if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
            else if (buhaophi) sql += " and b.tutruc=1";
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                else sql += " and d.nhomin not in (" + s_doc + ")";
            }
            if (file1 == "d_xtutrucll") sql += " and b.idvpkhoa=0";
            sql += " group by b.makho,b.mabd";
            if (i_loai == 2 && !buhaophi)
            {
                sql += " union all select b.makho,b.mabd,sum(b.slyeucau) as soluong from " + xxx + ".d_dutrull a," + xxx + ".d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.tutruc=1 and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                    else sql += " and d.nhomin not in (" + s_doc + ")";
                }
                sql += " group by b.makho,b.mabd";
            }
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    sql = "mabd=" + int.Parse(r["mabd"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString());
                    r4 = getrowbyid(ds.Tables[0], sql);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["slyeucau"] = r["soluong"].ToString();
                        r2["dongia"] = 0;
                        r2["soluong"] = 0;
                        if (bChitiet) foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(sql);
                        if (dr.Length > 0) dr[0]["slyeucau"] = decimal.Parse(dr[0]["slyeucau"].ToString()) + decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return ds;
        }

        public DataSet get_slyeucau_doc(string tu, string den, DataSet ds, DataTable dt, DataTable dtkho, int i_loai, string file1, string file2, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, DataTable dtdt, bool bChitiet, bool bNhomin_mabd, string s_doc)
        {
            sql = "select a.id,b.makho,b.mabd,b.slyeucau as soluong from xxx." + file1 + " a,xxx." + file2 + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
            sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id ";
            if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
            if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
            if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
            if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
            if (i_loai == 4 || i_loai == 1) sql += " and b.tutruc=0";
            else if (buhaophi) sql += " and b.tutruc=1";
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin in (" + s_doc + ")";
                else sql += " and d.nhomin in (" + s_doc + ")";
            }
            if (file1 == "d_xtutrucll") sql += " and b.idvpkhoa=0";
            if (i_loai == 2 && !buhaophi)
            {
                sql += " union all select a.id,b.makho,b.mabd,b.slyeucau as soluong from  xxx.d_dutrull a,xxx.d_dutruct b," + user + ".d_dmbd c," + user + ".d_dmnhom d";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and b.tutruc=1 ";
                if (s_idduyet != "") sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and b.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and c.nhomin in (" + s_doc + ")";
                    else sql += " and d.nhomin in (" + s_doc + ")";
                }
            }

            return get_thuoc(tu, den, sql);
        }

        //public DataSet get_slxuat_doc(DataSet dsxml, string tu, string den, string s_mmyy, int i_nhom, int i_loai, int i_phieu, int i_makp, string s_madt, string s_makho, string s_manguon, bool buhaophi, string s_doc, bool bNhomin_mabd, string s_nguoilinh, string cont, DataTable tmpyc)
        //{
        //    bool incstt = bIntheocstt(i_nhom), bslyeucau = bSLYeucau(i_nhom);
        //    dichso.numbertotext doiso = new dichso.numbertotext();//binh
        //    string xxx = user + s_mmyy, for_ngay = f_ngay, tenfile = (i_loai == 2 || buhaophi) ? "d_bucstt" : "d_xuatsdct";
        //    sql = " select a.idduyet,e.stt,b.makho,h.ten as tenkho,b.mabd,b.soluong, c.ten,c.tenhc,c.dang,c.hamluong,";
        //    sql += " e.nhomin as manhom, f.ten as tennhom,d.mabn, d.hoten, d.namsinh,";
        //    sql += " case when d.phai is null then 0 else d.phai end as phai, c.ma,t.giamua as dongia,g.ten as tenhang,";
        //    sql += " x.chandoan,x.maicd,ff.id as manhom1,ff.ten as tennhom1 ";
        //    sql += " from " + xxx + ".d_xuatsdll a inner join " + xxx + "." + tenfile + " b on a.id=b.id ";
        //    sql += " inner join " + user + ".d_dmbd c on b.mabd=c.id ";
        //    sql += " left join " + user + ".btdbn d on a.mabn=d.mabn ";
        //    sql += " inner join " + user + ".d_dmnhom e on c.manhom=e.id ";
        //    if (bNhomin_mabd) sql += " inner join " + user + ".d_nhomin f on c.nhomin=f.id ";
        //    else sql += " inner join " + user + ".d_nhomin f on e.nhomin=f.id ";
        //    //gam 12/12/2011
        //    if (!bNhomin_mabd) sql += " left join " + user + ".d_nhomin ff on c.nhomin=ff.id ";//gam 28/02/2012 sua inner join =>left join
        //    else sql += " inner join " + user + ".d_nhomin ff on e.nhomin=ff.id ";
        //    //end gam
        //    sql += " inner join " + user + ".d_dmhang g on c.mahang=g.id ";
        //    sql += " inner join " + user + ".d_dmkho h on b.makho=h.id ";
        //    sql += " inner join " + xxx + ".d_theodoi t on b.sttt=t.id ";
        //    sql += " left join " + user + ".nhapkhoa x on a.idkhoa=x.id ";
        //    sql += " where a.nhom=" + i_nhom + " and a.loai=" + i_loai;
        //    if (incstt && i_loai == 2) sql += " and a.makp=" + i_makp;
        //    else sql += " and a.makhoa=" + i_makp;
        //    if (cont != "") sql += " and (" + cont + ")";
        //    else sql += " and a.phieu=" + i_phieu + " and a.ngay between to_date('" + tu + "','" + for_ngay + "') and to_date('" + den + "','" + for_ngay + "')";
        //    if (s_madt != "" && tenfile == "d_xuatsdct") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
        //    if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
        //    if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
        //    if (s_doc != "")
        //    {
        //        if (bNhomin_mabd) sql += " and c.nhomin in (" + s_doc + ")";
        //        else sql += " and e.nhomin in (" + s_doc + ")";

        //    }
        //    sql += " order by e.stt,b.makho,b.mabd";
        //    dsxml.Clear();
        //    //dsxml.Tables[0].Columns.Add("slyeucau", typeof(decimal));
        //    DataRow[] dr = get_data(sql).Tables[0].Select("soluong>0", "ten");//stt,ten
        //    DataRow r, r2;
        //    DataTable tmp;
        //    string s_stt = "", tmp_sophieu = "0", tmp_lanin = "0";
        //    s_makho = "";
        //    for (int i = 0; i < dr.Length; i++)
        //        if (s_makho.IndexOf(dr[i]["makho"].ToString().Trim() + ",") == -1) s_makho += dr[i]["makho"].ToString().Trim() + ",";
        //    for (int i = 0; i < dr.Length; i++)
        //    {
        //        r = dsxml.Tables[0].NewRow();
        //        r["makho"] = dr[i]["makho"].ToString();
        //        r["mabd"] = dr[i]["mabd"].ToString();
        //        r["ma"] = dr[i]["ma"].ToString();
        //        r["ten"] = dr[i]["ten"].ToString().Trim() + " " + dr[i]["hamluong"].ToString();
        //        r["dang"] = dr[i]["dang"].ToString();
        //        r["tenhc"] = dr[i]["tenhc"].ToString();
        //        r["stt"] = dr[i]["stt"].ToString();
        //        r["mabn"] = dr[i]["mabn"].ToString();
        //        r["hoten"] = dr[i]["hoten"].ToString();
        //        r["namsinh"] = dr[i]["namsinh"].ToString();
        //        r["phai"] = dr[i]["phai"].ToString();
        //        r["manhom"] = dr[i]["manhom"].ToString();
        //        r["tennhom"] = dr[i]["tennhom"].ToString();
        //        //gam 12/12/2011
        //        r["manhom1"] = dr[i]["manhom1"].ToString();
        //        r["tennhom1"] = dr[i]["tennhom1"].ToString();
        //        //end gam
        //        r["tenhang"] = dr[i]["tenhang"].ToString();
        //        r["soluong"] = dr[i]["soluong"].ToString();
        //        r["tenkho"] = dr[i]["tenkho"].ToString();
        //        r["dongia"] = dr[i]["dongia"].ToString();
        //        r["sophieu"] = tmp_sophieu;
        //        r["lanin"] = tmp_lanin;
        //        r["slyeucau"] = 0;
        //        r["chandoan"] = dr[i]["chandoan"].ToString();
        //        r["maicd"] = dr[i]["maicd"].ToString();
        //        if (bslyeucau)
        //        {
        //            r2 = getrowbyid(tmpyc, "id=" + decimal.Parse(dr[i]["idduyet"].ToString()) + " and makho=" + int.Parse(dr[i]["makho"].ToString()) + " and mabd=" + decimal.Parse(dr[i]["mabd"].ToString()));
        //            if (r2 != null)
        //            {
        //                r["slyeucau"] = r2["soluong"].ToString();
        //                r2["soluong"] = decimal.Parse(r2["soluong"].ToString()) - decimal.Parse(dr[i]["soluong"].ToString());
        //                tmpyc.AcceptChanges();
        //            }
        //        }
        //        r["dichso"] = doiso.doithapphan(dr[i]["soluong"].ToString()).Trim();//binh
        //        if (s_stt != dr[i]["stt"].ToString().Trim())
        //        {
        //            foreach (DataRow r1 in get_data("select id from " + user + ".d_dmkho where id in (" + s_makho.Substring(0, s_makho.Length - 1) + ")").Tables[0].Rows)
        //            {
        //                if (bSophieu_nam(i_nhom))
        //                {
        //                    upd_sophieu_yy(s_mmyy.Substring(2, 2), i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon, s_nguoilinh);
        //                    tmp = get_sophieu_yy(s_mmyy.Substring(2, 2), i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon);
        //                }
        //                else
        //                {
        //                    upd_sophieu(s_mmyy, i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon, s_nguoilinh);
        //                    tmp = get_sophieu(s_mmyy, i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon);
        //                }
        //                if (tmp.Rows.Count > 0)
        //                {
        //                    r["sophieu"] = tmp.Rows[0]["so"].ToString();
        //                    r["lanin"] = tmp.Rows[0]["lanin"].ToString();
        //                    r["nguoilinh"] = tmp.Rows[0]["nguoilinh"].ToString();
        //                    tmp_sophieu = tmp.Rows[0]["so"].ToString();
        //                    tmp_lanin = tmp.Rows[0]["lanin"].ToString();
        //                }
        //            }
        //            s_stt = dr[i]["stt"].ToString().Trim();
        //        }
        //        dsxml.Tables[0].Rows.Add(r);
        //    }
        //    return dsxml;
        //}
        public DataSet get_slxuat_doc(DataSet dsxml, string tu, string den, string s_mmyy, int i_nhom, int i_loai, int i_phieu, int i_makp, string s_madt, string s_makho, string s_manguon, bool buhaophi, string s_doc, bool bNhomin_mabd, string s_nguoilinh, string cont, DataTable tmpyc)
        {
            bool incstt = bIntheocstt(i_nhom), bslyeucau = bSLYeucau(i_nhom);
            dichso.numbertotext doiso = new dichso.numbertotext();//binh
            string xxx = user + s_mmyy, for_ngay = f_ngay, tenfile = (i_loai == 2 || buhaophi) ? "d_bucstt" : "d_xuatsdct";
            //khuyen khoa 08/01/2014  sql = " select a.idduyet,e.stt,b.makho,h.ten as tenkho,b.mabd,b.soluong, c.ten,c.tenhc,c.dang,c.hamluong,";
            //khuyen them 08/01/14 them distinct
            sql = " select distinct a.idduyet,e.stt,b.makho,h.ten as tenkho,b.mabd,b.soluong, c.ten,c.tenhc,c.dang,c.hamluong,";
            //
            sql += " e.nhomin as manhom, f.ten as tennhom,d.mabn, d.hoten, d.namsinh,";
            sql += " case when d.phai is null then 0 else d.phai end as phai, c.ma,t.giamua as dongia,g.ten as tenhang,";
            sql += " x.chandoan,x.maicd,ff.id as manhom1,ff.ten as tennhom1, ";
            //khuyen 08/01/14
            sql += " dt.songay as sothangdongy ,dt1.lan as slmotthang,bh.sothe,x.giuong,dtg.doituong,d.sonha,d.thon,px.tenpxa,q.tenquan,tt.tentt";
            sql += " ,to_char(bh.tungay,'dd/mm/yyyy') tungay,to_char(bh.denngay,'dd/mm/yyyy') denngay ";//11/03/14
            //
            sql += " from " + xxx + ".d_xuatsdll a inner join " + xxx + "." + tenfile + " b on a.id=b.id ";
            // khuyen them 08/01/2014
            sql += " left join " + xxx + ".d_dutrull dt on a.idduyet=dt.id ";
            sql += " left join " + xxx + ".d_dutruct dt1 on dt.id=dt1.id and b.sttduyet=dt1.stt ";
            sql += " left join medibv.bhyt bh on dt.maql=bh.maql and (bh.sudung=1 or bh.sudung is null) ";
            sql += " inner join " + user + ".doituong dtg on b.madoituong=dtg.madoituong ";
            //
            sql += " inner join " + user + ".d_dmbd c on b.mabd=c.id ";
            sql += " left join " + user + ".btdbn d on a.mabn=d.mabn ";
            sql += " inner join " + user + ".d_dmnhom e on c.manhom=e.id ";
            if (bNhomin_mabd) sql += " inner join " + user + ".d_nhomin f on c.nhomin=f.id ";
            else sql += " inner join " + user + ".d_nhomin f on e.nhomin=f.id ";
            //gam 12/12/2011
            if (!bNhomin_mabd) sql += " left join " + user + ".d_nhomin ff on c.nhomin=ff.id ";//gam 28/02/2012 sua inner join =>left join
            else sql += " inner join " + user + ".d_nhomin ff on e.nhomin=ff.id ";
            //end gam
            sql += " inner join " + user + ".d_dmhang g on c.mahang=g.id ";
            sql += " inner join " + user + ".d_dmkho h on b.makho=h.id ";
            sql += " inner join " + xxx + ".d_theodoi t on b.sttt=t.id ";
            sql += " left join " + user + ".nhapkhoa x on a.idkhoa=x.id ";
            sql += " left join " + user + ".btdpxa px on d.maphuongxa=px.maphuongxa ";
            sql += " left join " + user + ".btdquan q on d.maqu=q.maqu ";
            sql += " left join " + user + ".btdtt tt on d.matt=tt.matt ";
            sql += " where a.nhom=" + i_nhom + " and a.loai=" + i_loai;
            if (incstt && i_loai == 2) sql += " and a.makp=" + i_makp;
            else sql += " and a.makhoa=" + i_makp;
            if (cont != "") sql += " and (" + cont + ")";
            else sql += " and a.phieu=" + i_phieu + " and a.ngay between to_date('" + tu + "','" + for_ngay + "') and to_date('" + den + "','" + for_ngay + "')";
            if (s_madt != "" && tenfile == "d_xuatsdct") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
            if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
            if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin in (" + s_doc + ")";
                else sql += " and e.nhomin in (" + s_doc + ")";

            }
            sql += " order by e.stt,b.makho,b.mabd";
            dsxml.Clear();
            //dsxml.Tables[0].Columns.Add("slyeucau", typeof(decimal));
            DataRow[] dr = get_data(sql).Tables[0].Select("soluong>0", "ten");//stt,ten
            DataRow r, r2;
            DataTable tmp;
            string s_stt = "", tmp_sophieu = "0", tmp_lanin = "0";
            s_makho = "";
            for (int i = 0; i < dr.Length; i++)
                if (s_makho.IndexOf(dr[i]["makho"].ToString().Trim() + ",") == -1) s_makho += dr[i]["makho"].ToString().Trim() + ",";
            for (int i = 0; i < dr.Length; i++)
            {
                r = dsxml.Tables[0].NewRow();
                r["makho"] = dr[i]["makho"].ToString();
                r["mabd"] = dr[i]["mabd"].ToString();
                r["ma"] = dr[i]["ma"].ToString();
                r["ten"] = dr[i]["ten"].ToString().Trim() + " " + dr[i]["hamluong"].ToString();
                r["dang"] = dr[i]["dang"].ToString();
                r["tenhc"] = dr[i]["tenhc"].ToString();
                r["stt"] = dr[i]["stt"].ToString();
                r["mabn"] = dr[i]["mabn"].ToString();
                r["hoten"] = dr[i]["hoten"].ToString();
                r["namsinh"] = dr[i]["namsinh"].ToString();
                r["phai"] = dr[i]["phai"].ToString();
                r["manhom"] = dr[i]["manhom"].ToString();
                r["tennhom"] = dr[i]["tennhom"].ToString();
                //gam 12/12/2011
                r["manhom1"] = dr[i]["manhom1"].ToString();
                r["tennhom1"] = dr[i]["tennhom1"].ToString();
                //end gam
                r["tenhang"] = dr[i]["tenhang"].ToString();
                r["soluong"] = dr[i]["soluong"].ToString();
                r["tenkho"] = dr[i]["tenkho"].ToString();
                r["dongia"] = dr[i]["dongia"].ToString();
                r["sophieu"] = tmp_sophieu;
                r["lanin"] = tmp_lanin;
                r["slyeucau"] = 0;
                r["chandoan"] = dr[i]["chandoan"].ToString();
                r["maicd"] = dr[i]["maicd"].ToString();
                //khuyen 08/01/2014
                r["sothangdongy"] = dr[i]["sothangdongy"].ToString();
                r["slmotthang"] = dr[i]["slmotthang"].ToString();
                r["sothe"] = dr[i]["sothe"].ToString();
                r["giuong"] = dr[i]["giuong"].ToString();
                r["doituong"] = dr[i]["doituong"].ToString();
                r["sonha"] = dr[i]["sonha"].ToString();
                r["thon"] = dr[i]["thon"].ToString();
                r["tenpxa"] = dr[i]["tenpxa"].ToString();
                r["tenquan"] = dr[i]["tenquan"].ToString();
                r["tentt"] = dr[i]["tentt"].ToString();
                r["tungay"] = dr[i]["tungay"].ToString();//11/03/14
                r["denngay"] = dr[i]["denngay"].ToString();//11/03/14
                //

                if (bslyeucau)
                {
                    r2 = getrowbyid(tmpyc, "id=" + decimal.Parse(dr[i]["idduyet"].ToString()) + " and makho=" + int.Parse(dr[i]["makho"].ToString()) + " and mabd=" + decimal.Parse(dr[i]["mabd"].ToString()));
                    if (r2 != null)
                    {
                        r["slyeucau"] = r2["soluong"].ToString();
                        r2["soluong"] = decimal.Parse(r2["soluong"].ToString()) - decimal.Parse(dr[i]["soluong"].ToString());
                        tmpyc.AcceptChanges();
                    }
                }
                r["dichso"] = doiso.doithapphan(dr[i]["soluong"].ToString()).Trim();//binh
                if (s_stt != dr[i]["stt"].ToString().Trim())
                {
                    foreach (DataRow r1 in get_data("select id from " + user + ".d_dmkho where hide=0 and id in (" + s_makho.Substring(0, s_makho.Length - 1) + ")").Tables[0].Rows)
                    {
                        if (bSophieu_nam(i_nhom))
                        {
                            upd_sophieu_yy(s_mmyy.Substring(2, 2), i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon, s_nguoilinh);
                            tmp = get_sophieu_yy(s_mmyy.Substring(2, 2), i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon);
                        }
                        else
                        {
                            upd_sophieu(s_mmyy, i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon, s_nguoilinh);
                            tmp = get_sophieu(s_mmyy, i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon);
                        }
                        if (tmp.Rows.Count > 0)
                        {
                            r["sophieu"] = tmp.Rows[0]["so"].ToString();
                            r["lanin"] = tmp.Rows[0]["lanin"].ToString();
                            r["nguoilinh"] = tmp.Rows[0]["nguoilinh"].ToString();
                            tmp_sophieu = tmp.Rows[0]["so"].ToString();
                            tmp_lanin = tmp.Rows[0]["lanin"].ToString();
                        }
                    }
                    s_stt = dr[i]["stt"].ToString().Trim();
                }
                dsxml.Tables[0].Rows.Add(r);
            }
            return dsxml;
        }

        //khuyen khoa 11/01/2014 public DataSet get_slxuat_dongia(DataSet ds, DataTable dt, DataTable dtkho, string tu, string den, string s_mmyy, int i_nhom, int i_loai, int i_phieu, int i_makp, string s_madt, string s_makho, string s_manguon, bool buhaophi, string s_doc, bool bNhomin_mabd, DataTable dtdt, bool bChitiet, string cont)
        //khuye 11/01/2014
        public DataSet get_slxuat_dongia(DataSet ds, DataTable dt, DataTable dtkho, string tu, string den, string s_mmyy, int i_nhom, int i_loai, int i_phieu, int i_makp, string s_madt, string s_makho, string s_manguon, bool buhaophi, string s_doc, bool bNhomin_mabd, DataTable dtdt, bool bChitiet, string cont, string s_nhomin)
        //
        {
            bool incstt = bIntheocstt(i_nhom), bLinh_losx = bPhieulinh_dongia_losx_date(i_nhom);
            DataTable dtkp = get_data("select * from " + user + ".d_duockp").Tables[0];
            dichso.numbertotext doiso = new dichso.numbertotext();
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            string xxx = user + s_mmyy, for_ngay = f_ngay;
            string tenfile = (i_loai == 2 || buhaophi) ? "d_thucbucstt" : "d_thucxuat";
            sql = "select a.makp,";
            if (bChitiet && tenfile == "d_thucxuat") sql += "b.madoituong,";
            if (bLinh_losx) sql += "t.losx,t.handung,";
            else sql += "'' as losx,'' as handung,";
            sql += "b.makho,b.mabd,sum(b.soluong) as soluong,t.giamua as dongia,t.handung,t.losx,t.giaban,e.ten as tennguon from " + xxx + ".d_xuatsdll a," + xxx + "." + tenfile + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d," + xxx + ".d_theodoi t," + user + ".d_dmnguon e ";
            sql += " where a.id=b.id and b.sttt=t.id and b.mabd=c.id and c.manhom=d.id and t.manguon=e.id ";
            if (cont != "") sql += " and (" + cont + ")";
            else sql += " and a.phieu=" + i_phieu + " and a.ngay between to_date('" + tu + "','" + for_ngay + "') and to_date('" + den + "','" + for_ngay + "')";
            sql += " and a.nhom=" + i_nhom + " and a.loai=" + i_loai;
            if (i_loai == 2 && incstt) sql += " and a.makp=" + i_makp;
            else sql += " and a.makhoa=" + i_makp;
            if (s_madt != "" && tenfile == "d_thucxuat") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
            if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
            if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                else sql += " and d.nhomin not in (" + s_doc + ")";
            }
            //khuyen11/01/2014
            if (s_nhomin != "")
            {
                sql += " and d.nhomin in (" + s_nhomin.Substring(0, s_nhomin.Length - 1) + ")";
            }
            //
            sql += " group by a.makp,";
            if (bChitiet && tenfile == "d_thucxuat") sql += "b.madoituong,";
            if (bLinh_losx) sql += "t.losx,t.handung,";
            sql += " b.makho,b.mabd,t.giamua,t.handung,t.losx,t.giaban,e.ten ";
            string s_exp = "";
            DataSet ads = get_data(sql);
            foreach (DataRow r in ads.Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    s_exp = "mabd=" + int.Parse(r["mabd"].ToString()) + " and (dongia=0 or dongia=" + decimal.Parse(r["dongia"].ToString()) + ")";
                    s_exp += " and makho=" + int.Parse(r["makho"].ToString());
                    if (bLinh_losx)
                        s_exp += " and (losx='" + r["losx"].ToString() + "' or losx is null) and (handung='" + r["handung"].ToString() + "' or handung is null)";
                    r4 = getrowbyid(ds.Tables[0], s_exp);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        //gam 12/12/2011
                        r2["manhom1"] = r1["manhom1"].ToString();
                        r2["tennhom1"] = r1["tennhom1"].ToString();
                        //end gam
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["soluong"] = r["soluong"].ToString();
                        r2["slyeucau"] = 0;
                        if (bChitiet && tenfile == "d_thucxuat")
                        {
                            foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r2["c_" + r["madoituong"].ToString().Trim()] = r["soluong"].ToString();
                        }
                        r2["losx"] = r["losx1"].ToString();
                        r2["handung"] = r["handung1"].ToString();
                        r2["dongia"] = r["dongia"].ToString();
                        r2["tenkho"] = "";
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                        if (r3 != null) r2["tenkho"] = r2["tenkho"].ToString().Trim() + "^" + r3["ten"].ToString();
                        r2["dichso"] = doiso.doithapphan(r["soluong"].ToString()).Trim();
                        r2["giaban"] = r["giaban"].ToString();
                        r2["tennguon"] = r["tennguon"].ToString();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(s_exp);
                        if (dr.Length > 0)
                        {
                            dr[0]["soluong"] = decimal.Parse(dr[0]["soluong"].ToString()) + decimal.Parse(r["soluong"].ToString());
                            if (bChitiet && tenfile == "d_thucxuat") dr[0]["c_" + r["madoituong"].ToString().Trim()] = decimal.Parse(dr[0]["c_" + r["madoituong"].ToString().Trim()].ToString()) + decimal.Parse(r["soluong"].ToString());
                            dr[0]["dichso"] = doiso.doithapphan(dr[0]["soluong"].ToString()).Trim();
                            dr[0]["dongia"] = r["dongia"].ToString();
                            dr[0]["losx"] = r["losx1"].ToString();
                            dr[0]["handung"] = r["handung1"].ToString();
                            dr[0]["giaban"] = r["giaban"].ToString();
                            r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                            if (r3 != null) dr[0]["tenkho"] = dr[0]["tenkho"].ToString().Trim() + "^" + r3["ten"].ToString();
                        }
                    }
                }
            }
            return ds;
        }



        public DataSet get_slxuat_dongia(DataSet ds, DataTable dt, DataTable dtkho, string tu, string den, string s_mmyy, int i_nhom, int i_loai, int i_phieu, int i_makp, string s_madt, string s_makho, string s_manguon, bool buhaophi, string s_doc, bool bNhomin_mabd, DataTable dtdt, bool bChitiet, string cont)
        {
            bool incstt = bIntheocstt(i_nhom), bLinh_losx = bPhieulinh_dongia_losx_date(i_nhom);
            DataTable dtkp = get_data("select * from " + user + ".d_duockp").Tables[0];
            dichso.numbertotext doiso = new dichso.numbertotext();
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            string xxx = user + s_mmyy, for_ngay = f_ngay;
            string tenfile = (i_loai == 2 || buhaophi) ? "d_thucbucstt" : "d_thucxuat";
            sql = "select a.makp,";
            if (bChitiet && tenfile == "d_thucxuat") sql += "b.madoituong,";
            if (bLinh_losx) sql += "t.losx,t.handung,";
            else sql += "'' as losx,'' as handung,";
            sql += "b.makho,b.mabd,sum(b.soluong) as soluong,t.giamua as dongia,t.handung,t.losx,t.giaban,e.ten as tennguon from " + xxx + ".d_xuatsdll a," + xxx + "." + tenfile + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d," + xxx + ".d_theodoi t,"+user+".d_dmnguon e ";
            sql += " where a.id=b.id and b.sttt=t.id and b.mabd=c.id and c.manhom=d.id and t.manguon=e.id ";
            if (cont != "") sql += " and (" + cont + ")";
            else sql += " and a.phieu=" + i_phieu + " and a.ngay between to_date('" + tu + "','" + for_ngay + "') and to_date('" + den + "','" + for_ngay + "')";
            sql += " and a.nhom=" + i_nhom + " and a.loai=" + i_loai;
            if (i_loai == 2 && incstt) sql += " and a.makp=" + i_makp;
            else sql += " and a.makhoa=" + i_makp;
            if (s_madt != "" && tenfile == "d_thucxuat") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
            if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
            if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                else sql += " and d.nhomin not in (" + s_doc + ")";
            }
            sql += " group by a.makp,";
            if (bChitiet && tenfile == "d_thucxuat") sql += "b.madoituong,";
            if (bLinh_losx) sql += "t.losx,t.handung,";
            sql += " b.makho,b.mabd,t.giamua,t.handung,t.losx,t.giaban,e.ten ";
            string s_exp = "";
            DataSet ads = get_data(sql);
            foreach (DataRow r in ads.Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    s_exp = "mabd=" + int.Parse(r["mabd"].ToString()) + " and (dongia=0 or dongia=" + decimal.Parse(r["dongia"].ToString()) + ")";
                    s_exp += " and makho=" + int.Parse(r["makho"].ToString());
                    if (bLinh_losx)
                        s_exp += " and (losx='" + r["losx"].ToString() + "' or losx is null) and (handung='" + r["handung"].ToString() + "' or handung is null)";
                    r4 = getrowbyid(ds.Tables[0], s_exp);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        //gam 12/12/2011
                        r2["manhom1"] = r1["manhom1"].ToString();
                        r2["tennhom1"] = r1["tennhom1"].ToString();
                        //end gam
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["soluong"] = r["soluong"].ToString();
                        r2["slyeucau"] = 0;
                        if (bChitiet && tenfile == "d_thucxuat")
                        {
                            foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r2["c_" + r["madoituong"].ToString().Trim()] = r["soluong"].ToString();
                        }
                        r2["losx"] = r["losx1"].ToString();
                        r2["handung"] = r["handung1"].ToString();
                        r2["dongia"] = r["dongia"].ToString();
                        r2["tenkho"] = "";
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                        if (r3 != null) r2["tenkho"] = r2["tenkho"].ToString().Trim() + "^" + r3["ten"].ToString();
                        r2["dichso"] = doiso.doithapphan(r["soluong"].ToString()).Trim();
                        r2["giaban"] = r["giaban"].ToString();
                        r2["tennguon"] = r["tennguon"].ToString();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(s_exp);
                        if (dr.Length > 0)
                        {
                            dr[0]["soluong"] = decimal.Parse(dr[0]["soluong"].ToString()) + decimal.Parse(r["soluong"].ToString());
                            if (bChitiet && tenfile == "d_thucxuat") dr[0]["c_" + r["madoituong"].ToString().Trim()] = decimal.Parse(dr[0]["c_" + r["madoituong"].ToString().Trim()].ToString()) + decimal.Parse(r["soluong"].ToString());
                            dr[0]["dichso"] = doiso.doithapphan(dr[0]["soluong"].ToString()).Trim();
                            dr[0]["dongia"] = r["dongia"].ToString();
                            dr[0]["losx"] = r["losx1"].ToString();
                            dr[0]["handung"] = r["handung1"].ToString();
                            dr[0]["giaban"] = r["giaban"].ToString();
                            r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                            if (r3 != null) dr[0]["tenkho"] = dr[0]["tenkho"].ToString().Trim() + "^" + r3["ten"].ToString();
                        }
                    }
                }
            }
            return ds;
        }

        public DataSet sort_inphieu_dongia(DataSet dsxml, DataSet ds, bool bSLYeucau, string s_mmyy, string tu, int i_nhom, int i_makp, int i_loai, int i_phieu, string s_makho, string s_madt, string s_manguon, string s_nguoilinh, DataTable dtdt, bool bChitiet, bool buhaophi)
        {
            string tenfile = (i_loai == 2 && buhaophi) ? "d_thucbucstt" : "d_thucxuat";
            dsxml.Clear();
            DataSet dstt = new DataSet();
            dstt.ReadXml("..//..//..//xml//d_sttphieulinh.xml");
            string stt = "tenkho,stt,";
            foreach (DataRow r1 in dstt.Tables[0].Select("stt<>0", "stt")) stt += r1["ma"].ToString().Trim() + ",";
            stt = stt.Substring(0, stt.Length - 1);
            string fie = "soluong>0";
            if (bSLYeucau) fie = "slyeucau+soluong>0";
            DataRow[] dr = ds.Tables[0].Select(fie, stt);
            DataRow r;
            DataTable tmp;
            string s_stt = "", tmp_sophieu = "0", tmp_lanin = "0";
            s_makho = "";
            for (int i = 0; i < dr.Length; i++)
                if (s_makho.IndexOf(dr[i]["makho"].ToString().Trim() + ",") == -1) s_makho += dr[i]["makho"].ToString().Trim() + ",";
            for (int i = 0; i < dr.Length; i++)
            {
                r = dsxml.Tables[0].NewRow();
                r["makho"] = dr[i]["makho"].ToString();
                r["mabd"] = dr[i]["mabd"].ToString();
                r["ma"] = dr[i]["ma"].ToString();
                r["ten"] = dr[i]["ten"].ToString();
                r["dang"] = dr[i]["dang"].ToString();
                r["tenhc"] = dr[i]["tenhc"].ToString();
                r["stt"] = dr[i]["stt"].ToString();
                r["manhom"] = dr[i]["manhom"].ToString();
                r["tennhom"] = dr[i]["tennhom"].ToString();
                r["tenhang"] = dr[i]["tenhang"].ToString();
                if (bSLYeucau && dr[i]["slyeucau"].ToString() != "") r["slyeucau"] = dr[i]["slyeucau"].ToString();
                r["soluong"] = dr[i]["soluong"].ToString();
                if (bChitiet && tenfile == "d_thucxuat")
                    foreach (DataRow r5 in dtdt.Rows) r["c_" + r5["madoituong"].ToString().Trim()] = dr[i]["c_" + r5["madoituong"].ToString().Trim()].ToString();
                r["tenkho"] = dr[i]["tenkho"].ToString();
                r["dichso"] = dr[i]["dichso"].ToString();
                r["losx"] = dr[i]["losx"].ToString();
                r["handung"] = dr[i]["handung"].ToString();
                r["dongia"] = dr[i]["dongia"].ToString();
                r["giaban"] = dr[i]["giaban"].ToString();
                r["tennguon"] = dr[i]["tennguon"].ToString();
                r["sophieu"] = tmp_sophieu;
                r["lanin"] = tmp_lanin;
                r["ngayylenh"] = dr[i]["ngayylenh"].ToString();
                //
                if (s_stt != dr[i]["stt"].ToString().Trim())
                {
                    foreach (DataRow r1 in get_data("select id from " + user + ".d_dmkho where hide=0 and id in (" + s_makho.Substring(0, s_makho.Length - 1) + ")").Tables[0].Rows)
                    {
                        if (bSophieu_nam(i_nhom))
                        {
                            upd_sophieu_yy(s_mmyy.Substring(2, 2), i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon, s_nguoilinh);
                            execute_data("update " + user + ".d_sophieu set lanin=1 where lanin=0");
                            tmp = get_sophieu_yy(s_mmyy.Substring(2, 2), i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon);
                        }
                        else
                        {
                            upd_sophieu(s_mmyy, i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon, s_nguoilinh);
                            execute_data("update " + user + s_mmyy + ".d_sophieu set lanin=1 where lanin=0");
                            tmp = get_sophieu(s_mmyy, i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon);
                        }
                        if (tmp.Rows.Count > 0)
                        {
                            r["sophieu"] = tmp.Rows[0]["so"].ToString();
                            r["lanin"] = tmp.Rows[0]["lanin"].ToString();
                            r["nguoilinh"] = tmp.Rows[0]["nguoilinh"].ToString();
                            tmp_sophieu = tmp.Rows[0]["so"].ToString();
                            tmp_lanin = tmp.Rows[0]["lanin"].ToString();
                        }
                    }
                    s_stt = dr[i]["stt"].ToString().Trim();
                }
                dsxml.Tables[0].Rows.Add(r);
            }
            return dsxml;
        }


        public DataSet get_xuatcstt(string d_mmyy, DataSet ds, DataTable dt, DataTable dtkho, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, string s_doc, bool bNhomin_mabd, DataTable dtdt, bool bChitiet)
        {
            string xxx = user + d_mmyy;
            ds.Clear();
            dichso.numbertotext doiso = new dichso.numbertotext();
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            if (buhaophi)
            {
                sql = "select ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_haophill c," + user + ".d_dmbd d," + user + ".d_dmnhom e," + xxx + ".d_theodoi t ";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                sql += " group by ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd";
            }
            else
            {
                sql = "select ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_dutrull c," + user + ".d_dmbd d," + user + ".d_dmnhom e," + xxx + ".d_theodoi t ";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                sql += " group by ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd";
                sql += " union all select ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_xtutrucll c," + user + ".d_dmbd d," + user + ".d_dmnhom e," + xxx + ".d_theodoi t ";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                sql += " group by ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd";
            }
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    sql = "mabd=" + int.Parse(r["mabd"].ToString());
                    sql += " and makho=" + int.Parse(r["makho"].ToString());
                    r4 = getrowbyid(ds.Tables[0], sql);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["soluong"] = r["soluong"].ToString();
                        if (bChitiet)
                        {
                            foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r2["c_" + r["madoituong"].ToString().Trim()] = r["soluong"].ToString();
                        }
                        r2["slyeucau"] = r["soluong"].ToString();
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        r2["dichso"] = doiso.doithapphan(r["soluong"].ToString()).Trim();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(sql);
                        if (dr.Length > 0)
                        {
                            dr[0]["soluong"] = decimal.Parse(dr[0]["soluong"].ToString()) + decimal.Parse(r["soluong"].ToString());
                            if (bChitiet) dr[0]["c_" + r["madoituong"].ToString().Trim()] = decimal.Parse(dr[0]["c_" + r["madoituong"].ToString().Trim()].ToString()) + decimal.Parse(r["soluong"].ToString());
                            dr[0]["slyeucau"] = dr[0]["soluong"].ToString();
                            dr[0]["dichso"] = doiso.doithapphan(dr[0]["soluong"].ToString()).Trim();
                        }
                    }
                }
            }
            return ds;
        }

        public DataSet get_xuatcstt(string d_tu, string d_den, DataSet ds, DataTable dt, DataTable dtkho, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, string s_doc, bool bNhomin_mabd, DataTable dtdt, bool bChitiet)
        {
            //string xxx = user + d_mmyy;
            ds.Clear();
            dichso.numbertotext doiso = new dichso.numbertotext();
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            if (buhaophi)
            {
                sql = "select ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong from xxx.d_xuatsdll a, xxx.d_xuatsdct b, xxx.d_haophill c," + user + ".d_dmbd d," + user + ".d_dmnhom e, xxx.d_theodoi t ";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                sql += " group by ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd";
            }
            else
            {
                sql = "select ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong from xxx.d_xuatsdll a, xxx.d_xuatsdct b, xxx.d_dutrull c," + user + ".d_dmbd d," + user + ".d_dmnhom e, xxx.d_theodoi t ";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                sql += " group by ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd";
                sql += " union all select ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong from xxx.d_xuatsdll a, xxx.d_xuatsdct b,xxx.d_xtutrucll c," + user + ".d_dmbd d," + user + ".d_dmnhom e,xxx.d_theodoi t ";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += " and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                sql += " group by ";
                if (bChitiet) sql += "b.madoituong,";
                sql += "b.makho,b.mabd";
            }
            foreach (DataRow r in get_data_mmyy(sql, d_tu, d_den, true).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    sql = "mabd=" + int.Parse(r["mabd"].ToString());
                    sql += " and makho=" + int.Parse(r["makho"].ToString());
                    r4 = getrowbyid(ds.Tables[0], sql);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["soluong"] = r["soluong"].ToString();
                        if (bChitiet)
                        {
                            foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r2["c_" + r["madoituong"].ToString().Trim()] = r["soluong"].ToString();
                        }
                        r2["slyeucau"] = r["soluong"].ToString();
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        r2["dichso"] = doiso.doithapphan(r["soluong"].ToString()).Trim();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(sql);
                        if (dr.Length > 0)
                        {
                            dr[0]["soluong"] = decimal.Parse(dr[0]["soluong"].ToString()) + decimal.Parse(r["soluong"].ToString());
                            if (bChitiet) dr[0]["c_" + r["madoituong"].ToString().Trim()] = decimal.Parse(dr[0]["c_" + r["madoituong"].ToString().Trim()].ToString()) + decimal.Parse(r["soluong"].ToString());
                            dr[0]["slyeucau"] = dr[0]["soluong"].ToString();
                            dr[0]["dichso"] = doiso.doithapphan(dr[0]["soluong"].ToString()).Trim();
                        }
                    }
                }
            }
            return ds;
        }
        public DataSet get_xuatcstt_dongia(string d_mmyy, DataSet ds, DataTable dt, DataTable dtkho, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, string s_doc, bool bNhomin_mabd, DataTable dtdt, bool bChitiet, int nhom)
        {
            string xxx = user + d_mmyy;
            bool bLinh_losx = bPhieulinh_dongia_losx_date(nhom);
            ds.Clear();
            dichso.numbertotext doiso = new dichso.numbertotext();
            DataTable dtkp = get_data("select * from " + user + ".d_duockp").Tables[0];
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            if (buhaophi)
            {
                sql = "select a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                else sql += "'' as losx,'' as handung,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong,t.giamua as dongia from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_haophill c," + user + ".d_dmbd d," + user + ".d_dmnhom e," + xxx + ".d_theodoi t";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += "and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                sql += " group by a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                sql += "b.makho,b.mabd,t.giamua";
            }
            else
            {
                sql = "select a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                else sql += "'' as losx,'' as handung,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong,t.giamua as dongia from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_dutrull c," + user + ".d_dmbd d," + user + ".d_dmnhom e," + xxx + ".d_theodoi t ";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += "and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                sql += " group by a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                sql += "b.makho,b.mabd,t.giamua";
                sql += " union all select a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                else sql += "'' as losx,'' as handung,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong,t.giamua as dongia from " + xxx + ".d_xuatsdll a," + xxx + ".d_xuatsdct b," + xxx + ".d_xtutrucll c," + user + ".d_dmbd d," + user + ".d_dmnhom e," + xxx + ".d_theodoi t";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += "and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                sql += " group by a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                sql += "b.makho,b.mabd,t.giamua";
            }
            string s_exp = "";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    s_exp = "mabd=" + int.Parse(r["mabd"].ToString()) + " and (dongia=0 or dongia=" + decimal.Parse(r["dongia"].ToString()) + ")";
                    s_exp += " and makho=" + int.Parse(r["makho"].ToString());
                    if (bLinh_losx)
                        s_exp += " and (losx='" + r["losx"].ToString() + "' or losx is null) and (handung='" + r["handung"].ToString() + "' or handung is null)";
                    r4 = getrowbyid(ds.Tables[0], s_exp);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["soluong"] = r["soluong"].ToString();
                        if (bChitiet)
                        {
                            foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r2["c_" + r["madoituong"].ToString().Trim()] = r["soluong"].ToString();
                        }
                        r2["slyeucau"] = r["soluong"].ToString();
                        r2["dongia"] = r["dongia"].ToString();
                        r2["losx"] = r["losx"].ToString();
                        r2["handung"] = r["handung"].ToString();
                        r2["tenkho"] = "";
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                        if (r3 != null) r2["tenkho"] = r2["tenkho"].ToString().Trim() + "^" + r3["ten"].ToString();
                        r2["dichso"] = doiso.doithapphan(r["soluong"].ToString()).Trim();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(s_exp);
                        if (dr.Length > 0)
                        {
                            dr[0]["soluong"] = decimal.Parse(dr[0]["soluong"].ToString()) + decimal.Parse(r["soluong"].ToString());
                            if (bChitiet) dr[0]["c_" + r["madoituong"].ToString().Trim()] = decimal.Parse(dr[0]["c_" + r["madoituong"].ToString().Trim()].ToString()) + decimal.Parse(r["soluong"].ToString());
                            dr[0]["slyeucau"] = dr[0]["soluong"].ToString();
                            dr[0]["dichso"] = doiso.doithapphan(dr[0]["soluong"].ToString()).Trim();
                            dr[0]["dongia"] = r["dongia"].ToString();
                            dr[0]["losx"] = r["losx"].ToString();
                            dr[0]["handung"] = r["handung"].ToString();
                        }
                    }
                }
            }
            return ds;
        }

        public DataSet get_xuatcstt_dongia(string d_tu, string d_den, DataSet ds, DataTable dt, DataTable dtkho, string s_idduyet, string s_madt, string s_makho, string s_manguon, bool buhaophi, string s_doc, bool bNhomin_mabd, DataTable dtdt, bool bChitiet, int nhom)
        {
            //string xxx = user + d_mmyy;
            bool bLinh_losx = bPhieulinh_dongia_losx_date(nhom);
            ds.Clear();
            dichso.numbertotext doiso = new dichso.numbertotext();
            DataTable dtkp = get_data("select * from " + user + ".d_duockp").Tables[0];
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            if (buhaophi)
            {
                sql = "select a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                else sql += "'' as losx,'' as handung,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong,t.giamua as dongia ";
                sql += " from xxx.d_xuatsdll a, xxx.d_xuatsdct b, xxx.d_haophill c," + user + ".d_dmbd d," + user + ".d_dmnhom e, xxx.d_theodoi t";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += "and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                sql += " group by a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                sql += "b.makho,b.mabd,t.giamua";
            }
            else
            {
                sql = "select a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                else sql += "'' as losx,'' as handung,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong,t.giamua as dongia ";
                sql += " from xxx.d_xuatsdll a, xxx.d_xuatsdct b, xxx.d_dutrull c," + user + ".d_dmbd d," + user + ".d_dmnhom e, xxx.d_theodoi t ";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += "and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                sql += " group by a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                sql += "b.makho,b.mabd,t.giamua";
                sql += " union all select a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                else sql += "'' as losx,'' as handung,";
                sql += "b.makho,b.mabd,sum(b.soluong) as soluong,t.giamua as dongia";
                sql += " from xxx.d_xuatsdll a, xxx.d_xuatsdct b, xxx.d_xtutrucll c," + user + ".d_dmbd d," + user + ".d_dmnhom e,xxx.d_theodoi t";
                sql += " where a.id=b.id and b.sttt=t.id and a.id=c.id and b.mabd=d.id and d.manhom=e.id and a.loai=2 ";
                sql += "and (" + s_idduyet + ")";
                if (s_madt != "") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
                if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
                if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
                if (s_doc != "")
                {
                    if (bNhomin_mabd) sql += " and d.nhomin not in (" + s_doc + ")";
                    else sql += " and e.nhomin not in (" + s_doc + ")";
                }
                sql += " group by a.makp,";
                if (bChitiet) sql += "b.madoituong,";
                if (bLinh_losx) sql += "t.losx,t.handung,";
                sql += "b.makho,b.mabd,t.giamua";
            }
            string s_exp = "";
            foreach (DataRow r in get_data_mmyy(sql, d_tu, d_den, true).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    s_exp = "mabd=" + int.Parse(r["mabd"].ToString()) + " and (dongia=0 or dongia=" + decimal.Parse(r["dongia"].ToString()) + ")";
                    s_exp += " and makho=" + int.Parse(r["makho"].ToString());
                    if (bLinh_losx)
                        s_exp += " and (losx='" + r["losx"].ToString() + "' or losx is null) and (handung='" + r["handung"].ToString() + "' or handung is null)";
                    r4 = getrowbyid(ds.Tables[0], s_exp);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["soluong"] = r["soluong"].ToString();
                        if (bChitiet)
                        {
                            foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r2["c_" + r["madoituong"].ToString().Trim()] = r["soluong"].ToString();
                        }
                        r2["slyeucau"] = r["soluong"].ToString();
                        r2["dongia"] = r["dongia"].ToString();
                        r2["losx"] = r["losx"].ToString();
                        r2["handung"] = r["handung"].ToString();
                        r2["tenkho"] = "";
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                        if (r3 != null) r2["tenkho"] = r2["tenkho"].ToString().Trim() + "^" + r3["ten"].ToString();
                        r2["dichso"] = doiso.doithapphan(r["soluong"].ToString()).Trim();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(s_exp);
                        if (dr.Length > 0)
                        {
                            dr[0]["soluong"] = decimal.Parse(dr[0]["soluong"].ToString()) + decimal.Parse(r["soluong"].ToString());
                            if (bChitiet) dr[0]["c_" + r["madoituong"].ToString().Trim()] = decimal.Parse(dr[0]["c_" + r["madoituong"].ToString().Trim()].ToString()) + decimal.Parse(r["soluong"].ToString());
                            dr[0]["slyeucau"] = dr[0]["soluong"].ToString();
                            dr[0]["dichso"] = doiso.doithapphan(dr[0]["soluong"].ToString()).Trim();
                            dr[0]["dongia"] = r["dongia"].ToString();
                            dr[0]["losx"] = r["losx"].ToString();
                            dr[0]["handung"] = r["handung"].ToString();
                        }
                    }
                }
            }
            return ds;
        }
        public DataSet get_slxuat(DataSet ds, DataTable dt, DataTable dtkho, string tu, string den, string s_mmyy, int i_nhom, int i_loai, int i_phieu, int i_makp, string s_madt, string s_makho, string s_manguon, bool buhaophi, string s_doc, bool bNhomin_mabd, DataTable dtdt, bool bChitiet, string cont)
        {
            bool incstt = bIntheocstt(i_nhom);
            dichso.numbertotext doiso = new dichso.numbertotext();
            DataRow r1, r2, r3, r4;
            DataRow[] dr;
            string xxx = user + s_mmyy, for_ngay = f_ngay;
            string tenfile = (i_loai == 2 || buhaophi) ? "d_thucbucstt" : "d_thucxuat";
            sql = "select ";
            if (bChitiet && tenfile == "d_thucxuat") sql += "b.madoituong,";
            sql += "b.makho,b.mabd,sum(b.soluong) as soluong,c.dongia from " + xxx + ".d_xuatsdll a," + xxx + "." + tenfile + " b," + user + ".d_dmbd c," + user + ".d_dmnhom d," + xxx + ".d_theodoi t ";
            sql += " where a.id=b.id and b.sttt=t.id and b.mabd=c.id and c.manhom=d.id ";
            if (cont != "") sql += " and (" + cont + ")";
            else sql += " and a.phieu=" + i_phieu + " and a.ngay between to_date('" + tu + "','" + for_ngay + "') and to_date('" + den + "','" + for_ngay + "')";
            sql += " and a.nhom=" + i_nhom + " and a.loai=" + i_loai;
            if (incstt && i_loai == 2) sql += " and a.makp=" + i_makp;
            else sql += " and a.makhoa=" + i_makp;
            if (s_madt != "" && tenfile == "d_thucxuat") sql += " and b.madoituong in (" + s_madt.Substring(0, s_madt.Length - 1) + ")";
            if (s_makho != "") sql += " and b.makho in (" + s_makho.Substring(0, s_makho.Length - 1) + ")";
            if (s_doc != "")
            {
                if (bNhomin_mabd) sql += " and c.nhomin not in (" + s_doc + ")";
                else sql += " and d.nhomin not in (" + s_doc + ")";
            }
            if (s_manguon != "") sql += " and t.manguon in (" + s_manguon.Substring(0, s_manguon.Length - 1) + ")";
            sql += " group by ";
            if (bChitiet && tenfile == "d_thucxuat") sql += "b.madoituong,";
            sql += "b.makho,b.mabd,c.dongia";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    sql = "mabd=" + int.Parse(r["mabd"].ToString());
                    sql += " and makho=" + int.Parse(r["makho"].ToString());
                    r4 = getrowbyid(ds.Tables[0], sql);
                    if (r4 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["makho"] = r["makho"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["stt"] = r1["stt"].ToString();
                        r2["manhom"] = r1["manhom"].ToString();
                        r2["tennhom"] = r1["tennhom"].ToString();
                        r2["tenhang"] = r1["tenhang"].ToString();
                        r2["slyeucau"] = 0;
                        r2["soluong"] = r["soluong"].ToString();
                        r2["dongia"] = r["dongia"].ToString();
                        if (bChitiet && tenfile == "d_thucxuat")
                        {
                            foreach (DataRow r5 in dtdt.Rows) r2["c_" + r5["madoituong"].ToString().Trim()] = 0;
                            r2["c_" + r["madoituong"].ToString().Trim()] = r["soluong"].ToString();
                        }
                        r3 = getrowbyid(dtkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r3 != null) r2["tenkho"] = r3["ten"].ToString();
                        r2["dichso"] = doiso.doithapphan(r["soluong"].ToString()).Trim();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select(sql);
                        if (dr.Length > 0)
                        {
                            dr[0]["soluong"] = decimal.Parse(dr[0]["soluong"].ToString()) + decimal.Parse(r["soluong"].ToString());
                            if (bChitiet && tenfile == "d_thucxuat") dr[0]["c_" + r["madoituong"].ToString().Trim()] = decimal.Parse(dr[0]["c_" + r["madoituong"].ToString().Trim()].ToString()) + decimal.Parse(r["soluong"].ToString());
                            dr[0]["dichso"] = doiso.doithapphan(dr[0]["soluong"].ToString()).Trim();
                        }
                    }
                }
            }
            return ds;
        }

        public DataSet sort_inphieu(DataSet dsxml, DataSet ds, bool bSLYeucau, string s_mmyy, string tu, int i_nhom, int i_makp, int i_loai, int i_phieu, string s_makho, string s_madt, string s_manguon, string s_nguoilinh, DataTable dtdt, bool bChitiet, bool buhaophi)
        {
            string tenfile = (i_loai == 2 && buhaophi) ? "d_thucbucstt" : "d_thucxuat";
            dsxml.Clear();
            DataSet dstt = new DataSet();
            dstt.ReadXml("..//..//..//xml//d_sttphieulinh.xml");
            string stt = "tenkho,stt,";
            foreach (DataRow r1 in dstt.Tables[0].Select("stt<>0", "stt")) stt += r1["ma"].ToString().Trim() + ",";
            stt = stt.Substring(0, stt.Length - 1);
            string fie = "soluong>0";
            if (bSLYeucau) fie = "slyeucau+soluong>0";
            DataRow[] dr = ds.Tables[0].Select(fie, stt);
            DataRow r;
            DataTable tmp;
            string s_stt = "";
            s_makho = "";
            for (int i = 0; i < dr.Length; i++)
                if (s_makho.IndexOf(dr[i]["makho"].ToString().Trim() + ",") == -1) s_makho += dr[i]["makho"].ToString().Trim() + ",";
            for (int i = 0; i < dr.Length; i++)
            {
                r = dsxml.Tables[0].NewRow();
                r["makho"] = dr[i]["makho"].ToString();
                r["mabd"] = dr[i]["mabd"].ToString();
                r["ma"] = dr[i]["ma"].ToString();
                r["ten"] = dr[i]["ten"].ToString();
                r["dang"] = dr[i]["dang"].ToString();
                r["tenhc"] = dr[i]["tenhc"].ToString();
                r["stt"] = dr[i]["stt"].ToString();
                r["manhom"] = dr[i]["manhom"].ToString();
                r["tennhom"] = dr[i]["tennhom"].ToString();
                r["tenhang"] = dr[i]["tenhang"].ToString();
                if (bSLYeucau && dr[i]["slyeucau"].ToString() != "") r["slyeucau"] = dr[i]["slyeucau"].ToString();
                r["soluong"] = dr[i]["soluong"].ToString();
                r["dongia"] = dr[i]["dongia"].ToString();
                if (bChitiet && tenfile == "d_thucxuat")
                    foreach (DataRow r5 in dtdt.Rows) r["c_" + r5["madoituong"].ToString().Trim()] = dr[i]["c_" + r5["madoituong"].ToString().Trim()].ToString();
                r["tenkho"] = dr[i]["tenkho"].ToString();
                r["dichso"] = dr[i]["dichso"].ToString();
                r["ngayylenh"] = dr[i]["ngayylenh"].ToString();
                if (s_stt != dr[i]["stt"].ToString().Trim())
                {
                    foreach (DataRow r1 in get_data("select * from " + user + ".d_dmkho where hide=0 and id in (" + s_makho.Substring(0, s_makho.Length - 1) + ")").Tables[0].Rows)
                    {
                        if (bSophieu_nam(i_nhom))
                        {
                            upd_sophieu_yy(s_mmyy.Substring(2, 2), i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon, s_nguoilinh);
                            tmp = get_sophieu_yy(s_mmyy.Substring(2, 2), i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon);
                        }
                        else
                        {
                            upd_sophieu(s_mmyy, i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon, s_nguoilinh);
                            tmp = get_sophieu(s_mmyy, i_nhom, tu, i_makp, i_loai, i_phieu, int.Parse(dr[i]["stt"].ToString()), int.Parse(r1["id"].ToString()), s_madt, s_manguon);
                        }
                        if (tmp.Rows.Count > 0)
                        {
                            r["sophieu"] = tmp.Rows[0]["so"].ToString();
                            r["lanin"] = tmp.Rows[0]["lanin"].ToString();
                            r["nguoilinh"] = tmp.Rows[0]["nguoilinh"].ToString();
                        }
                    }
                    s_stt = dr[i]["stt"].ToString().Trim();
                }
                dsxml.Tables[0].Rows.Add(r);
            }
            return dsxml;
        }

        public void upd_cosotutruc(int d_nhom, string d_mmyys, string d_mmyy)
        {
            foreach (DataRow r in get_data("select * from " + user + ".d_cosotutruc where nhom=" + d_nhom + " and mmyy='" + d_mmyys + "'").Tables[0].Rows)
                upd_cosotutruc(d_nhom, d_mmyy, int.Parse(r["makp"].ToString()), int.Parse(r["mabd"].ToString()), decimal.Parse(r["soluong"].ToString()));
        }


        public int get_manguon(string d_mmyy, int d_makho, int d_mabd)
        {
            ds = get_data("select manguon from " + user + d_mmyy + ".d_tonkhoth where makho=" + d_makho + " and mabd=" + d_mabd);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["manguon"].ToString());
            else return 0;
        }

        public void ins_thongso(int d_nhom, int d_rec)
        {
            for (int i = 1; i < d_rec; i++)
                if (get_data("select * from " + user + ".d_thongso where nhom=" + d_nhom + " and id=" + i).Tables[0].Rows.Count == 0) upd_thongso(d_nhom, i, "", "0");
        }

        public void ins_thongso(int d_nhom, int tu, int den)
        {
            for (int i = tu; i <= den; i++)
                if (get_data("select * from " + user + ".d_thongso where nhom=" + d_nhom + " and id=" + i).Tables[0].Rows.Count == 0) upd_thongso(d_nhom, i, "", "0");
        }
        //linha
        public bool upd_thuocbhytll(decimal d_id, int d_nhom, string d_ngay, string d_mabn, decimal d_mavaovien, decimal d_maql, int d_userid, int d_madoituong,
            string d_ghichu, decimal d_songay, string d_makp, string d_mabs, string d_chandoan, string d_maicd, int d_loaiba, decimal d_ngaynghi,
            string d_ngaynghi_tungay, int d_songayhen, decimal d_sotoa)
        {
            d_ngaynghi_tungay = d_ngaynghi_tungay.Trim();
            d_ngaynghi_tungay = d_ngaynghi_tungay.Trim('/');
            d_ngaynghi_tungay = d_ngaynghi_tungay.Trim();
            //schema = user + mmyy(d_ngay) + ".upd_thuocbhytll";
            string sql = "update " + user + mmyy(d_ngay) + ".d_thuocbhytll set nhom=:d_nhom,ngay=to_timestamp(:d_ngay,'dd/mm/yyyy hh24:mi'),";
            sql += "mabn=:d_mabn,mavaovien=:d_mavaovien,maql=:d_maql,userid=:d_userid,madoituong=:d_madoituong,";
            sql += "ghichu=:d_ghichu,songay=:d_songay,makp=:d_makp,mabs=:d_mabs,chandoan=:d_chandoan,maicd=:d_maicd,loaiba=:d_loaiba," +
                "ngaynghi=" + d_ngaynghi.ToString() + ",ngaynghi_tungay=to_date(:d_ngaynghi_tungay,'dd/mm/yyyy'),songayhen=" + d_songayhen + ",sotoa=:d_sotoa where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 16).Value = d_ngay;
            cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
            cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
            cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
            cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
            cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
            cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
            cmd.Parameters.Add("d_songay", NpgsqlDbType.Numeric).Value = d_songay;
            cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
            cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
            cmd.Parameters.Add("d_chandoan", NpgsqlDbType.Text).Value = d_chandoan;
            cmd.Parameters.Add("d_maicd", NpgsqlDbType.Varchar, 9).Value = d_maicd;
            cmd.Parameters.Add("d_loaiba", NpgsqlDbType.Numeric).Value = d_loaiba;
            cmd.Parameters.Add("d_ngaynghi_tungay", NpgsqlDbType.Varchar, 10).Value = (d_ngaynghi_tungay == "" ? null : d_ngaynghi_tungay.Substring(0, 10));
            cmd.Parameters.Add("d_sotoa", NpgsqlDbType.Numeric).Value = d_sotoa;//Thuy 30.03.2012
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy(d_ngay.Substring(0, 10)) + ".d_thuocbhytll(id,nhom,ngay,mabn,mavaovien,";
                    sql += "maql,userid,madoituong,ghichu,songay,makp,mabs,chandoan,maicd,loaiba,ngaynghi,ngaynghi_tungay,songayhen,sotoa) values ";
                    sql += "(:d_id,:d_nhom,to_timestamp(:d_ngay,'dd/mm/yyyy hh24:mi'),:d_mabn,:d_mavaovien,:d_maql,";
                    sql += ":d_userid,:d_madoituong,:d_ghichu,:d_songay,:d_makp,:d_mabs,:d_chandoan,:d_maicd,:d_loaiba," + d_ngaynghi + "," +
                        "to_date(:d_ngaynghi_tungay,'dd/mm/yyyy')," + d_songayhen.ToString() + ",:d_sotoa)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 16).Value = d_ngay;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                    cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                    cmd.Parameters.Add("d_songay", NpgsqlDbType.Numeric).Value = d_songay;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                    cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                    cmd.Parameters.Add("d_chandoan", NpgsqlDbType.Text).Value = d_chandoan;
                    cmd.Parameters.Add("d_maicd", NpgsqlDbType.Varchar, 9).Value = d_maicd;
                    cmd.Parameters.Add("d_loaiba", NpgsqlDbType.Numeric).Value = d_loaiba;
                    cmd.Parameters.Add("d_ngaynghi_tungay", NpgsqlDbType.Varchar, 10).Value = (d_ngaynghi_tungay == "" ? null : d_ngaynghi_tungay.Substring(0, 10));
                    cmd.Parameters.Add("d_sotoa", NpgsqlDbType.Numeric).Value = d_sotoa;//Thuy 30.03.2012
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy(d_ngay), ex.Message, sComputer, "d_thuocbhytll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        //endlinh
        public bool upd_thuocbhytct(string d_ngay, decimal d_id, decimal d_stt, int d_makho, int d_mabd, decimal d_slyeucau, string d_cachdung, int d_manguon, decimal d_solan, decimal d_lan)
        {
            //schema = user + mmyy(d_ngay) + ".upd_thuocbhytct";
            string sql = "update " + user + mmyy(d_ngay) + ".d_thuocbhytct set makho=:d_makho,mabd=:d_mabd,";
            sql += "slyeucau=:d_slyeucau,cachdung=:d_cachdung,manguon=:d_manguon,solan=:d_solan,lan=:d_lan ";
            sql += "where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
            cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
            cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
            cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
            cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into medibv0311.d_thuocbhytct(id,stt,makho,mabd,slyeucau,slthuc,cachdung,";
                    sql += "manguon,solan,lan) values (:d_id,:d_stt,:d_makho,:d_mabd,:d_slyeucau,0,:d_cachdung,:d_manguon,:d_solan,:d_lan)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                    cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy(d_ngay), ex.Message, sComputer, "d_thuocbhytct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thuocbhytct(string d_ngay, decimal d_id, decimal d_stt, int d_makho, int d_mabd, decimal d_slyeucau, string d_cachdung, int d_manguon, decimal d_solan, decimal d_lan, int d_madoituong)
        {
            //schema = user + mmyy(d_ngay) + ".upd_thuocbhytct";
            string sql = "update " + user + mmyy(d_ngay) + ".d_thuocbhytct set makho=:d_makho,";
            sql += "mabd=:d_mabd,slyeucau=:d_slyeucau,cachdung=:d_cachdung,manguon=:d_manguon,solan=:d_solan,";
            sql += "lan=:d_lan,madoituong=:d_madoituong where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
            cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
            cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
            cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
            cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
            cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy(d_ngay) + ".d_thuocbhytct(id,stt,makho,mabd,slyeucau,";
                    sql += "slthuc,cachdung,manguon,solan,lan,madoituong) values (:d_id,:d_stt,:d_makho,";
                    sql += ":d_mabd,:d_slyeucau,0,:d_cachdung,:d_manguon,:d_solan,:d_lan,:d_madoituong)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                    cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy(d_ngay), ex.Message, sComputer, "d_thuocbhytct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thuocbhytct(string d_ngay, decimal d_id, decimal d_stt, int d_makho, int d_mabd, decimal d_slyeucau, string d_cachdung, int d_manguon, decimal d_solan, decimal d_lan, int d_madoituong, string d_ghichuct)
        {
            //schema = user + mmyy(d_ngay) + ".upd_thuocbhytct";
            string sql = "update " + user + mmyy(d_ngay) + ".d_thuocbhytct set makho=:d_makho,";
            sql += "mabd=:d_mabd,slyeucau=:d_slyeucau,cachdung=:d_cachdung,manguon=:d_manguon,solan=:d_solan,";
            sql += "lan=:d_lan,madoituong=:d_madoituong, ghichu=:d_ghichuct where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
            cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
            cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
            cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
            cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
            cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
            cmd.Parameters.Add("d_ghichuct", NpgsqlDbType.Text).Value = d_ghichuct;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy(d_ngay) + ".d_thuocbhytct(id,stt,makho,mabd,slyeucau,";
                    sql += "slthuc,cachdung,manguon,solan,lan,madoituong, ghichu) values (:d_id,:d_stt,:d_makho,";
                    sql += ":d_mabd,:d_slyeucau,0,:d_cachdung,:d_manguon,:d_solan,:d_lan,:d_madoituong, :d_ghichuct)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_slyeucau", NpgsqlDbType.Numeric).Value = d_slyeucau;
                    cmd.Parameters.Add("d_cachdung", NpgsqlDbType.Text).Value = d_cachdung;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_solan", NpgsqlDbType.Numeric).Value = d_solan;
                    cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_ghichuct", NpgsqlDbType.Text).Value = d_ghichuct;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy(d_ngay), ex.Message, sComputer, "d_thuocbhytct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public void updrec_thuocbhytll(DataTable dt, decimal id, string ngay, string mabn, decimal maql, string hoten, string namsinh, string sothe, string chandoan,
            string maicd, string tenpk, string tenbs, string ghichu, string makp, string mabs, decimal songay, decimal ngaynghi)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["ngay"] = ngay;
                nrow["mabn"] = mabn;
                nrow["maql"] = maql;
                nrow["hoten"] = hoten;
                nrow["namsinh"] = namsinh;
                nrow["sothe"] = sothe;
                nrow["tenkp"] = tenpk;
                nrow["tenbs"] = tenbs;
                nrow["chandoan"] = chandoan;
                nrow["maicd"] = maicd;
                nrow["ghichu"] = ghichu;
                nrow["makp"] = makp;
                nrow["mabs"] = mabs;
                nrow["songay"] = songay;
                nrow["ngaynghi"] = ngaynghi;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["ngay"] = ngay;
                dr[0]["mabn"] = mabn;
                dr[0]["maql"] = maql;
                dr[0]["hoten"] = hoten;
                dr[0]["namsinh"] = namsinh;
                dr[0]["sothe"] = sothe;
                dr[0]["tenkp"] = tenpk;
                dr[0]["tenbs"] = tenbs;
                dr[0]["chandoan"] = chandoan;
                dr[0]["maicd"] = maicd;
                dr[0]["ghichu"] = ghichu;
                dr[0]["makp"] = makp;
                dr[0]["mabs"] = mabs;
                dr[0]["songay"] = songay;
                dr[0]["ngaynghi"] = ngaynghi;
            }
        }

        public bool get_done_thuocbhyt(string d_ngay, decimal d_id)
        {
            ds = get_data("select done from " + user + mmyy(d_ngay) + ".d_thuocbhytll where id=" + d_id);
            if (ds.Tables[0].Rows.Count == 0) return false;
            else return ds.Tables[0].Rows[0]["done"].ToString().Trim() != "0";
        }

        public bool get_sotoa_bhytkb(string d_mmyy, decimal d_id)
        {
            ds = get_data("select sotoa from " + user + d_mmyy + ".bhytkb where id=" + d_id);
            if (ds.Tables[0].Rows.Count == 0) return false;
            else return ds.Tables[0].Rows[0]["sotoa"].ToString().Trim() != "0";
        }

        public bool get_done_bhytkb(string d_mmyy, decimal d_id)
        {
            ds = get_data("select done from " + user + d_mmyy + ".bhytkb where id=" + d_id);
            if (ds.Tables[0].Rows.Count == 0) return false;
            else return ds.Tables[0].Rows[0]["done"].ToString().Trim() != "0";
        }

        public bool get_sobienlai_bhytkb(string d_mmyy, decimal d_id)
        {
            ds = get_data("select sobienlai from " + user + d_mmyy + ".bhytkb where id=" + d_id);
            if (ds.Tables[0].Rows.Count == 0) return false;
            else return decimal.Parse(ds.Tables[0].Rows[0]["sobienlai"].ToString().Trim()) != 0;
        }

        public void updrec_thuocbhytct(DataTable dt, string hoten, decimal id, decimal stt, decimal sttt, int mabd, string ma, string ten,
            string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung, string losx,
            decimal soluong, decimal dongia, decimal sotien, string cachdung, int makho, int manguon, int nhomcc,
            DataTable dtton, int done)
        {
            string exp = "id =" + id + " and stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["hoten"] = hoten;
                nrow["id"] = id;
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["cachdung"] = cachdung;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["chon"] = false;
                nrow["done"] = done;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["cachdung"] = cachdung;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["chon"] = false;
                dr[0]["done"] = done;
            }
        }

        public void updrec_donthuoc(DataTable dt, string hoten, decimal id, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, int makho, int manguon, int nhomcc, decimal giaban, decimal giamua, decimal sotienban, bool chon, bool no, int madoituong, int loaiba, DataTable dtton, string d_cachdung)
        {
            string exp = "id =" + id + " and stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["hoten"] = hoten;
                nrow["id"] = id;
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["sotienban"] = sotienban;
                nrow["soluongcu"] = 0;
                nrow["sotiencu"] = 0;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["chon"] = chon;
                nrow["no"] = no;
                nrow["madoituong"] = madoituong;
                nrow["loaiba"] = loaiba;
                nrow["cachdung"] = d_cachdung;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["sotienban"] = sotienban;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["chon"] = chon;
                dr[0]["no"] = no;
                dr[0]["madoituong"] = madoituong;
                dr[0]["loaiba"] = loaiba;
                dr[0]["cachdung"] = d_cachdung;
            }
        }

        public bool bGiaban_nguon(int d_nhom)
        {
            ds = get_data("select * from " + user + ".d_dmnguon where loai=1 and nhom=" + d_nhom);
            return ds.Tables[0].Rows.Count > 0;
        }

        public int get_maphu_ngtru(string sothe, decimal sotien, int nhom)
        {
            if (sothe == "") return 0;
            else
            {
                decimal m13_st = ma13_st(nhom), m16_st = ma16_st(nhom);
                int ma = get_maphu(sothe);
                if (sothe.Trim().Length == 18) return (ma != 0 && sotien > m16_st) ? ma : 0;
                else return (ma != 0 && sotien > m13_st) ? ma : 0;
            }
        }

        public int get_maphu_noitru(string sothe, int nhom)
        {
            if (sothe == "") return 0;
            else return get_maphu(sothe);
        }

        public void updrec_bhytcls(DataTable dt, decimal stt, int mavp, string ma, string ten, string dvt, decimal soluong, decimal dongia, decimal sotien, decimal idchidinh)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["mavp"] = mavp;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["dvt"] = dvt;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["idchidinh"] = idchidinh;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["mavp"] = mavp;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["dvt"] = dvt;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["idchidinh"] = idchidinh;
            }
        }

        public DataTable get_thuoc(string mmyy, string mabn, int makp, string ngay, string table)
        {
            sql = "select to_char(a.ngay,'dd/mm/yyyy') as ngay,d.ten from " + user + mmyy + ".d_duyet a," + user + mmyy + "." + table + " b," + user + mmyy + ".d_dausinhton c," + user + ".d_loaiphieu d ";
            sql += " where a.id=b.idduyet and b.id=c.iddutru and a.phieu=d.id ";
            sql += " and b.mabn='" + mabn + "' and to_char(c.ngay,'dd/mm/yyyy')='" + ngay.Substring(0, 10) + "'";
            sql += " and a.makp=" + makp;
            return get_data(sql).Tables[0];
        }

        public int get_loai(int nhom)
        {
            ds = get_data("select loai from " + user + ".d_dmnhomkho where id=" + nhom);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["loai"].ToString());
            else return 1;
        }

        public bool upd_kinhphi(int d_nhom, string d_yy, int d_id_nhom, decimal d_sotien)
        {
            schema = user + ".upd_kinhphi";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_yy", NpgsqlDbType.Varchar, 2).Value = d_yy;
                cmd.Parameters.Add("d_id_nhom", NpgsqlDbType.Numeric).Value = d_id_nhom;
                cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_kinhphi");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_kinhphi_sd(int d_nhom, string d_yy, int d_id_nhom, decimal d_sotien)
        {
            schema = user + ".upd_kinhphi_sd";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_yy", NpgsqlDbType.Varchar, 2).Value = d_yy;
                cmd.Parameters.Add("d_id_nhom", NpgsqlDbType.Numeric).Value = d_id_nhom;
                cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_kinhphi");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool bMmyy(string mmyy)
        {
            return get_data("select * from " + user + ".table where mmyy='" + mmyy + "'").Tables[0].Rows.Count > 0;
        }

        public string get_sothe(decimal m_maql)
        {
            ds = get_data("select sothe from " + user + ".bhyt where maql=" + m_maql);
            if (ds.Tables[0].Rows.Count > 0) return ds.Tables[0].Rows[0]["sothe"].ToString();
            else return "";
        }

        public int get_maphu(decimal m_maql)
        {
            //return 0;
            ds = get_data("select maphu from " + user + ".bhyt where maql=" + m_maql);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["maphu"].ToString());
            else return 0;
        }

        public decimal congno(int loai, string mabn, decimal maql, decimal idkhoa)
        {
            decimal ret = 0;
            sql = "select sum(thuoc+vienphi-tamung-mien) sotien from " + user + ".v_theodoicongno where done=0";
            if (loai == 1) sql += " and mabn='" + mabn + "'";
            else if (loai == 2) sql += " and maql=" + maql;
            else if (loai == 3) sql += " and idkhoa=" + idkhoa;
            ds = get_data(sql + " and madoituong not in (1,3,5)");
            if (ds.Tables[0].Rows[0]["sotien"].ToString() != "") ret = decimal.Parse(ds.Tables[0].Rows[0]["sotien"].ToString());
            DataTable dt = get_data(sql + " and madoituong=1").Tables[0];
            if (dt.Rows[0]["sotien"].ToString() != "")
            {
                ret += (get_maphu(maql) == 1) ? decimal.Parse(dt.Rows[0]["sotien"].ToString()) : 0;
            }
            return ret;
        }

        public bool upd_mabd(int d_mabd)
        {
            sql = "update " + user + ".d_mabd set mabd=:d_mabd where mabd=:d_mabd";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_mabd(mabd) values (:d_mabd)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_mabd");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tonkho(string d_mmyy, int d_nhom, int d_loai)
        {
            schema = user + d_mmyy + ".upd_tonkho";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "tonkho");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tonkho(string d_mmyy, int d_makho)
        {
            schema = user + d_mmyy + ".upd_tonkho";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "tonkho");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tontutruc(string d_mmyy, int d_nhom, int d_makp)
        {
            schema = user + d_mmyy + ".upd_tontutruc";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "tontutruc");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_slnhap(string d_mmyy, int d_nhom)
        {
            schema = user + d_mmyy + ".upd_slnhap";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "slnhap");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_kiemtra(string d_mmyy, int d_nhom)
        {
            schema = user + d_mmyy + ".upd_kiemtra";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "kiemtra");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            //upd_kiemtra_theodoi(d_mmyy,d_nhom);
            return true;
        }

        public bool upd_kiemtra_cstt(string d_mmyy, int d_nhom)
        {
            schema = user + d_mmyy + ".upd_kiemtra_cstt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "kiemtra");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            //upd_kiemtra_theodoi(d_mmyy,d_nhom);
            return true;
        }

        private void upd_kiemtra_theodoi(string d_mmyy, int d_nhom)
        {
            sql = "select c.stt,a.manguon,a.nhomcc,b.mabd,b.handung,b.losx,trunc((b.sotien+b.sotien*b.vat/100+b.cuocvc+b.chaythu)/b.soluong,10) as giamua,";
            sql += "b.giaban,b.sothe,b.namsx,b.baohanh,b.nguongoc,b.tinhtrang,a.chietkhau,b.giaban2,b.dongia,b.tyle_ggia,b.st_ggia,b.sodangky ";
            sql += " from " + user + d_mmyy + ".d_nhapll a," + user + d_mmyy + ".d_nhapct b," + user + d_mmyy + ".d_tonkhoct c ";
            sql += " where a.id=b.id and b.id=c.idn and b.stt=c.sttn";
            sql += " and a.nhom=" + d_nhom;
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                upd_theodoi(d_mmyy, decimal.Parse(r["stt"].ToString()), int.Parse(r["mabd"].ToString()), int.Parse(r["manguon"].ToString()),
                    int.Parse(r["nhomcc"].ToString()), r["handung"].ToString(), r["losx"].ToString(), r["sothe"].ToString(),
                    r["namsx"].ToString(), r["namsx"].ToString(), int.Parse(r["baohanh"].ToString()),
                    int.Parse(r["nguongoc"].ToString()), int.Parse(r["tinhtrang"].ToString()),
                    decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["giaban"].ToString()),
                    decimal.Parse(r["chietkhau"].ToString()), decimal.Parse(r["giaban2"].ToString()), decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["tyle_ggia"].ToString()), decimal.Parse(r["st_ggia"].ToString()),r["sodangky"].ToString());
            }
        }
        public bool upd_dmbdkemtheo(decimal d_id, decimal d_mabd, decimal d_soluong)
        {
            sql = "update " + user + ".d_dmbdkemtheo set soluong=:d_soluong where id=:d_id and mabd=:d_mabd";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmbdkemtheo (id,mabd,soluong) values (:d_id,:d_mabd,:d_soluong)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmbdkemtheo");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmbdtd(decimal d_id, decimal d_mabd, decimal d_soluong)
        {
            sql = "update " + user + ".d_dmbdtd set soluong=:d_soluong where id=:d_id and mabd=:d_mabd";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmbdtd (id,mabd,soluong) values (:d_id,:d_mabd,:d_soluong)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_dmbdtd");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public void updrec_chuyenll(DataTable dt, decimal id, string sophieu, string ngay, string lydo)
        {
            string exp = "id='" + id+"'";
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["sophieu"] = sophieu;
                nrow["ngay"] = ngay;
                nrow["lydo"] = lydo;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["sophieu"] = sophieu;
                dr[0]["ngay"] = ngay;
                dr[0]["lydo"] = lydo;
            }
        }

        public bool upd_chuyenll(string d_mmyy, decimal d_id, int d_nhom, string d_sophieu, string d_ngay, string d_lydo, int d_userid)
        {
            schema = user + d_mmyy + ".upd_chuyenll";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 10).Value = d_sophieu;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_lydo", NpgsqlDbType.Text).Value = d_lydo;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_chuyenll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public void updrec_chuyenct(DataTable dt, decimal stt, decimal sttt, int mabd, string ma, string ten, string tenhc, string dang, string tenkho, string tennguon, string tennhomcc, string handung, string losx, decimal soluong, decimal dongia, decimal sotien, decimal giaban, decimal giamua, decimal sotienban, int makho, int manguon, int nhomcc, DataTable dtton, decimal soluongcu, decimal sotiencu, int nguonchuyen, string tenchuyen, decimal stttchuyen, bool assign)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["sttt"] = sttt;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["tennguon"] = tennguon;
                nrow["tennhomcc"] = tennhomcc;
                nrow["handung"] = handung;
                nrow["losx"] = losx;
                nrow["soluong"] = soluong;
                nrow["dongia"] = dongia;
                nrow["sotien"] = sotien;
                nrow["sotienban"] = sotienban;
                nrow["giaban"] = giaban;
                nrow["giamua"] = giamua;
                nrow["makho"] = makho;
                nrow["manguon"] = manguon;
                nrow["nhomcc"] = nhomcc;
                nrow["soluongcu"] = soluongcu;
                nrow["sotiencu"] = sotiencu;
                nrow["nguonchuyen"] = nguonchuyen;
                nrow["tenchuyen"] = tenchuyen;
                if (assign) nrow["stttchuyen"] = (stttchuyen == 0) ? get_id_tonkho : stttchuyen;
                else nrow["stttchuyen"] = stttchuyen;
                dt.Rows.Add(nrow);
                if (dtton != null) updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null)
                {
                    decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, sl, "+");
                    updrec_tonkho_nguon(dtton, makho, mabd, manguon, soluong, "-");
                }
                dr[0]["sttt"] = sttt;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["tennguon"] = tennguon;
                dr[0]["tennhomcc"] = tennhomcc;
                dr[0]["handung"] = handung;
                dr[0]["losx"] = losx;
                dr[0]["soluong"] = soluong;
                dr[0]["dongia"] = dongia;
                dr[0]["sotien"] = sotien;
                dr[0]["sotienban"] = sotienban;
                dr[0]["giaban"] = giaban;
                dr[0]["giamua"] = giamua;
                dr[0]["makho"] = makho;
                dr[0]["manguon"] = manguon;
                dr[0]["nhomcc"] = nhomcc;
                dr[0]["soluongcu"] = soluongcu;
                dr[0]["sotiencu"] = sotiencu;
                dr[0]["nguonchuyen"] = nguonchuyen;
                dr[0]["tenchuyen"] = tenchuyen;
                if (assign) dr[0]["stttchuyen"] = (stttchuyen == 0) ? get_id_tonkho : stttchuyen;
                else dr[0]["stttchuyen"] = stttchuyen;
            }
        }

        public bool upd_chuyenct(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, int d_makho, int d_mabd, decimal d_soluong, int d_nguonchuyen, decimal d_stttchuyen)
        {
            schema = user + d_mmyy + ".upd_chuyenct";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_nguonchuyen", NpgsqlDbType.Numeric).Value = d_nguonchuyen;
                cmd.Parameters.Add("d_stttchuyen", NpgsqlDbType.Numeric).Value = d_stttchuyen;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_chuyenct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public DataTable get_chuyenct(string mmyy, DataTable dtct, string str, decimal id, int nhom)
        {
            DataSet ds = new DataSet();
            ds.ReadXml("..//..//..//xml//d_chuyenct.xml");
            decimal stt = 0;
            int irec = 0;
            DataRow[] dr;
            DataTable dttonct;
            decimal sl, sltx, sttx, slton, dongia;
            decimal stttchuyen = 0;
            bool _bNhaptruocxuat = bNhaptruocxuat(nhom);
            foreach (DataRow r in dtct.Rows)
            {
                if (r["sttt"].ToString() != "0")
                    updrec_chuyenct(ds.Tables[0], decimal.Parse(r["stt"].ToString()), decimal.Parse(r["sttt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), r["tennguon"].ToString(), r["tennhomcc"].ToString(), r["handung"].ToString(), r["losx"].ToString(), decimal.Parse(r["soluong"].ToString()), decimal.Parse(r["dongia"].ToString()), decimal.Parse(r["sotien"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["sotienban"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), null, decimal.Parse(r["soluongcu"].ToString()), decimal.Parse(r["sotiencu"].ToString()), int.Parse(r["nguonchuyen"].ToString()), r["tenchuyen"].ToString(), decimal.Parse(r["stttchuyen"].ToString()), true);
                else
                {
                    sl = decimal.Parse(r["soluong"].ToString());
                    sql = str + " and a.tondau+a.slnhap-a.slxuat>0 and a.makho=" + int.Parse(r["makho"].ToString()) + " and a.mabd=" + int.Parse(r["mabd"].ToString()) + " and t.manguon=" + int.Parse(r["manguon"].ToString());
                    if (_bNhaptruocxuat) sql += " order by a.stt";
                    else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
                    dttonct = get_data(sql).Tables[0];
                    //sql="tondau+slnhap-slxuat>0 and makho="+int.Parse(r["makho"].ToString())+" and mabd="+int.Parse(r["mabd"].ToString())+" and manguon="+int.Parse(r["manguon"].ToString());
                    dr = dttonct.Select("true");
                    irec = dr.Length;
                    for (int i = 0; i < irec; i++)
                    {
                        slton = decimal.Parse(dr[i]["tondau"].ToString()) + decimal.Parse(dr[i]["slnhap"].ToString()) - decimal.Parse(dr[i]["slxuat"].ToString());
                        dongia = decimal.Parse(dr[i]["giamua"].ToString());
                        sltx = Math.Min(sl, Math.Max(0, slton));
                        if (sltx > 0)
                        {
                            stt = get_stt(ds.Tables[0]);
                            sttx = dongia * sltx;
                            dr[i]["slxuat"] = decimal.Parse(dr[i]["slxuat"].ToString()) + sltx;
                            stttchuyen = getidyymmdd(9);//getidyymmddhhmiss_stt_computer;// get_capid(9);
                            updrec_chuyenct(ds.Tables[0], stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(r["mabd"].ToString()), r["ma"].ToString(), r["ten"].ToString(), r["tenhc"].ToString(), r["dang"].ToString(), r["tenkho"].ToString(), dr[i]["tennguon"].ToString(), dr[i]["tennhomcc"].ToString(), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, dongia, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), sltx * decimal.Parse(dr[i]["giaban"].ToString()), int.Parse(r["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), null, decimal.Parse(r["soluongcu"].ToString()), decimal.Parse(r["sotiencu"].ToString()), int.Parse(r["nguonchuyen"].ToString()), r["tenchuyen"].ToString(), stttchuyen, true);
                            upd_theodoi(mmyy, stttchuyen, int.Parse(r["mabd"].ToString()), int.Parse(r["nguonchuyen"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), "", "", "", 0, 0, 0, decimal.Parse(dr[i]["giamua"].ToString()), decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), decimal.Parse(dr[i]["tyle_ggia"].ToString()), decimal.Parse(dr[i]["st_ggia"].ToString()));
                            //
                            upd_chuyenct(mmyy, id, stt, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["mabd"].ToString()), sltx, int.Parse(r["nguonchuyen"].ToString()), stttchuyen);
                            upd_tonkhoct_chuyen(insert, mmyy, decimal.Parse(dr[i]["stt"].ToString()), int.Parse(dr[i]["makho"].ToString()), int.Parse(dr[i]["manguon"].ToString()), int.Parse(dr[i]["nhomcc"].ToString()), int.Parse(dr[i]["mabd"].ToString()), dr[i]["handung"].ToString(), dr[i]["losx"].ToString(), sltx, sttx, decimal.Parse(dr[i]["giaban"].ToString()), decimal.Parse(dr[i]["giamua"].ToString()), int.Parse(r["nguonchuyen"].ToString()), stttchuyen);
                            //
                        }
                        sl -= sltx;
                        if (sl <= 0) break;
                    }
                    if (sl > 0 && id != 0) upd_treo(id, decimal.Parse(r["stt"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["mabd"].ToString()), sl, "chuyenct", int.Parse(r["makho"].ToString()), 0);
                }
            }
            ds.AcceptChanges();
            return ds.Tables[0];
        }

        public int get_sotoa_xuatban(string mmyy, int loai, string ngay)
        {
            ds = get_data("select sotoa from " + user + mmyy + ".d_capsotoa where id=1 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and loai=" + loai);
            if (ds.Tables[0].Rows.Count < 0) return 1;
            else return int.Parse(ds.Tables[0].Rows[0]["sotoa"].ToString()) + 1;
        }

        public int get_sotoa_xuatban(string mmyy, decimal id, int loai, string ngay)
        {
            DataTable dt = get_data("select sotoa from " + user + mmyy + ".d_ngtrull where sotoa<>0 and id=" + id + " and loai=" + loai).Tables[0];
            if (dt.Rows.Count > 0) return int.Parse(dt.Rows[0]["sotoa"].ToString());
            else
            {
                sql = "update " + user + mmyy + ".d_capsotoa set sotoa=sotoa+1 where id=1 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and loai=" + loai;
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
                //
                sql = "select sotoa from " + user + mmyy + ".d_capsotoa where id=1 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and loai=" + loai;
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                dest = new NpgsqlDataAdapter(cmd);
                ds = new DataSet();
                dest.Fill(ds);
                cmd.Dispose();
                //
                con.Close(); con.Dispose();
                return int.Parse(ds.Tables[0].Rows[0]["sotoa"].ToString());
            }
        }

        public int get_sotoa_bhyt(string mmyy, string ngay, int madoituong)
        {
            sql = "select sotoa from " + user + mmyy + ".d_capsotoa where id=2 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "'";
            if (madoituong == 1) sql += " and loai=0";
            else sql += " and loai=1";
            ds = get_data(sql);
            if (ds.Tables[0].Rows.Count < 0) return 1;
            else return int.Parse(ds.Tables[0].Rows[0]["sotoa"].ToString()) + 1;
        }

        public int get_sotoa_bhyt(string mmyy, int nhom, string ngay, int madoituong)
        {
            sql = "select count(*) as so from " + user + mmyy + ".bhytkb where sotoa<>0 and nhom=" + nhom;
            sql += " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "'";
            if (madoituong == 1) sql += " and maphu=1";
            else sql += " and maphu<>1";
            ds = get_data(sql);
            if (ds.Tables[0].Rows[0]["so"].ToString() != "") return int.Parse(ds.Tables[0].Rows[0]["so"].ToString());
            else return 0;
        }

        public int get_sotoa_bhyt(string mmyy, decimal id, string ngay, int madoituong)
        {
            DataTable dt = get_data("select sotoa from " + user + mmyy + ".bhytkb where sotoa<>0 and id=" + id).Tables[0];
            if (dt.Rows.Count > 0) return int.Parse(dt.Rows[0]["sotoa"].ToString());
            else
            {
                sql = "update " + user + mmyy + ".d_capsotoa set sotoa=sotoa+1 where id=2 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "'";
                if (madoituong == 1) sql += " and loai=0";
                else sql += " and loai=1";
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
                //
                sql = "select sotoa from " + user + mmyy + ".d_capsotoa where id=2 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "'";
                if (madoituong == 1) sql += " and loai=0";
                else sql += " and loai=1";
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                dest = new NpgsqlDataAdapter(cmd);
                ds = new DataSet();
                dest.Fill(ds);
                cmd.Dispose();
                //
                //tan	
                if (ds.Tables[0].Rows.Count <= 0)
                {
                    sql = "insert into " + user + mmyy + ".d_capsotoa(id,ngay,loai,sotoa,userid) values(2,now()," + (madoituong == 1 ? "0" : "1") + ",1,0)";
                    if (con != null)
                    {
                        con.Close(); con.Dispose();
                    }
                    con = new NpgsqlConnection(sConn);
                    con.Open();
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    return 1;
                }
                //tan
                //
                con.Close(); con.Dispose();
                return int.Parse(ds.Tables[0].Rows[0]["sotoa"].ToString());
            }
        }

        public int get_sotoa_ngtru(string mmyy, string ngay, int loai)
        {
            ds = get_data("select sotoa from " + user + mmyy + ".d_capsotoa where id=3 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and loai=" + loai);
            if (ds.Tables[0].Rows.Count < 0) return 1;
            else return int.Parse(ds.Tables[0].Rows[0]["sotoa"].ToString()) + 1;
        }

        public int get_sotoa_ngtru(string mmyy, int nhom, string ngay, int loai)
        {
            sql = "select count(*) as so from " + user + mmyy + ".d_ngtrull where sotoa<>0 and nhom=" + nhom + " and loai=" + loai;
            sql += " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "'";
            ds = get_data(sql);
            if (ds.Tables[0].Rows[0]["so"].ToString() != "") return int.Parse(ds.Tables[0].Rows[0]["so"].ToString());
            else return 0;
        }

        public int get_sotoa_ngtru(string mmyy, decimal id, string ngay, int loai)
        {
            DataTable dt = get_data("select sotoa from " + user + mmyy + ".d_ngtrull where sotoa<>0 and id=" + id).Tables[0];
            if (dt.Rows.Count > 0) return int.Parse(dt.Rows[0]["sotoa"].ToString());
            else
            {
                sql = "update " + user + mmyy + ".d_capsotoa set sotoa=sotoa+1 where id=3 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and loai=" + loai;
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
                //
                sql = "select sotoa from " + user + mmyy + ".d_capsotoa where id=3 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and loai=" + loai;
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                dest = new NpgsqlDataAdapter(cmd);
                ds = new DataSet();
                dest.Fill(ds);
                cmd.Dispose();
                //
                con.Close(); con.Dispose();
                return int.Parse(ds.Tables[0].Rows[0]["sotoa"].ToString());
            }
        }

        public bool upd_capsotoa(string d_mmyy, int d_id, string d_ngay, int d_loai)
        {
            sql = "update " + user + d_mmyy + ".d_capsotoa set id=:d_id where id=:d_id and to_char(ngay,'dd/mm/yyyy')=:d_ngay and loai=:d_loai";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_capsotoa (id,ngay,loai) values (:d_id,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_loai)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_capsotoa");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_capsotoa(int d_id, string d_ngay, int d_loai)
        {
            sql = "update " + user + ".d_capsotoa set id=:d_id where id=:d_id and to_char(ngay,'dd/mm/yyyy')=:d_ngay and loai=:d_loai";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_capsotoa (id,ngay,loai) values (:d_id,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_loai)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_capsotoa");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_capsotoa(string d_mmyy, int d_id, string d_ngay, int d_loai, int d_userid)
        {
            sql = "update " + user + d_mmyy + ".d_capsotoa set id=:d_id where to_char(ngay,'dd/mm/yyyy')=:d_ngay and loai=:d_loai and userid=:d_userid and id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_capsotoa (id,ngay,loai,userid) values (:d_id,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_loai,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_capsotoa");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_capsotoa(int d_id, string d_ngay, int d_loai, int d_userid)
        {
            sql = "update " + user + ".d_capsotoa set id=:d_id where to_char(ngay,'dd/mm/yyyy')=:d_ngay and loai=:d_loai and userid=:d_userid and id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_capsotoa (id,ngay,loai,userid) values (:d_id,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_loai,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_capsotoa");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public string mmyy(string ngay)
        {
            if (ngay.Length == 4) return ngay;
            else return ngay.Substring(3, 2) + ngay.Substring(8, 2);
        }

        public bool get_paid(string mabn, decimal mavaovien, decimal maql, decimal idkhoa, string ngay)
        {
            sql = "select mabn from " + user + ".v_paid where mabn='" + mabn + "' and ngayvao<=to_timestamp('" + ngay + "','" + f_ngay + "') and ngayra>=to_timestamp('" + ngay + "','" + f_ngay + "')";
            if (mavaovien != 0) sql += " and mavaovien=" + mavaovien;
            if (maql != 0) sql += " and maql=" + maql;
            if (idkhoa != 0) sql += " and idkhoa=" + idkhoa;
            ds = get_data(sql);
            return ds.Tables[0].Rows.Count > 0;
        }

        public bool upd_tienthuoc(string d_mmyy, decimal d_id, string d_mabn, decimal d_mavaovien, decimal d_maql, decimal d_idkhoa,
            string d_ngay, int d_makp, int d_madoituong, int d_mabd, decimal d_soluong, decimal d_giaban,
            decimal d_giamua, decimal d_gianovat, decimal d_gia_bh, string d_mabs)
        {
            //schema = user + d_mmyy + ".upd_tienthuoc";
            string sql = "update " + user + d_mmyy + ".d_tienthuoc set giaban=:d_giaban,gianovat=:d_gianovat,";
            sql += "soluong=soluong+:d_soluong, gia_bh=:d_gia_bh where mabn=:d_mabn and mavaovien=:d_mavaovien and maql=:d_maql ";
            sql += "and idkhoa=:d_idkhoa and to_char(ngay,'dd/mm/yyyy')=:d_ngay and makp=:d_makp and ";
            sql += "mabd=:d_mabd and giamua=:d_giamua and madoituong=:d_madoituong and done=0 and id=:d_id ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            con.Open();
            int irec = 0;
            try
            {


                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                cmd.Parameters.Add("d_gianovat", NpgsqlDbType.Numeric).Value = d_gianovat;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;

                irec = cmd.ExecuteNonQuery();
                cmd.Dispose();

                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_tienthuoc(id,mabn,mavaovien,maql,idkhoa,ngay,makp,";
                    sql += "madoituong,mabd,soluong,giaban,done,giamua,gianovat, gia_bh,mabs) values (:d_id,:d_mabn,";
                    sql += ":d_mavaovien,:d_maql,:d_idkhoa,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_makp,";
                    sql += ":d_madoituong,:d_mabd,:d_soluong,:d_giaban,0,:d_giamua,:d_gianovat, :d_gia_bh,:d_mabs)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                    cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                    cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    cmd.Parameters.Add("d_gianovat", NpgsqlDbType.Numeric).Value = d_gianovat;
                    cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                    cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 10).Value = d_mabs;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_tienthuoc");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        //ThanhCuong - 06/08/2012 - Kỹ thuật cao
        public bool upd_tienthuoc(string d_mmyy, decimal d_id, string d_mabn, decimal d_mavaovien, decimal d_maql, decimal d_idkhoa,
           string d_ngay, int d_makp, int d_madoituong, int d_mabd, decimal d_soluong, decimal d_giaban,
           decimal d_giamua, decimal d_gianovat, decimal d_gia_bh, string d_mabs,long d_id_ktcao)
        {
            //schema = user + d_mmyy + ".upd_tienthuoc";
            string sql = "update " + user + d_mmyy + ".d_tienthuoc set giaban=:d_giaban,gianovat=:d_gianovat,";
            sql += "soluong=soluong+:d_soluong, gia_bh=:d_gia_bh where mabn=:d_mabn and mavaovien=:d_mavaovien and maql=:d_maql ";
            sql += "and idkhoa=:d_idkhoa and to_char(ngay,'dd/mm/yyyy')=:d_ngay and makp=:d_makp and ";
            sql += "mabd=:d_mabd and giamua=:d_giamua and madoituong=:d_madoituong and done=0 and id=:d_id and id_ktcao=:d_id_ktcao ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            con.Open();
            int irec = 0;
            try
            {


                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                cmd.Parameters.Add("d_gianovat", NpgsqlDbType.Numeric).Value = d_gianovat;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_id_ktcao", NpgsqlDbType.Numeric).Value = d_id_ktcao;

                irec = cmd.ExecuteNonQuery();
                cmd.Dispose();

                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_tienthuoc(id,mabn,mavaovien,maql,idkhoa,ngay,makp,";
                    sql += "madoituong,mabd,soluong,giaban,done,giamua,gianovat, gia_bh,mabs,id_ktcao) values (:d_id,:d_mabn,";
                    sql += ":d_mavaovien,:d_maql,:d_idkhoa,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_makp,";
                    sql += ":d_madoituong,:d_mabd,:d_soluong,:d_giaban,0,:d_giamua,:d_gianovat, :d_gia_bh,:d_mabs,:d_id_ktcao)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                    cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                    cmd.Parameters.Add("d_idkhoa", NpgsqlDbType.Numeric).Value = d_idkhoa;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    cmd.Parameters.Add("d_gianovat", NpgsqlDbType.Numeric).Value = d_gianovat;
                    cmd.Parameters.Add("d_gia_bh", NpgsqlDbType.Numeric).Value = d_gia_bh;
                    cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 10).Value = d_mabs;
                    cmd.Parameters.Add("d_id_ktcao", NpgsqlDbType.Numeric).Value = d_id_ktcao;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_tienthuoc");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        //

        public bool upd_phieuxuat(string d_mmyy, decimal d_id, string d_ngay, int d_makp, int d_nhom, string d_loai, string d_phieu, string d_kho, decimal d_sotien, int d_userid)
        {
            schema = user + d_mmyy + ".upd_phieuxuat";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 10).Value = d_loai;
                cmd.Parameters.Add("d_phieu", NpgsqlDbType.Varchar, 20).Value = d_phieu;
                cmd.Parameters.Add("d_kho", NpgsqlDbType.Varchar, 20).Value = d_kho;
                cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_phieuxuat");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_phieuxuat(string d_mmyy, decimal d_id, string d_soct, string d_ngay, int d_makp, int d_nhom, string d_loai, string d_phieu, string d_kho, decimal d_sotien, string d_no, string d_co, string d_diengiai, int d_userid)
        {
            schema = user + d_mmyy + ".upd_phieuxuat";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_soct", NpgsqlDbType.Varchar, 10).Value = d_soct;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Varchar, 10).Value = d_loai;
                cmd.Parameters.Add("d_phieu", NpgsqlDbType.Varchar, 20).Value = d_phieu;
                cmd.Parameters.Add("d_kho", NpgsqlDbType.Varchar, 20).Value = d_kho;
                cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                cmd.Parameters.Add("d_no", NpgsqlDbType.Varchar, 20).Value = d_no;
                cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 20).Value = d_co;
                cmd.Parameters.Add("d_diengiai", NpgsqlDbType.Text).Value = d_diengiai;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_phieuxuat");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thanhtoan(string d_mmyy, decimal d_id, string d_ngay, string d_no, string d_co, decimal d_datra, int d_userid)
        {
            schema = user + d_mmyy + ".upd_thanhtoan";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_no", NpgsqlDbType.Varchar, 10).Value = d_no;
                cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 10).Value = d_co;
                cmd.Parameters.Add("d_datra", NpgsqlDbType.Numeric).Value = d_datra;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_thanhtoan");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thanhtoanct(string d_mmyy, decimal d_id, decimal d_stt, string d_so, string d_ngay, string d_no, string d_co, decimal d_sotien,
            string d_ghichu, string d_ngayct, int d_userid)
        {
            string xxx = user + d_mmyy;
            sql = "update " + xxx + ".d_thanhtoanct set so=:d_so,ngay=to_date('" + d_ngay + "','dd/mm/yyyy'),no=:d_no,co=:d_co,sotien=" + d_sotien;
            sql += ",ghichu=:d_ghichu,userid=" + d_userid + ",ngayct=to_date('" + d_ngayct + "','dd/mm/yyyy') where id=" + d_id + " and stt=" + d_stt;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_so", NpgsqlDbType.Varchar, 50).Value = d_so;
                cmd.Parameters.Add("d_no", NpgsqlDbType.Varchar, 100).Value = d_no;
                cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 20).Value = d_co;
                cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + xxx + ".d_thanhtoanct(id,stt,so,ngay,no,co,sotien,ghichu,ngayct,userid) ";
                    sql += "values (" + d_id + "," + d_stt + ",:d_so,to_date('" + d_ngay + "','dd/mm/yyyy'),:d_no,:d_co," + d_sotien + ",:d_ghichu,to_date('" + d_ngayct + "','dd/mm/yyyy')," + d_userid + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_so", NpgsqlDbType.Varchar, 50).Value = d_so;
                    cmd.Parameters.Add("d_no", NpgsqlDbType.Varchar, 100).Value = d_no;
                    cmd.Parameters.Add("d_co", NpgsqlDbType.Varchar, 20).Value = d_co;
                    cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_thanhtoanct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
            }
            return true;
        }

        public bool get_paid(string d_table, string d_mmyy, decimal d_id)
        {
            return get_data("select paid from " + user + d_mmyy + "." + d_table + " where id=" + d_id + " and paid=1").Tables[0].Rows.Count > 0;
        }

        public void updrec_congno(DataTable dt, string mmyy, decimal id, string sophieu, string ngaysp, string sohd, string ngayhd, string madv, string no, string co, decimal sotien, decimal datra)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["mmyy"] = mmyy;
                nrow["id"] = id;
                nrow["sophieu"] = sophieu;
                nrow["ngaysp"] = ngaysp;
                nrow["sohd"] = sohd;
                nrow["ngayhd"] = ngayhd;
                nrow["madv"] = madv;
                nrow["no"] = no;
                nrow["co"] = co;
                nrow["sotien"] = sotien;
                nrow["datra"] = datra;
                nrow["chon"] = datra != 0;
                dt.Rows.Add(nrow);
            }
        }

        private decimal get_id_tonkhoct(int m_ma)
        {
            sql = "update " + user + ".d_capid set id=id+1 where ma=:m_ma";
            NpgsqlConnection conn = new NpgsqlConnection(sConn);
            cmd = new NpgsqlCommand(sql, conn);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("m_ma", NpgsqlDbType.Numeric).Value = m_ma;
            conn.Open();
            int irec = cmd.ExecuteNonQuery();
            cmd.Dispose();
            if (irec == 0)
            {
                sql = "insert into " + user + ".d_capid(ma,ten,id) values (:m_ma,:m_ten,1)";
                cmd = new NpgsqlCommand(sql, conn);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_ma", NpgsqlDbType.Numeric).Value = m_ma;
                cmd.Parameters.Add("m_ten", NpgsqlDbType.Varchar, 20).Value = sComputer;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            sql = "select id from " + user + ".d_capid where ma=" + m_ma;
            cmd = new NpgsqlCommand(sql, conn);
            cmd.CommandType = CommandType.Text;
            dest = new NpgsqlDataAdapter(cmd);
            ds = new DataSet();
            dest.Fill(ds);
            cmd.Dispose();
            conn.Close(); conn.Dispose();
            return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public bool upd_thanhtoan(string mmyy, decimal id, decimal sotien)
        {
            sql = "update " + user + mmyy + ".d_thanhtoan set sotien=sotien+:sotien where id=:id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("sotien", NpgsqlDbType.Numeric).Value = sotien;
                cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_thanhtoan(id,sotien,datra) values (:id,:sotien,0)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                    cmd.Parameters.Add("sotien", NpgsqlDbType.Numeric).Value = sotien;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_thanhtoan");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_thanhtoan(string mmyy, decimal id, decimal sotien, decimal sotiennovat)
        {
            sql = "update " + user + mmyy + ".d_thanhtoan set sotien=sotien+:sotien, sotiennovat=sotiennovat+:sotiennovat where id=:id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("sotien", NpgsqlDbType.Numeric).Value = sotien;
                cmd.Parameters.Add("sotiennovat", NpgsqlDbType.Numeric).Value = sotiennovat;
                cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_thanhtoan(id,sotien,datra, sotiennovat) values (:id,:sotien,0,:sotiennovat)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                    cmd.Parameters.Add("sotien", NpgsqlDbType.Numeric).Value = sotien;
                    cmd.Parameters.Add("sotiennovat", NpgsqlDbType.Numeric).Value = sotiennovat;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_thanhtoan");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_chandoan(string mmyy, decimal id, int loai, string maicd, string chandoan)
        {
            sql = "update " + user + mmyy + ".d_chandoan set chandoan=:chandoan where id=:id and loai=:loai and maicd=:maicd";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("chandoan", NpgsqlDbType.Text).Value = chandoan;
                cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                cmd.Parameters.Add("loai", NpgsqlDbType.Numeric).Value = loai;
                cmd.Parameters.Add("maicd", NpgsqlDbType.Varchar, 9).Value = maicd;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_chandoan(id,loai,maicd,chandoan) values (:id,:loai,:maicd,:chandoan)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                    cmd.Parameters.Add("loai", NpgsqlDbType.Numeric).Value = loai;
                    cmd.Parameters.Add("maicd", NpgsqlDbType.Varchar, 9).Value = maicd;
                    cmd.Parameters.Add("chandoan", NpgsqlDbType.Text).Value = chandoan;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_chandoan");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_theodoitscd(string mmyy, decimal sttt, decimal nam, decimal tyle, int phanloai)
        {
            sql = "update " + user + mmyy + ".d_theodoitscd set nam=:nam,tyle=:tyle,phanloai=:phanloai";
            sql += " where sttt=:sttt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("nam", NpgsqlDbType.Numeric).Value = nam;
                cmd.Parameters.Add("tyle", NpgsqlDbType.Numeric).Value = tyle;
                cmd.Parameters.Add("phanloai", NpgsqlDbType.Numeric).Value = phanloai;
                cmd.Parameters.Add("sttt", NpgsqlDbType.Numeric).Value = sttt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_theodoitscd(sttt,nam,tyle,phanloai) values (:sttt,:nam,:tyle,:phanloai)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("sttt", NpgsqlDbType.Numeric).Value = sttt;
                    cmd.Parameters.Add("nam", NpgsqlDbType.Numeric).Value = nam;
                    cmd.Parameters.Add("tyle", NpgsqlDbType.Numeric).Value = tyle;
                    cmd.Parameters.Add("phanloai", NpgsqlDbType.Numeric).Value = phanloai;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_theodoitscd");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_theodoitscd(string mmyy, decimal sttt, decimal nam, decimal tyle, int phanloai, string phutrach, string chucdanh, string daotao, string coquan, string tailieu, string quyetdinh, string ngay, string tuoitho, decimal baotri, string tinhhinh, string khauhao)
        {
            sql = "update " + user + mmyy + ".d_theodoitscd set nam=:nam,tyle=:tyle,phanloai=:phanloai,phutrach=:phutrach,chucdanh=:chucdanh,daotao=:daotao,coquan=:coquan,tailieu=:tailieu,quyetdinh=:quyetdinh,";
            if (ngay != "") sql += "ngay=to_date(:ngay,'dd/mm/yyyy'),";
            sql += "tuoitho=:tuoitho,baotri=:baotri,tinhhinh=:tinhhinh,khauhao=:khauhao";
            sql += " where sttt=:sttt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("nam", NpgsqlDbType.Numeric).Value = nam;
                cmd.Parameters.Add("tyle", NpgsqlDbType.Numeric).Value = tyle;
                cmd.Parameters.Add("phanloai", NpgsqlDbType.Numeric).Value = phanloai;
                cmd.Parameters.Add("phutrach", NpgsqlDbType.Text).Value = phutrach;
                cmd.Parameters.Add("chucdanh", NpgsqlDbType.Text).Value = chucdanh;
                cmd.Parameters.Add("daotao", NpgsqlDbType.Text).Value = daotao;
                cmd.Parameters.Add("coquan", NpgsqlDbType.Text).Value = coquan;
                cmd.Parameters.Add("tailieu", NpgsqlDbType.Text).Value = tailieu;
                cmd.Parameters.Add("quyetdinh", NpgsqlDbType.Text).Value = quyetdinh;
                if (ngay != "") cmd.Parameters.Add("ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                cmd.Parameters.Add("tuoitho", NpgsqlDbType.Text).Value = tuoitho;
                cmd.Parameters.Add("baotri", NpgsqlDbType.Numeric).Value = baotri;
                cmd.Parameters.Add("tinhhinh", NpgsqlDbType.Text).Value = tinhhinh;
                cmd.Parameters.Add("khauhao", NpgsqlDbType.Text).Value = khauhao;
                cmd.Parameters.Add("sttt", NpgsqlDbType.Numeric).Value = sttt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_theodoitscd(sttt,nam,tyle,phanloai,phutrach,chucdanh,daotao,coquan,tailieu,quyetdinh,";
                    if (ngay != "") sql += "ngay,";
                    sql += "tuoitho,baotri,tinhhinh,khauhao) values (:sttt,:nam,:tyle,:phanloai,:phutrach,:chucdanh,:daotao,:coquan,:tailieu,:quyetdinh,";
                    if (ngay != "") sql += "to_date(:ngay,'dd/mm/yyyy'),";
                    sql += ":tuoitho,:baotri,:tinhhinh,:khauhao)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("sttt", NpgsqlDbType.Numeric).Value = sttt;
                    cmd.Parameters.Add("nam", NpgsqlDbType.Numeric).Value = nam;
                    cmd.Parameters.Add("tyle", NpgsqlDbType.Numeric).Value = tyle;
                    cmd.Parameters.Add("phanloai", NpgsqlDbType.Numeric).Value = phanloai;
                    cmd.Parameters.Add("phutrach", NpgsqlDbType.Text).Value = phutrach;
                    cmd.Parameters.Add("chucdanh", NpgsqlDbType.Text).Value = chucdanh;
                    cmd.Parameters.Add("daotao", NpgsqlDbType.Text).Value = daotao;
                    cmd.Parameters.Add("coquan", NpgsqlDbType.Text).Value = coquan;
                    cmd.Parameters.Add("tailieu", NpgsqlDbType.Text).Value = tailieu;
                    cmd.Parameters.Add("quyetdinh", NpgsqlDbType.Text).Value = quyetdinh;
                    if (ngay != "") cmd.Parameters.Add("ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                    cmd.Parameters.Add("tuoitho", NpgsqlDbType.Text).Value = tuoitho;
                    cmd.Parameters.Add("baotri", NpgsqlDbType.Numeric).Value = baotri;
                    cmd.Parameters.Add("tinhhinh", NpgsqlDbType.Text).Value = tinhhinh;
                    cmd.Parameters.Add("khauhao", NpgsqlDbType.Text).Value = khauhao;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_theodoitscd");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tutructh(string mmyy, int makp, int makho, int manguon, int mabd, decimal soluong, string fie)
        {
            sql = "update " + user + mmyy + ".d_tutructh set " + fie + "=" + fie + "+:soluong where makp=:makp and makho=:makho and manguon=:manguon and mabd=:mabd";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                cmd.Parameters.Add("manguon", NpgsqlDbType.Numeric).Value = manguon;
                cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_tutructh(makp,makho,manguon,mabd," + fie + ") values ";
                    sql += "(:makp,:makho,:manguon,:mabd,:soluong)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                    cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                    cmd.Parameters.Add("manguon", NpgsqlDbType.Numeric).Value = manguon;
                    cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                    cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_tutructh");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tutrucct(string mmyy, int makp, int makho, decimal stt, int mabd, decimal soluong, string fie1)
        {
            sql = "update " + user + mmyy + ".d_tutrucct set " + fie1 + "=" + fie1 + "+:soluong,";
            sql += "mabd=:mabd where makp=:makp and makho=:makho and stt=:stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_tutrucct(stt,mabd,makp,makho," + fie1 + ") values ";
                    sql += "(:stt,:mabd,:makp,:makho,:soluong)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                    cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                    cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                    cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                    cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    con.Close(); con.Dispose();
                    upd_dmbd_sudung(mabd);
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_tutrucct");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tonkhoth(string mmyy, int makho, int manguon, int mabd, decimal soluong, string fie)
        {
            sql = "update " + user + mmyy + ".d_tonkhoth set " + fie + "=" + fie + "+:soluong where makho=:makho and manguon=:manguon and mabd=:mabd";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                cmd.Parameters.Add("manguon", NpgsqlDbType.Numeric).Value = manguon;
                cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_tonkhoth(makho,manguon,mabd," + fie + ") values ";
                    sql += "(:makho,:manguon,:mabd,:soluong)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                    cmd.Parameters.Add("manguon", NpgsqlDbType.Numeric).Value = manguon;
                    cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                    cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_tonkhoth");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public decimal upd_tonkhoct(string mmyy, int makho, int manguon, int nhomcc, decimal idn, int sttn, int mabd, string handung, string losx, decimal soluong, decimal giaban, decimal giamua, decimal tyle_ggia, decimal st_ggia, string fie1)
        {
            decimal stt = getidyymmdd(9);
            sql = "update " + user + mmyy + ".d_tonkhoct set " + fie1 + "=" + fie1 + "+:soluong";
            sql += ",mabd=:mabd where makho=:makho and idn=:idn and sttn=:sttn";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                cmd.Parameters.Add("idn", NpgsqlDbType.Numeric).Value = idn;
                cmd.Parameters.Add("sttn", NpgsqlDbType.Numeric).Value = sttn;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    //stt = getidyymmdd(9);//getidyymmddhhmiss_stt_computer;//get_id_tonkhoct(9);
                    upd_theodoi(mmyy, stt, mabd, manguon, nhomcc, handung, losx, "", "", "", 0, 0, 0, giamua, giaban, giamua, tyle_ggia, st_ggia);
                    sql = "insert into " + user + mmyy + ".d_tonkhoct(stt,mabd,makho,idn,sttn," + fie1 + ") values ";
                    sql += "(:stt,:mabd,:makho,:idn,:sttn,:soluong)";
                    if (con != null)
                    {
                        con.Close(); con.Dispose();
                    }
                    con = new NpgsqlConnection(sConn);
                    con.Open();
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                    cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                    cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                    cmd.Parameters.Add("idn", NpgsqlDbType.Numeric).Value = idn;
                    cmd.Parameters.Add("sttn", NpgsqlDbType.Numeric).Value = sttn;
                    cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    con.Close(); con.Dispose();
                    upd_dmbd_sudung(mabd);
                }
                else stt = get_stt_tonkhoct(mmyy, makho, idn, sttn);
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_tonkhoct");
                return stt;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return stt;
        }

        public decimal get_stt_tonkhoct(string mmyy, int makho, decimal idn, int sttn)
        {
            DataTable tmp = get_data("select stt from " + user + mmyy + ".d_tonkhoct where makho=" + makho + " and idn=" + idn + " and sttn=" + sttn).Tables[0];
            if (tmp.Rows.Count > 0) return decimal.Parse(tmp.Rows[0]["stt"].ToString());
            else return 0;
        }

        public bool upd_tonkhoct(string mmyy, int makho, decimal stt, int mabd, decimal soluong, string fie1)
        {
            sql = "update " + user + mmyy + ".d_tonkhoct set " + fie1 + "=" + fie1 + "+:soluong,";
            sql += "mabd=:mabd where makho=:makho and stt=:stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_tonkhoct(stt,mabd,makho," + fie1 + ",idn,sttn) values ";
                    sql += "(:stt,:mabd,:makho,:soluong,0,0)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                    cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                    cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                    cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_tonkhoct");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_thanhtoan_mmyy(string mmyy, decimal id, decimal sotien)
        {
            sql = "update " + user + mmyy + ".d_thanhtoan set sotien=sotien+:sotien where id=:id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("sotien", NpgsqlDbType.Numeric).Value = sotien;
                cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_thanhtoan(id,sotien,datra) values (:id,:sotien,0)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                    cmd.Parameters.Add("sotien", NpgsqlDbType.Numeric).Value = sotien;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_thanhtoan");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thanhtoan_mmyy(string mmyy, decimal id, decimal sotien, decimal sotiennovat)
        {
            sql = "update " + user + mmyy + ".d_thanhtoan set sotien=sotien+:sotien, sotiennovat=sotiennovat+:sotiennovat where id=:id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("sotien", NpgsqlDbType.Numeric).Value = sotien;
                cmd.Parameters.Add("sotiennovat", NpgsqlDbType.Numeric).Value = sotiennovat;
                cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_thanhtoan(id,sotien,sotiennovat,datra) values (:id,:sotien,:sotiennovat,0)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                    cmd.Parameters.Add("sotien", NpgsqlDbType.Numeric).Value = sotien;
                    cmd.Parameters.Add("sotiennovat", NpgsqlDbType.Numeric).Value = sotiennovat;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_thanhtoan");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_dmbd_sudung(int mabd)
        {
            sql = "update " + user + ".d_dmbd_sudung set mabd=:mabd where mabd=:mabd";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmbd_sudung(mabd) values (:mabd)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dmbd_sudung");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_theodoicongno(string mabn, decimal mavaovien, decimal maql, decimal idkhoa, int madoituong, decimal sotien, string fie)
        {
            sql = "update " + user + ".v_theodoicongno set " + fie + "=" + fie + "+:sotien";
            sql += " where maql=:maql and idkhoa=:idkhoa and madoituong=:madoituong";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("sotien", NpgsqlDbType.Numeric).Value = sotien;
                cmd.Parameters.Add("maql", NpgsqlDbType.Numeric).Value = maql;
                cmd.Parameters.Add("idkhoa", NpgsqlDbType.Numeric).Value = idkhoa;
                cmd.Parameters.Add("madoituong", NpgsqlDbType.Numeric).Value = madoituong;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".v_theodoicongno (mabn,mavaovien,maql,idkhoa,madoituong," + fie + ") values (:mabn,:mavaovien,:maql,:idkhoa,:madoituong,:sotien)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("mabn", NpgsqlDbType.Varchar).Value = mabn;
                    cmd.Parameters.Add("mavaovien", NpgsqlDbType.Numeric).Value = mavaovien;
                    cmd.Parameters.Add("maql", NpgsqlDbType.Numeric).Value = maql;
                    cmd.Parameters.Add("idkhoa", NpgsqlDbType.Numeric).Value = idkhoa;
                    cmd.Parameters.Add("madoituong", NpgsqlDbType.Numeric).Value = madoituong;
                    cmd.Parameters.Add("sotien", NpgsqlDbType.Numeric).Value = sotien;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "v_theodoicongno");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_treo(decimal id, decimal stt, int manguon, int mabd, decimal soluong, string tables, int makho, int madoituong)
        {
            sql = "insert into " + user + ".d_treo (id,stt,manguon,mabd,soluong,tables,makho,madoituong) values (:id,:stt,:manguon,:mabd,:soluong,:tables,:makho,:madoituong)";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                cmd.Parameters.Add("manguon", NpgsqlDbType.Numeric).Value = manguon;
                cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                cmd.Parameters.Add("tables", NpgsqlDbType.Varchar, 10).Value = tables;
                cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                cmd.Parameters.Add("madoituong", NpgsqlDbType.Numeric).Value = madoituong;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_treo");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public decimal get_macap(string ngay, decimal matiepdon, int loai)
        {
            sql = "select macap from " + user + mmyy(ngay) + ".sukien where matiepdon=" + matiepdon;
            if (loai != 0) sql += " and noitiepdon=" + loai;
            sql += " order by macap desc";
            ds = get_data(sql);
            if (ds.Tables[0].Rows.Count > 0) return decimal.Parse(ds.Tables[0].Rows[0]["macap"].ToString());
            else return matiepdon;
        }

        public DataTable get_tutructh_duyet(string mmyy, string kho, int makp)
        {
            sql = "select b.id,a.makho,a.tondau+a.slnhap-a.slxuat as soluong,a.manguon,trim(b.ten)||' '||b.hamluong as ten,b.dang,b.ma,b.tenhc,b.mahc,b.soluong as slphat from " + user + mmyy + ".d_tutructh a," + user + ".d_dmbd b where a.mabd=b.id";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            sql += " and a.makp=" + makp;
            DataTable tmp = get_data(sql).Tables[0];
            if (bKhongkiemtraXuatthangsau(get_nhomkho)) { return tmp; }
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select makho,mabd,manguon,sum(slxuat) as soluong from " + user + mmyys + ".d_tutructh where slxuat>0";
                if (kho != "") sql += " and makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                sql += " and makp=" + makp;
                sql += " group by makho,mabd,manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoth_duyet(string mmyy, string kho)
        {
            sql = "select b.id,a.makho,a.tondau+a.slnhap-a.slxuat as soluong,a.manguon,trim(b.ten)||' '||b.hamluong as ten,b.dang,b.ma,b.tenhc,b.mahc,b.soluong as slphat from " + user + mmyy + ".d_tonkhoth a," + user + ".d_dmbd b where a.mabd=b.id";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            DataTable tmp = get_data(sql).Tables[0];
            if (bKhongkiemtraXuatthangsau(get_nhomkho)) { return tmp; }           
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select makho,mabd,manguon,sum(slxuat) as soluong from " + user + mmyys + ".d_tonkhoth where slxuat>0";
                if (kho != "") sql += " and makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                sql += " group by makho,mabd,manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoth_dutru(string mmyy, string makho, string manguon, int nhom)
        {
            //phien ban cu: khong co field d_tonkhoth.stt (serial)
            // chay phien ban moi tu 03/032014: them field " alter table medibvmmyy.d_tonkhoth add stt serial;
            int sole = d_soluong_le(nhom);
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,c.ten||' ['||round(b.bhyt,0)||']' as tenkho,";
            sql += "trunc(a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end," + sole + ") as soluong,";
            sql += "b.id,a.makho,b.bhyt,b.mahc,a.manguon,0 as tutruc,b.manhom,b.madoituong,b.choduyet, e.ten as dungluc,d.mien ";//gam 28/09/2011 them d.mien
            sql += " from " + user + mmyy + ".d_tonkhoth a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d," + user + ".d_dmthoidiemdung e";
            sql += " where a.mabd=b.id and a.makho=c.id and a.manguon=d.id and b.mathoidiemdung=e.id(+) ";
            if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
            if (manguon != "") sql += " and a.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];

            DataRow r1;
            string mmyys = "";
            if (bKhongkiemtraXuatthangsau(nhom))
            {
                foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
                {
                    mmyys = r2["mmyy"].ToString();
                    sql = "select makho,mabd,manguon,sum(slxuat+case when slyeucau>0 then slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth where slxuat+case when slyeucau>0 then slyeucau else 0 end>0";
                    if (makho != "") sql += " and makho in (" + makho.Substring(0, makho.Length - 1) + ")";
                    if (manguon != "") sql += " and manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
                    sql += " group by makho,mabd,manguon";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                        if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return tmp;
        }

        public DataTable get_tutructh_dutru(string mmyy, int makp, string makho, string manguon, int tutruc, int nhom)
        {
            //phien ban cu: khong co field d_tutructh.stt (serial)
            // chay phien ban moi tu 03/032014: them field " alter table medibvmmyy.d_tutructh add stt serial;
            int sole = d_soluong_le(nhom);
            upd_tontutruc(mmyy, nhom, makp);
            sql = "select ten from "+user+".d_duockp where id="+makp;
            DataTable dtdkp_temp = get_data(sql).Tables[0];
            string s_tentutruc = dtdkp_temp.Rows[0]["ten"].ToString();
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong||'('||'"+s_tentutruc+")' as ten,b.tenhc,b.dang,c.ten||' ['||round(b.bhyt,0)||']' as tenkho,";
            sql += "trunc(a.tondau+a.slnhap-a.slxuat," + sole + ") as soluong,b.id,a.makho,b.bhyt,b.mahc,a.manguon,1 as tutruc,";
            sql += "b.manhom,b.madoituong,b.choduyet from " + user + mmyy + ".d_tutructh a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d where a.mabd=b.id and a.makho=c.id and a.manguon=d.id and a.makp=" + makp;
            if (tutruc == 1) sql += " and b.tutruc=1";
            if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
            if (manguon != "") sql += " and a.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
            sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            if (bKhongkiemtraXuatthangsau(nhom))
            {
                foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
                {
                    mmyys = r2["mmyy"].ToString();
                    sql = "select a.makho,a.mabd,a.manguon,sum(a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tutructh a," + user + ".d_dmbd b where a.mabd=b.id and a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end>0 and a.makp=" + makp;
                    if (tutruc == 1) sql += " and b.tutruc=1";
                    if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
                    if (manguon != "") sql += " and a.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
                    sql += " group by a.makho,a.mabd,a.manguon";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                        if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return tmp;
        }

        public DataTable get_tutrucct_dutru(string mmyy, int makp, string makho, string manguon, int tutruc, int nhom)
        {
            string usr = user, xxx = usr + mmyy;
            sql = "select a.stt as stt,d.ten tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,t.losx,t.sothe,b.dang,";
            sql += "c.ten as tenkho,a.tondau+a.slnhap-a.slxuat as soluong,b.id,a.makho,b.bhyt,b.mahc,t.manguon,";
            sql += "1 as tutruc,b.manhom,b.tenhc,a.stt as sttt ";
            sql += " from " + xxx + ".d_tutrucct a," + usr + ".d_dmbd b," + usr + ".d_dmkho c," + usr + ".d_dmnguon d," + usr + ".d_dmnhom e," + xxx + ".d_theodoi t";
            sql += " where a.mabd=b.id and b.manhom=e.id and a.makho=c.id and t.manguon=d.id and a.makp=" + makp;
            sql += " and a.makho=c.id and a.stt=t.id and e.theodoi=1";
            if (tutruc == 1) sql += " and b.tutruc=1";
            if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
            if (manguon != "") sql += " and t.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
            sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + usr + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.stt,a.makho,a.mabd,t.manguon,sum(a.slxuat) as soluong from " + xxx + ".d_tutrucct a," + usr + ".d_dmbd b," + usr + ".d_dmnhom c," + xxx + ".d_theodoi t where a.mabd=b.id and b.manhom=c.id and a.stt=t.id and a.slxuat>0 and a.makp=" + makp;
                sql += " and c.theodoi=1";
                if (tutruc == 1) sql += " and b.tutruc=1";
                if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
                if (manguon != "") sql += " and t.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
                sql += " group by a.stt,a.makho,a.mabd,t.manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "sttt=" + decimal.Parse(r["stt"].ToString()) + " and makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }
        public DataTable get_tutrucct_dutru_save(string mmyy, int makp, string makho, string manguon, int tutruc, int nhom)
        {
            sql = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,b.ten as tennguon,c.ten as tennhomcc from " + user + mmyy + ".d_tutrucct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + ".d_dmbd d," + user + mmyy + ".d_theodoi t where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.mabd=d.id and a.makp=" + makp;
            if (tutruc == 1) sql += " and d.tutruc=1";
            if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
            if (manguon != "") sql += " and t.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.makho,a.stt,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tutrucct a," + user + ".d_dmbd d," + user + mmyys + ".d_theodoi t where a.stt=t.id and a.mabd=d.id and a.slxuat>0 and a.makp=" + makp;
                if (tutruc == 1) sql += " and d.tutruc=1";
                if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
                if (manguon != "") sql += " and t.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
                sql += " group by a.makho,a.stt";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and stt=" + decimal.Parse(r["stt"].ToString()));
                    if (r1 != null) r1["slxuat"] = decimal.Parse(r1["slxuat"].ToString()) + decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoth(string mmyy, string makho, string kho, string manguon, int thuoc)
        {
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,c.ten as tenkho,a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end as soluong,b.id,a.makho,b.bhyt,a.manguon,b.mahc, e.ten as dungluc ";
            sql += ", b.gia_bh";
            sql += " from " + user + mmyy + ".d_tonkhoth a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d," + user + ".d_dmthoidiemdung e ";
            sql += " where a.mabd=b.id and a.makho=c.id and a.manguon=d.id and b.mathoidiemdung=e.id(+) ";
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
            sql += " and c.loai=" + thuoc;
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";

            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.makho,a.mabd,a.manguon,sum(a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth a," + user + ".d_dmkho b where a.makho=b.id and a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end>0";
                if (makho != "") sql += " and a.makho in (" + makho + ")";
                if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
                sql += " and b.loai=" + thuoc;
                sql += " group by a.makho,a.mabd,a.manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }

            return tmp;
        }

        public DataTable get_tonkhoct(string mmyy, string makho, string kho, string manguon, int thuoc, int nhom)
        {
            sql = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,t.tyle_ggia,t.st_ggia,b.ten as tennguon,c.ten as tennhomcc ";
            if (bGia_bh_quydinh) sql += ", case when dm.gia_bh>0 and dm.gia_bh > t.giamua then t.giamua else dm.gia_bh end as gia_bh";
            else sql += ", t.giamua as gia_bh ";
            sql += " from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + ".d_dmkho d," + user + mmyy + ".d_theodoi t, " + user + ".d_dmbd dm ";
            sql += " where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.makho=dm.id"; //binh 290611
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and t.manguon in (" + manguon + ")";
            sql += " and d.loai=" + thuoc;
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.makho,a.stt,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tonkhoct a," + user + ".d_dmkho d," + user + mmyys + ".d_theodoi t where a.stt=t.id and a.makho=d.id and a.slxuat>0";
                if (makho != "") sql += " and a.makho in (" + makho + ")";
                if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                if (manguon != "") sql += " and t.manguon in (" + manguon + ")";
                sql += " and d.loai=" + thuoc;
                sql += " group by a.makho,a.stt";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and stt=" + decimal.Parse(r["stt"].ToString()));
                    if (r1 != null) r1["slxuat"] = decimal.Parse(r1["slxuat"].ToString()) + decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }


        public DataTable get_tutructh(string mmyy, int makp, string makho, string kho, string manguon, int thuoc)
        {
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,c.ten as tenkho,a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end as soluong,b.id,a.makho,b.bhyt,a.manguon,b.mahc ";
            sql += " from " + user + mmyy + ".d_tutructh a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d where a.mabd=b.id and a.makho=c.id and a.manguon=d.id and a.makp=" + makp;
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
            sql += " and c.loai=" + thuoc;
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.makho,a.mabd,a.manguon,sum(a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tutructh a," + user + ".d_dmkho b where a.makho=b.id and a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end>0 and a.makp=" + makp;
                if (makho != "") sql += " and a.makho in (" + makho + ")";
                if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
                sql += " and b.loai=" + thuoc;
                sql += " group by a.makho,a.mabd,a.manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_tutrucct(string mmyy, int makp, string makho, string kho, string manguon, int thuoc, int nhom)
        {
            sql = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,t.tyle_ggia,t.st_ggia,b.ten as tennguon,c.ten as tennhomcc from " + user + mmyy + ".d_tutrucct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + ".d_dmkho d," + user + mmyy + ".d_theodoi t where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.makho=d.id and a.makp=" + makp;
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and t.manguon in (" + manguon + ")";
            sql += " and d.loai=" + thuoc;
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.makho,a.stt,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tutrucct a," + user + ".d_dmkho d," + user + mmyys + ".d_theodoi t where a.stt=t.id and a.makho=d.id and a.slxuat>0 and makp=" + makp;
                if (makho != "") sql += " and a.makho in (" + makho + ")";
                if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                if (manguon != "") sql += " and t.manguon in (" + manguon + ")";
                sql += " and d.loai=" + thuoc;
                sql += " group by a.makho,a.stt";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and stt=" + decimal.Parse(r["stt"].ToString()));
                    if (r1 != null) r1["slxuat"] = decimal.Parse(r1["slxuat"].ToString()) + decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        //Tu:23/07/2011
        public DataTable get_tutrucct(string mmyy, int makp, string makho, string kho, string manguon, string mabd, int nhom)
        {
            sql = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,t.tyle_ggia,t.st_ggia,b.ten as tennguon,c.ten as tennhomcc from " + user + mmyy + ".d_tutrucct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + ".d_dmkho d," + user + mmyy + ".d_theodoi t where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.makho=d.id and a.makp=" + makp;
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (manguon != "") sql += " and a.mabd in(" + mabd + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and t.manguon in (" + manguon + ")";
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.makho,a.stt,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tutrucct a," + user + ".d_dmkho d," + user + mmyys + ".d_theodoi t where a.stt=t.id and a.makho=d.id and a.slxuat>0 and makp=" + makp;
                if (makho != "") sql += " and a.makho in (" + makho + ")";
                if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                if (manguon != "") sql += " and t.manguon in (" + manguon + ")";
                sql += " group by a.makho,a.stt";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and stt=" + decimal.Parse(r["stt"].ToString()));
                    if (r1 != null) r1["slxuat"] = decimal.Parse(r1["slxuat"].ToString()) + decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }
       
        public DataTable get_tonkhoth_dutru_bhyt(int nhom, string mmyy, string makho, string manguon, int madoituong, bool locdichvu)
        {
            if (bCapnhat_tonkho(nhom))
            {
                sql = "select id from " + user + ".d_dmkho where hide=0 and nhom=" + nhom;
                if (makho != "") sql += " and id in (" + makho.Substring(0, makho.Length - 1) + ")";
                foreach (DataRow r in get_data(sql).Tables[0].Rows) upd_tonkho(mmyy, int.Parse(r["id"].ToString()));
            }
            int sole = d_soluong_le(nhom);
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,c.ten||' ['||round(b.bhyt,0)||']' as tenkho,trunc(a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end," + sole + ") as soluong,b.id,a.makho,b.bhyt,b.mahc,a.manguon,0 as tutruc,b.donvidung,b.madoituong, e.ten as dungluc, b.ketoa, b.dongia, b.gia_bh, b.giaban,d.mien ";//gam 28/09/2011 them d.mien
            sql += ", case when f.captoa is null then to_number('0') else f.captoa end as captoa";
            sql += " from " + user + mmyy + ".d_tonkhoth a inner join " + user + ".d_dmbd b on a.mabd=b.id inner join " + user + ".d_dmkho c on a.makho=c.id ";
            sql += " inner join " + user + ".d_dmnguon d on a.manguon=d.id left join " + user + ".d_dmthoidiemdung e on b.mathoidiemdung=e.id ";
            sql += " left join " + user + ".d_dmloai f on b.maloai=f.id ";
            sql += " where c.nhom=" + nhom;
            if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
            if (manguon != "") sql += " and a.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
            if (madoituong == 1 && locdichvu) sql += " and b.bhyt<>0";            
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            string mmyys = "";
            DataRow r1;
            if (bKhongkiemtraXuatthangsau(nhom))
            {
                foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
                {
                    mmyys = r2["mmyy"].ToString();
                    sql = "select a.makho,a.mabd,a.manguon,sum(a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth a," + user + ".d_dmbd b where a.mabd=b.id and a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end>0";
                    if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
                    if (manguon != "") sql += " and a.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
                    if (madoituong == 1) sql += " and b.bhyt<>0";
                    sql += " group by a.makho,a.mabd,a.manguon";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                        if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return tmp;

        }

        public DataTable get_tonkhoth_dutru_bhyt(int nhom, string mmyy, string makho, string makho_kp, string manguon, int madoituong, bool locdichvu)
        {
            if (bCapnhat_tonkho(nhom))
            {
                sql = "select id from " + user + ".d_dmkho where hide=0 and nhom=" + nhom;
                if (makho != "") sql += " and id in (" + makho.Substring(0, makho.Length - 1) + ")";
                foreach (DataRow r in get_data(sql).Tables[0].Rows) upd_tonkho(mmyy, int.Parse(r["id"].ToString()));
            }
            int sole = d_soluong_le(nhom);
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,c.ten||' ['||round(b.bhyt,0)||']' as tenkho,trunc(a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end," + sole + ") as soluong,b.id,a.makho,b.bhyt,b.mahc,a.manguon,0 as tutruc,b.donvidung,b.madoituong, e.ten as dungluc, b.ketoa, b.dongia, b.gia_bh, b.giaban,d.mien ";//gam 28/09/2011 them d.mien
            sql += ", case when f.captoa is null then to_number('0') else f.captoa end as captoa";
            sql += " from " + user + mmyy + ".d_tonkhoth a inner join " + user + ".d_dmbd b on a.mabd=b.id inner join " + user + ".d_dmkho c on a.makho=c.id ";
            sql += " inner join " + user + ".d_dmnguon d on a.manguon=d.id left join " + user + ".d_dmthoidiemdung e on b.mathoidiemdung=e.id ";
            sql += " left join " + user + ".d_dmloai f on b.maloai=f.id ";
            sql += " where c.nhom=" + nhom;
            if (makho.Trim().Trim(',') != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
            if (makho_kp.Trim().Trim(',') != "") sql += " and a.makho in (" + makho_kp.Trim().Trim(',') + ")";
            if (manguon.Trim().Trim(',') != "") sql += " and a.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
            if (madoituong == 1 && locdichvu) sql += " and b.bhyt<>0";            
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            string mmyys = "";
            DataRow r1;
            if (bKhongkiemtraXuatthangsau(nhom))
            {
                foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
                {
                    mmyys = r2["mmyy"].ToString();
                    sql = "select a.makho,a.mabd,a.manguon,sum(a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth a," + user + ".d_dmbd b where a.mabd=b.id and a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end>0";
                    if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
                    if (manguon != "") sql += " and a.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
                    if (madoituong == 1) sql += " and b.bhyt<>0";
                    sql += " group by a.makho,a.mabd,a.manguon";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                        if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return tmp;

        }
        public DataTable get_tonkhoth_chuyen(string mmyy, string kho)
        {
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,c.ten as tenkho,a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end as soluong,b.id,a.makho,a.manguon,b.mahc ";
            sql += " from " + user + mmyy + ".d_tonkhoth a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d where a.mabd=b.id and a.makho=c.id and a.manguon=d.id";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            string mmyys = "";
            DataRow r1;
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select makho,mabd,manguon,sum(slxuat+case when slyeucau>0 then slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth where slxuat+case when slyeucau>0 then slyeucau else 0 end>0";
                if (kho != "") sql += " and makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                sql += " group by makho,mabd,manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoth(string mmyy, int makho)
        {
            upd_tonkho(mmyy, makho);
            sql = "select a.stt as stt,c.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,";
            sql += "b.dang,d.ten as tenhang,a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end as soluong,b.id,";
            sql += " a.manguon,a.makho,b.mahc,b.donvi,e.ten as tennuoc, f.ten as dungluc ";
            sql += " from " + user + mmyy + ".d_tonkhoth a," + user + ".d_dmbd b," + user + ".d_dmnguon c," + user + ".d_dmhang d," + user + ".d_dmnuoc e," + user + ".d_dmthoidiemdung f ";
            sql += " where a.mabd=b.id and a.manguon=c.id and b.mahang=d.id and b.manuoc=e.id and b.mathoidiemdung=f.id(+) and a.makho=" + makho;
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            string mmyys = "";
            DataRow r1;
            if (bKhongkiemtraXuatthangsau(f_get_nhomkho(makho)))
            {
                foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
                {
                    mmyys = r2["mmyy"].ToString();
                    if (bMmyy(mmyys))
                    {
                        foreach (DataRow r in get_data("select mabd,manguon,sum(slxuat+case when slyeucau>0 then slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth where slnhap=0 and slxuat+case when slyeucau>0 then slyeucau else 0 end>0 and makho=" + makho + " group by mabd,manguon").Tables[0].Rows)
                        {
                            r1 = getrowbyid(tmp, "id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                            if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                        }
                    }
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoth(int nhom)
        {
            sql = "select id as stt,' ' as tennguon,ma,trim(ten)||' '||hamluong as ten,tenhc,dang,' ' as tenhang,0 as soluong,id,-1 as manguon,-1 as makho,mahc,' ' as donvi,' ' as tennuoc ";
            sql += " from " + user + ".d_dmbd where nhom=" + nhom;
            if (bSort_mabd) sql += " order by ma";
            else sql += " order by ten";
            return get_data(sql).Tables[0];
        }

        public DataTable get_tutructh(string mmyy, int makp, int makho)
        {
            sql = "select a.stt as stt,c.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,d.ten as tenhang,a.tondau+a.slnhap-a.slxuat-a.slyeucau as soluong,b.id,a.makp as makho,a.manguon,b.mahc ";
            sql+=" from " + user + mmyy + ".d_tutructh a," + user + ".d_dmbd b," + user + ".d_dmnguon c," + user + ".d_dmhang d where a.mabd=b.id and a.manguon=c.id and b.mahang=d.id   and a.makp=" + makp + " and a.makho=" + makho + " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            string mmyys = "";
            DataRow r1;
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                foreach (DataRow r in get_data("select mabd,manguon,sum(slxuat+slyeucau) as soluong from " + user + mmyys + ".d_tutructh where  slnhap=0 and slxuat+slyeucau>0 and makp=" + makp + " and makho=" + makho + "  group by mabd,manguon").Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        //Tu:20/07/2011
        public DataTable get_tutructh(string mmyy, int makp)
        {
            sql = "select a.stt as stt,c.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,d.ten as tenhang,a.tondau+a.slnhap-a.slxuat-a.slyeucau as soluong,b.id,a.makp,a.makho,a.manguon,b.mahc ";
            sql+=" from " + user + mmyy + ".d_tutructh a," + user + ".d_dmbd b," + user + ".d_dmnguon c," + user + ".d_dmhang d where a.mabd=b.id and a.manguon=c.id and b.mahang=d.id   and a.makp=" + makp + " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            string mmyys = "";
            DataRow r1;
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                foreach (DataRow r in get_data("select mabd,manguon,sum(slxuat+slyeucau) as soluong from " + user + mmyys + ".d_tutructh where  slnhap=0 and slxuat+slyeucau>0 and makp=" + makp + " group by mabd,manguon").Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }
        //end Tu

        public DataTable get_tonkhoth_bhyt_(string mmyy, string makho, string kho, string manguon, int madoituong)
        {
            sql = "select id from " + user + ".d_dmkho where hide=0 and id>0";
            if (makho != "") sql += " and id in (" + makho + ")";
            if (kho != "") sql += " and id in (" + kho.Substring(0, kho.Length - 1) + ")";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
                upd_tonkho(mmyy, int.Parse(r["id"].ToString()));
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,c.ten as tenkho,a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end as soluong,b.id,a.makho,b.giaban,a.manguon,b.mahc, e.ten as dungluc";
            sql += " from " + user + mmyy + ".d_tonkhoth a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d," + user + ".d_dmthoidiemdung e ";
            sql += " where a.mabd=b.id and a.makho=c.id and a.manguon=d.id and b.mathoidiemdung=e.id(+) ";
            if (madoituong == 1) sql += " and b.bhyt<>0";
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.makho,a.mabd,a.manguon,sum(a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth a," + user + ".d_dmbd b where a.mabd=b.id and a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end>0";
                if (madoituong == 1) sql += " and b.bhyt<>0";
                if (makho != "") sql += " and a.makho in (" + makho + ")";
                if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
                sql += " group by a.makho,a.mabd,a.manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }
        public DataTable get_tonkhoth_bhyt(string mmyy, string makho, string kho, string manguon, int madoituong, int khudt)
        {
            sql = "select id from " + user + ".d_dmkho where hide=0 and id>0";
            if (makho != "") sql += " and id in (" + makho + ")";
            if (kho != "") sql += " and id in (" + kho.Substring(0, kho.Length - 1) + ")";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
                upd_tonkho(mmyy, int.Parse(r["id"].ToString()));
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,c.ten as tenkho,a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end as soluong,b.id,a.makho,b.giaban,a.manguon,b.mahc, e.ten as dungluc";
            sql += " from " + user + mmyy + ".d_tonkhoth a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d," + user + ".d_dmthoidiemdung e ";
            sql += " where a.mabd=b.id and a.makho=c.id and a.manguon=d.id and b.mathoidiemdung=e.id(+) ";
            if (madoituong == 1) sql += " and b.bhyt<>0";
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
            if (khudt != 0) sql += " and(c.khu=0 or c.khu=" + khudt + ")";//binh 210411
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.makho,a.mabd,a.manguon,sum(a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth a," + user + ".d_dmbd b where a.mabd=b.id and a.slxuat+case when a.slyeucau>0 then a.slyeucau else 0 end>0";
                if (madoituong == 1) sql += " and b.bhyt<>0";
                if (makho != "") sql += " and a.makho in (" + makho + ")";
                if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
                sql += " group by a.makho,a.mabd,a.manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoth(string mmyy, string makho, string kho, string manguon)
        {
            bool bGiaban_noi_ngoai = bGiaban_noi_ngtru(get_nhomkho);
            sql = "select id from " + user + ".d_dmkho where hide=0 and id>0";
            if (makho != "") sql += " and id in (" + makho + ")";
            if (kho != "") sql += " and id in (" + kho.Substring(0, kho.Length - 1) + ")";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
                upd_tonkho(mmyy, int.Parse(r["id"].ToString()));
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,";
            sql += "c.ten as tenkho,a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end as soluong,";
            if (bGiaban_noi_ngoai) sql += "b.giaban2 as giaban,";
            else sql += "b.giaban,";
            sql += "b.id,a.makho,a.manguon,b.mahc, e.ten as dungluc ";
            sql += " from " + user + mmyy + ".d_tonkhoth a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d, " + user + ".d_dmthoidiemdung e ";
            sql += " where a.mabd=b.id and a.makho=c.id and b.mathoidiemdung=e.id(+) and a.manguon=d.id";
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            if (bKhongkiemtraXuatthangsau(f_get_nhomkho(makho)))
            {
                foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
                {
                    mmyys = r2["mmyy"].ToString();
                    sql = "select makho,mabd,manguon,sum(slxuat+case when slyeucau>0 then slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth where slxuat+slyeucau>0";
                    if (makho != "") sql += " and makho in (" + makho + ")";
                    if (kho != "") sql += " and makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                    if (manguon != "") sql += " and manguon in (" + manguon + ")";
                    sql += " group by makho,mabd,manguon";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                        if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoth_xuatban(string mmyy, string makho, string kho, string manguon)
        {
            bool bGiaban_noi_ngoai = bGiaban_noi_ngtru(get_nhomkho);
            sql = "select id from " + user + ".d_dmkho where hide=0 and id>0";
            if (makho.Trim().Trim(',') != "") sql += " and id in (" + makho.Trim().Trim(',') + ")";
            if (kho.Trim().Trim(',') != "") sql += " and id in (" + kho.Trim().Trim(',') + ")";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                upd_tonkho(mmyy, int.Parse(r["id"].ToString()));
            }
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,";
            sql += "c.ten as tenkho,a.tondau+a.slnhap-a.slxuat as soluong,";
            if (bGiaban_noi_ngoai) sql += "b.giaban2 as giaban,";
            else sql += "b.giaban,";
            sql += "b.id,a.makho,a.manguon,b.mahc, e.ten as dungluc ";
            sql += " from " + user + mmyy + ".d_tonkhoth a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d, " + user + ".d_dmthoidiemdung e ";
            sql += " where a.mabd=b.id and a.makho=c.id and b.mathoidiemdung=e.id(+) and a.manguon=d.id";
            if (makho.Trim().Trim(',') != "") sql += " and a.makho in (" + makho.Trim().Trim(',') + ")";
            if (kho.Trim().Trim(',') != "") sql += " and a.makho in (" + kho.Trim().Trim(',') + ")";
            if (manguon.Trim().Trim(',') != "") sql += " and a.manguon in (" + manguon.Trim().Trim(',') + ")";
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";

            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select makho,mabd,manguon,sum(slxuat+case when slyeucau>0 then slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth where slxuat+slyeucau>0";
                if (makho.Trim().Trim(',') != "") sql += " and makho in (" + makho.Trim().Trim(',') + ")";
                if (kho.Trim().Trim(',') != "") sql += " and makho in (" + kho.Trim().Trim(',') + ")";
                if (manguon.Trim().Trim(',') != "") sql += " and manguon in (" + manguon.Trim().Trim(',') + ")";
                sql += " group by makho,mabd,manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoth(string mmyy, string makho, string kho, string manguon, bool bTonao)
        {
            bool bGiaban_noi_ngoai = bGiaban_noi_ngtru(get_nhomkho);
            sql = "select id from " + user + ".d_dmkho where hide=0 and id>0";
            if (makho.Trim().Trim(',') != "") sql += " and id in (" + makho.Trim().Trim(',') + ")";
            if (kho.Trim().Trim(',') != "") sql += " and id in (" + kho.Trim().Trim(',') + ")";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
                upd_tonkho(mmyy, int.Parse(r["id"].ToString()));
            sql = "select a.stt as stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,";
            sql += "c.ten as tenkho,a.tondau+a.slnhap-a.slxuat- " + ((bTonao) ? "case when a.slyeucau>0 then a.slyeucau else 0 end " : "0") + " as soluong, ";
            if (bGiaban_noi_ngoai) sql += "b.giaban2, b.giaban,";
            else sql += "b.giaban2, b.giaban,";
            sql += "b.id,a.makho,a.manguon,b.mahc, e.ten as dungluc ";
            sql += " from " + user + mmyy + ".d_tonkhoth a," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d, " + user + ".d_dmthoidiemdung e ";
            sql += " where a.mabd=b.id and a.makho=c.id and b.mathoidiemdung=e.id(+) and a.manguon=d.id";
            if (makho.Trim().Trim(',') != "") sql += " and a.makho in (" + makho.Trim().Trim(',') + ")";
            if (kho.Trim().Trim(',') != "") sql += " and a.makho in (" + kho.Trim().Trim(',') + ")";
            if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            if (bKhongkiemtraXuatthangsau(f_get_nhomkho(makho)))
            {
                foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
                {
                    mmyys = r2["mmyy"].ToString();
                    sql = "select makho,mabd,manguon,sum(slxuat+case when slyeucau>0 then slyeucau else 0 end) as soluong from " + user + mmyys + ".d_tonkhoth where slxuat+slyeucau>0";
                    if (makho.Trim().Trim(',') != "") sql += " and makho in (" + makho.Trim().Trim(',') + ")";
                    if (kho.Trim().Trim(',') != "") sql += " and makho in (" + kho.Trim().Trim(',') + ")";
                    if (manguon.Trim().Trim(',') != "") sql += " and manguon in (" + manguon.Trim().Trim(',') + ")";
                    sql += " group by makho,mabd,manguon";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                        if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                    }
                }
            }
            return tmp;
        }
        public DataTable get_tonkhoth_dotnhap(string mmyy, string makho, string kho, string manguon, bool bTonao)
        {
            bool bGiaban_noi_ngoai = bGiaban_noi_ngtru(get_nhomkho);
            sql = "select id from " + user + ".d_dmkho where hide=0 and id>0";
            if (makho != "") sql += " and id in (" + makho + ")";
            if (kho != "") sql += " and id in (" + kho.Substring(0, kho.Length - 1) + ")";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
                upd_tonkho(mmyy, int.Parse(r["id"].ToString()));
            sql = "select a.stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,";
            sql += "c.ten as tenkho,a.tondau+a.slnhap-a.slxuat- " + ((bTonao) ? "case when a.slyeucau>0 then a.slyeucau else 0 end " : "0") + " as soluong, ";
            if (bGiaban_noi_ngoai) sql += "b.giaban2 as giaban,";
            else sql += "f.giaban,";
            sql += " b.id,a.makho,f.manguon,b.mahc, e.ten as dungluc ";
            sql += " from " + user + mmyy + ".d_tonkhoct a," + user + mmyy + ".d_theodoi f ," + user + ".d_dmbd b," + user + ".d_dmkho c," + user + ".d_dmnguon d, " + user + ".d_dmthoidiemdung e ";
            sql += " where a.stt=f.id and a.mabd=b.id and a.makho=c.id and b.mathoidiemdung=e.id(+) and f.manguon=d.id ";
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and f.manguon in (" + manguon + ")";
            if (bSort_mabd) sql += " order by b.ma, a.stt";
            else sql += " order by b.ten, a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";

            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.stt, a.makho,a.mabd,b.manguon,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tonkhoct a inner join " + user + mmyys + ".d_theodoi b on a.stt=b.id where a.slxuat>0";
                if (makho != "") sql += " and a.makho in (" + makho + ")";
                if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                if (manguon != "") sql += " and b.manguon in (" + manguon + ")";
                sql += " group by a.stt,a.makho,a.mabd,b.manguon";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "stt=" + r["stt"].ToString() + " and makho=" + int.Parse(r["makho"].ToString()) + " and id=" + int.Parse(r["mabd"].ToString()) + " and manguon=" + int.Parse(r["manguon"].ToString()));
                    if (r1 != null) r1["soluong"] = decimal.Parse(r1["soluong"].ToString()) - decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }

        public DataTable get_tonkhoct(string mmyy, string makho, string kho, string manguon, int nhom)
        {
            sql = "select a.*,t.manguon,t.nhomcc,t.handung,t.losx,t.giamua,t.giaban,b.ten as tennguon,c.ten as tennhomcc ";
            if (bGia_bh_quydinh) sql += ", case when dm.gia_bh>0 and dm.gia_bh > t.giamua then t.giamua else dm.gia_bh end as gia_bh";
            else sql += ", t.giamua as gia_bh ";
            sql += " from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmnguon b," + user + ".d_dmnx c," + user + mmyy + ".d_theodoi t, " + user + ".d_dmbd dm ";
            sql += " where a.stt=t.id and t.manguon=b.id and t.nhomcc=c.id and a.mabd=dm.id ";
            if (makho != "") sql += " and a.makho in (" + makho + ")";
            if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
            if (manguon != "") sql += " and a.manguon in (" + manguon + ")";
            if (bNhaptruocxuat(nhom)) sql += " order by a.stt";
            else sql += " order by substring(t.handung,3,2) ,substring(t.handung,1,2),a.stt";
            DataTable tmp = get_data(sql).Tables[0];
            DataRow r1;
            string mmyys = "";
            foreach (DataRow r2 in get_data("select mmyy from " + user + ".table where substr(mmyy,3,2)||substr(mmyy,1,2)>'" + mmyy.Substring(2, 2) + mmyy.Substring(0, 2) + "'").Tables[0].Rows)
            {
                mmyys = r2["mmyy"].ToString();
                sql = "select a.makho,a.stt,sum(a.slxuat) as soluong from " + user + mmyys + ".d_tonkhoct a," + user + ".d_dmkho d," + user + mmyys + ".d_theodoi t where a.stt=t.id and a.makho=d.id and a.slxuat>0";
                if (makho != "") sql += " and a.makho in (" + makho + ")";
                if (kho != "") sql += " and a.makho in (" + kho.Substring(0, kho.Length - 1) + ")";
                if (manguon != "") sql += " and t.manguon in (" + manguon + ")";
                sql += " group by a.makho,a.stt";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(tmp, "makho=" + int.Parse(r["makho"].ToString()) + " and stt=" + decimal.Parse(r["stt"].ToString()));
                    if (r1 != null) r1["slxuat"] = decimal.Parse(r1["slxuat"].ToString()) + decimal.Parse(r["soluong"].ToString());
                }
            }
            return tmp;
        }


        public decimal get_tyle(int mabd)
        {
            ds = get_data("select tyle from " + user + ".d_dmbd where id=" + mabd);
            if (ds.Tables[0].Rows.Count > 0) return decimal.Parse(ds.Tables[0].Rows[0]["tyle"].ToString());
            else return 0;
        }

        public void upd_tonkhoth(string tt, string mmyy, int makho, int mabd, int manguon, decimal soluong, string fie)
        {
            if (tt == delete) execute_data("update " + user + mmyy + ".d_tonkhoth set " + fie + "=" + fie + "-(" + soluong + ") where makho=" + makho + " and mabd=" + mabd + " and manguon=" + manguon);
            else if (tt == insert) upd_tonkhoth(mmyy, makho, manguon, mabd, soluong, fie);
        }

        public void upd_tutructh(string tt, string mmyy, int makp, int makho, int mabd, int manguon, decimal soluong, string fie)
        {
            if (tt == delete) execute_data("update " + user + mmyy + ".d_tutructh set " + fie + "=" + fie + "-(" + soluong + ") where makp=" + makp + " and makho=" + makho + " and mabd=" + mabd + " and manguon=" + manguon);
            else if (tt == insert) upd_tutructh(mmyy, makp, makho, manguon, mabd, soluong, fie);
        }

        public void upd_tonkhoct_nhapct_kiemtra(string tt, string mmyy, string ngay, decimal idn, int sttn, decimal soluong, int makho, int manguon, int nhomcc, int mabd, string handung, string losx, decimal giaban, decimal giamua, decimal tyle_ggia, decimal st_ggia)
        {
            if (tt == delete)
                execute_data("update " + user + mmyy + ".d_tonkhoct set slnhap=slnhap-(" + soluong + ") where idn=" + idn + " and sttn=" + sttn + " and makho=" + makho);
            else if (tt == insert) upd_tonkhoct(mmyy, makho, manguon, nhomcc, idn, sttn, mabd, handung, losx, soluong, giaban, giamua, tyle_ggia, st_ggia, "slnhap");
            upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slnhap");
        }

        public void upd_tonkhoct_nhapct(string tt, string mmyy, string ngay, decimal idn, int sttn, decimal soluong,
            decimal sotien, int vat, int makho, int manguon, int nhomcc, int mabd, string handung, string losx,
            decimal giaban, string namsx, decimal cuocvc, decimal chaythu, string loai, int baohanh,
            int nguongoc, int tinhtrang, int nhom, string sothe, decimal tyle, int thuoc, decimal chietkhau,
            decimal giaban2, decimal dongia, decimal sotienvat, decimal tyle_ggia, decimal st_ggia, decimal gianovat, bool bGiaban_danhmuc,string sodangky)
        {
            int iround = d_thanhtien_le(nhom);
            if (tt == delete)
            {
                execute_data("update " + user + mmyy + ".d_tonkhoct set slnhap=slnhap-(" + soluong + ") where idn=" + idn + " and sttn=" + sttn + " and makho=" + makho);
                if (loai == "M")
                {
                    decimal st = sotien + sotien * vat / 100 + cuocvc + chaythu - st_ggia;
                    execute_data("update " + user + mmyy + ".d_thanhtoan set sotien=sotien-(" + st + ") where id=" + idn);
                }
            }
            else if (tt == insert)
            {
                decimal sttt = upd_tonkhoct(mmyy, makho, manguon, nhomcc, idn, sttn, mabd, handung, losx, soluong, giaban, (sotien + sotien * vat / 100 + cuocvc + chaythu - st_ggia) / soluong, tyle_ggia, st_ggia, "slnhap");
                if (loai == "M")
                {
                    upd_thanhtoan_mmyy(mmyy, idn, sotien + sotien * vat / 100 + cuocvc + chaythu - st_ggia, sotien);
                    if (giaban > 0 && st_ggia == 0) upd_theodoigia(mmyy, mabd, ngay, (sotien + sotien * vat / 100 + cuocvc + chaythu) / soluong);
                }
                if (giaban > 0 && sotien != 0 && st_ggia == 0 && !bGiaban_danhmuc) execute_data("update " + user + ".d_dmbd set dongia=" + (sotien + sotien * vat / 100 + cuocvc + chaythu) / soluong + ",giaban=" + giaban + ",giaban2=" + giaban2 + " where id=" + mabd);
                else execute_data("update " + user + ".d_dmbd set dongia=" + (sotien + sotien * vat / 100 + cuocvc + chaythu) / soluong + " where id=" + mabd);
                if (thuoc == 2) upd_theodoitscd(mmyy, sttt, decimal.Parse(ngay.Substring(6, 4)), tyle, 0);
                upd_theodoi(mmyy, sttt, mabd, manguon, nhomcc, handung, losx, sothe, "", "", baohanh, nguongoc, tinhtrang, (sotien + sotien * vat / 100 + cuocvc + chaythu - st_ggia) / soluong, giaban, chietkhau, giaban2, (gianovat == 0) ? sotien / soluong : gianovat, tyle_ggia, st_ggia,sodangky);
            }
            upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slnhap");
        }

        public void upd_tonkhoct_xuatct(string tt, string mmyy, string loai, int khox, int khon, decimal stt, int manguon, int nhomcc, int mabd, string handung, string losx, decimal soluong, decimal sotien, decimal giaban, decimal giamua)
        {
            if (tt == delete)
            {
                if (loai == "CK" || loai == "BS" || loai == "XK" || loai == "LC")//linh lc
                {
                    execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat-(" + soluong + ") where makho=" + khox + " and stt=" + stt);
                    upd_tonkhoth(tt, mmyy, khox, mabd, manguon, soluong, "slxuat");
                }
                else if (loai == "TH" || loai == "HT")
                {
                    execute_data("update " + user + mmyy + ".d_tutrucct set slxuat=slxuat-(" + soluong + ") where makp=" + khox + " and makho=" + khon + " and stt=" + stt);
                    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slxuat");
                }
                else if (loai == "TT")//Tu:20/07/2011 xuat chuyen tu truc nay sang tu truc khac loai="TT"
                {
                    //tu truc xuat
                    execute_data("update " + user + mmyy + ".d_tutrucct set slxuat=slxuat+(" + soluong + ") where makp=" + khox + " and makho=" + khon + " and stt=" + stt);
                    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, (-soluong), "slxuat");
                }//end Tu
                if (loai == "CK" || loai == "TH" || loai == "HT" || loai == "NC")//linh :nc
                {
                    execute_data("update " + user + mmyy + ".d_tonkhoct set slnhap=slnhap-(" + soluong + ")	where makho=" + khon + " and stt=" + stt);
                    upd_tonkhoth(tt, mmyy, khon, mabd, manguon, soluong, "slnhap");
                }
                else if (loai == "BS")
                {
                    execute_data("update " + user + mmyy + ".d_tutrucct set slnhap=slnhap-(" + soluong + ")	where makp=" + khon + " and makho=" + khox + " and stt=" + stt);
                    upd_tutructh(tt, mmyy, khon, khox, mabd, manguon, soluong, "slnhap");
                }
                //else if (loai == "TT")
                //{
                //    //tu truc xuat
                //    execute_data("update " + user + mmyy + ".d_tutrucct set slxuat=slxuat-(" + soluong + ")	where makp=" + khon + " and makho=" + khox + " and stt=" + stt);
                //    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slxuat");
                //}
            }
            else if (tt == insert)
            {
                if (loai == "CK" || loai == "BS" || loai == "XK" || loai == "CD" || loai == "LC")//linh lc
                {
                    execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat+" + soluong + "	where makho=" + khox + " and stt=" + stt);
                    upd_tonkhoth(tt, mmyy, khox, mabd, manguon, soluong, "slxuat");
                }
                else if (loai == "TH" || loai == "HT")
                {
                    execute_data("update " + user + mmyy + ".d_tutrucct set slxuat=slxuat+" + soluong + " where makp=" + khox + " and makho=" + khon + " and stt=" + stt);
                    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slxuat");
                }
                //else if (loai == "TT")//Tu:20/07/2011 xuat chuyen tu truc nay sang tu truc khac loai="TT"
                //{
                //    //tu truc nhan ve
                //    execute_data("update " + user + mmyy + ".d_tutrucct set slnhap=slnhap+" + soluong + " where makp=" + khox + " and makho=" + khon + " and stt=" + stt);
                //    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slnhap");
                //}//end Tu
                if (loai == "CK" || loai == "TH" || loai == "HT" || loai == "NC")//linh nc
                {
                    upd_tonkhoct(mmyy, khon, stt, mabd, soluong, "slnhap");
                    upd_tonkhoth(tt, mmyy, khon, mabd, manguon, soluong, "slnhap");
                }
                else if (loai == "BS")
                {
                    upd_tutrucct(mmyy, khon, khox, stt, mabd, soluong, "slnhap");
                    upd_tutructh(tt, mmyy, khon, khox, mabd, manguon, soluong, "slnhap");
                }
                else if (loai == "TT")
                {
                    //tu truc nhan
                    upd_tutrucct(mmyy, khox, khon, stt, mabd, soluong, "slnhap");
                    upd_tutructh(tt, mmyy, khox, khon, mabd, manguon, soluong, "slnhap");
                }
            }
        }

        public void upd_tonkhoct_xuat(string tt, string mmyy, decimal stt, int makho, int manguon, int nhomcc, int mabd, string handung, string losx, decimal soluong, decimal sotien, decimal giaban, decimal giamua)
        {
            if (tt == delete)
                execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat-(" + soluong + ") where makho=" + makho + " and stt=" + stt);
            else if (tt == insert)
                upd_tonkhoct(mmyy, makho, stt, mabd, soluong, "slxuat");
            upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slxuat");
        }

        public void upd_tonkhoct_chuyen(string tt, string mmyy, decimal stt, int makho, int manguon, int nhomcc, int mabd, string handung, string losx, decimal soluong, decimal sotien, decimal giaban, decimal giamua, int nguonchuyen, decimal sttchuyen)
        {
            if (tt == delete)
            {
                execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat-(" + soluong + ") where makho=" + makho + " and stt=" + stt);
                execute_data("update " + user + mmyy + ".d_tonkhoct set slnhap=slnhap-(" + soluong + ") where makho=" + makho + " and stt=" + sttchuyen);
            }
            else if (tt == insert)
            {
                execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat+" + soluong + " where makho=" + makho + " and stt=" + stt);
                upd_tonkhoct(mmyy, makho, sttchuyen, mabd, soluong, "slnhap");
            }
            upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slxuat");
            upd_tonkhoth(tt, mmyy, makho, mabd, nguonchuyen, soluong, "slnhap");
        }

        public void upd_tonkhoth_dutru(string tt, int nhom, string mmyy, int makho, int manguon, int mabd, decimal soluong)
        {
            if (bTru_tonao(nhom))
            {
                string skho_truao = kho_truao(nhom);
                if (skho_truao.IndexOf(makho.ToString() + ",") != -1 || skho_truao == "")
                {
                    if (tt == dutru || tt == insert) execute_data("update " + user + mmyy + ".d_tonkhoth set slyeucau=slyeucau+" + soluong + " where makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd);
                    else if (tt == duyet || tt == delete) execute_data("update " + user + mmyy + ".d_tonkhoth set slyeucau=slyeucau-(" + soluong + ") where makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd);
                }
            }
        }

        public void upd_tonkhoth_dutru(string tt, int nhom, string mmyy, int makho, int manguon, int mabd, decimal soluong, int d_idchinhanh)
        {
            if (bTru_tonao(nhom))
            {
                string s_dblink_cn = (d_idchinhanh <= 0) ? "" : getDBLink(d_idchinhanh);
                if (s_dblink_cn.Trim().Trim('@') != "") s_dblink_cn = "@" + s_dblink_cn.Trim().Trim('@');
                else s_dblink_cn = "";
                //
                string skho_truao = kho_truao(nhom);
                if (skho_truao.IndexOf(makho.ToString() + ",") != -1 || skho_truao == "")
                {
                    if (tt == dutru || tt == insert) execute_data("update " + user + mmyy + ".d_tonkhoth" + s_dblink_cn + " set slyeucau=slyeucau+" + soluong + " where makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd);
                    else if (tt == duyet || tt == delete) execute_data("update " + user + mmyy + ".d_tonkhoth" + s_dblink_cn + " set slyeucau=slyeucau-(" + soluong + ") where makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd);
                }
            }
        }

        public void upd_tonkhoct_thucxuat(string tt, string mmyy, int makp, int loai, int thuoc, decimal stt, int makho, int manguon, int mabd, decimal soluong)
        {
            if (tt == delete)
            {
                if (thuoc == 1)
                {
                    if (loai == 1 || loai == 4)
                    {
                        execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat-(" + soluong + ") where makho=" + makho + " and stt=" + stt);
                        upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slxuat");
                    }
                    else if (loai == 2)
                    {
                        execute_data("update " + user + mmyy + ".d_tutrucct set slxuat=slxuat-(" + soluong + ") where makp=" + makp + " and makho=" + makho + " and stt=" + stt);
                        upd_tutructh(tt, mmyy, makp, makho, mabd, manguon, soluong, "slxuat");
                    }
                    else
                    {
                        execute_data("update " + user + mmyy + ".d_tonkhoct set slnhap=slnhap-(" + soluong + ") where makho=" + makho + " and stt=" + stt);
                        upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slnhap");
                    }
                }
                else if (thuoc == 2)
                {
                    if (loai == 4)
                    {
                        execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat-(" + soluong + ") where makho=" + makho + " and stt=" + stt);
                        upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slxuat");
                        execute_data("update " + user + mmyy + ".d_tutrucct set slnhap=slnhap-(" + soluong + ") where makp=" + makp + " and makho=" + makho + " and stt=" + stt);
                        upd_tutructh(tt, mmyy, makp, makho, mabd, manguon, soluong, "slnhap");
                    }
                    else if (loai == 2)
                    {
                        execute_data("update " + user + mmyy + ".d_tutrucct set slnhap=slnhap-(" + soluong + ") where makp=" + makp + " and makho=" + makho + " and stt=" + stt);
                        upd_tutructh(tt, mmyy, makp, makho, mabd, manguon, soluong, "slnhap");
                    }
                    else if (loai == 3)
                    {
                        execute_data("update " + user + mmyy + ".d_tonkhoct set slnhap=slnhap-(" + soluong + ") where makho=" + makho + " and stt=" + stt);
                        upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slnhap");
                        execute_data("update " + user + mmyy + ".d_tutrucct set slxuat=slxuat-(" + soluong + ") where makp=" + makp + " and makho=" + makho + " and stt=" + stt);
                        upd_tutructh(tt, mmyy, makp, makho, mabd, manguon, soluong, "slxuat");
                    }
                }
            }
            else if (tt == insert)
            {
                if (thuoc == 1)
                {
                    if (loai == 1 || loai == 4)
                    {
                        execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat+" + soluong + " where makho=" + makho + " and stt=" + stt);
                        upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slxuat");
                    }
                    else if (loai == 2)
                    {
                        execute_data("update " + user + mmyy + ".d_tutrucct set slxuat=slxuat+" + soluong + " where makp=" + makp + " and makho=" + makho + " and stt=" + stt);
                        upd_tutructh(tt, mmyy, makp, makho, mabd, manguon, soluong, "slxuat");
                    }
                    else
                    {
                        upd_tonkhoct(mmyy, makho, stt, mabd, soluong, "slnhap");
                        upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slnhap");
                    }
                }
                else if (thuoc == 2)
                {
                    if (loai == 4)
                    {
                        upd_tonkhoct(mmyy, makho, stt, mabd, soluong, "slxuat");
                        upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slxuat");
                        upd_tutrucct(mmyy, makp, makho, stt, mabd, soluong, "slnhap");
                        upd_tutructh(tt, mmyy, makp, makho, mabd, manguon, soluong, "slnhap");
                    }
                    else if (loai == 2)
                    {
                        upd_tutrucct(mmyy, makp, makho, stt, mabd, soluong, "slnhap");
                        upd_tutructh(tt, mmyy, makp, makho, mabd, manguon, soluong, "slnhap");
                    }
                    else if (loai == 3)
                    {
                        upd_tutrucct(mmyy, makp, makho, stt, mabd, soluong, "slxuat");
                        upd_tutructh(tt, mmyy, makp, makho, mabd, manguon, soluong, "slxuat");
                        upd_tonkhoct(mmyy, makho, stt, mabd, soluong, "slnhap");
                        upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slnhap");
                    }
                }
            }
        }

        public void upd_tonkhoct_thucbucstt(string tt, string mmyy, int makp, decimal stt, int makho, int manguon, int nhomcc, int mabd, string handung, string losx, decimal soluong, decimal sotien, decimal giaban, decimal giamua)
        {
            if (tt == delete)
            {
                execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat-(" + soluong + ")	where makho=" + makho + " and stt=" + stt);
                execute_data("update " + user + mmyy + ".d_tutrucct set slnhap=slnhap-(" + soluong + ")	where makp=" + makp + " and makho=" + makho + " and stt=" + stt);
            }
            else if (tt == insert)
            {
                execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat+" + soluong + " where makho=" + makho + " and stt=" + stt);
                upd_tutrucct(mmyy, makp, makho, stt, mabd, soluong, "slnhap");
            }
            upd_tonkhoth(tt, mmyy, makho, mabd, manguon, soluong, "slxuat");
            upd_tutructh(tt, mmyy, makp, makho, mabd, manguon, soluong, "slnhap");
        }

        public void upd_tienthuoc(string tt, string mmyy, decimal id, string mabn, decimal mavaovien, decimal maql, decimal idkhoa, string ngay,
            int makp, int loai, int madoituong, int mabd, decimal soluong, decimal giaban, decimal giamua, decimal gianovat, int traituyen, decimal gia_bh, string mabs)
        {
            if (mabn == "") return;
            if (tt == delete)
            {
                if (loai == 1 || loai == 2 || loai == 4)
                    execute_data("update " + user + mmyy + ".d_tienthuoc set soluong=soluong-(" + soluong + ") where id=" + id + " and mabn='" + mabn + "' and maql=" + maql + " and idkhoa=" + idkhoa + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and makp=" + makp + " and madoituong=" + madoituong + " and mabd=" + mabd + " and giamua=" + giamua);
                else
                    execute_data("update " + user + mmyy + ".d_tienthuoc set soluong=soluong+" + soluong + " where id=" + id + " and mabn='" + mabn + "' and maql=" + maql + " and idkhoa=" + idkhoa + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and makp=" + makp + " and madoituong=" + madoituong + " and mabd=" + mabd + " and giamua=" + giamua);
            }
            else if (tt == insert)
            {
                if (loai == 1 || loai == 2 || loai == 4)
                {
                    upd_tienthuoc(mmyy, id, mabn, mavaovien, maql, idkhoa, ngay, makp, madoituong, mabd, soluong, giaban, giamua, gianovat, gia_bh, mabs);
                }
                else
                {
                    upd_tienthuoc(mmyy, id, mabn, mavaovien, maql, idkhoa, ngay, makp, madoituong, mabd, -soluong, giaban, giamua, gianovat, gia_bh, mabs);
                }
                execute_data("update " + user + mmyy + ".d_tienthuoc set traituyen=" + traituyen + " where id=" + id);
                //

            }
        }
        //ThanhCuong - 06/08/2012 - Kỹ thuật cao
        public void upd_tienthuoc(string tt, string mmyy, decimal id, string mabn, decimal mavaovien, decimal maql, decimal idkhoa, string ngay,
            int makp, int loai, int madoituong, int mabd, decimal soluong, decimal giaban, decimal giamua, decimal gianovat, int traituyen, decimal gia_bh, string mabs,long id_ktcao)
        {
            if (mabn == "") return;
            if (tt == delete)
            {
                if (loai == 1 || loai == 2 || loai == 4)
                    execute_data("update " + user + mmyy + ".d_tienthuoc set soluong=soluong-(" + soluong + ") where id=" + id + " and mabn='" + mabn + "' and maql=" + maql + " and idkhoa=" + idkhoa + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and makp=" + makp + " and madoituong=" + madoituong + " and mabd=" + mabd + " and giamua=" + giamua + " and id_ktcao=" + id_ktcao);
                else
                    execute_data("update " + user + mmyy + ".d_tienthuoc set soluong=soluong+" + soluong + " where id=" + id + " and mabn='" + mabn + "' and maql=" + maql + " and idkhoa=" + idkhoa + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and makp=" + makp + " and madoituong=" + madoituong + " and mabd=" + mabd + " and giamua=" + giamua + " and id_ktcao=" + id_ktcao);
            }
            else if (tt == insert)
            {
                if (loai == 1 || loai == 2 || loai == 4)
                {
                    upd_tienthuoc(mmyy, id, mabn, mavaovien, maql, idkhoa, ngay, makp, madoituong, mabd, soluong, giaban, giamua, gianovat, gia_bh, mabs,id_ktcao);
                }
                else
                {
                    upd_tienthuoc(mmyy, id, mabn, mavaovien, maql, idkhoa, ngay, makp, madoituong, mabd, -soluong, giaban, giamua, gianovat, gia_bh, mabs,id_ktcao);
                }
                execute_data("update " + user + mmyy + ".d_tienthuoc set traituyen=" + traituyen + " where id=" + id + " and id_ktcao=" + id_ktcao);
                //

            }
        }
        //
        public bool upd_theodoiduyet(string mmyy, int nhom, string ngay, int loai, int makp)
        {
            sql = "update " + user + mmyy + ".d_theodoiduyet set nhom=:nhom where nhom=:nhom and to_char(ngay,'dd/mm/yyyy')=:ngay and loai=:loai and makp=:makp";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("nhom", NpgsqlDbType.Numeric).Value = nhom;
                //cmd.Parameters.Add("nhom", NpgsqlDbType.Numeric).Value = nhom;
                cmd.Parameters.Add("ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                cmd.Parameters.Add("loai", NpgsqlDbType.Numeric).Value = loai;
                cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_theodoiduyet(nhom,ngay,loai,makp) values ";
                    sql += "(:nhom,to_timestamp(:ngay,'dd/mm/yyyy'),:loai,:makp)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("nhom", NpgsqlDbType.Numeric).Value = nhom;
                    cmd.Parameters.Add("ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                    cmd.Parameters.Add("loai", NpgsqlDbType.Numeric).Value = loai;
                    cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_theodoiduyet");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_theodoiduyet_2(string mmyy, int nhom, string ngay, int loai, int makp, int d_userid, int d_phieu)
        {
            sql = "update " + user + mmyy + ".d_theodoiduyet set nhom=:nhom, phieu=:d_phieu, userid=:d_userid where nhom=:nhom and to_char(ngay,'dd/mm/yyyy')=:ngay and loai=:loai and makp=:makp";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("nhom", NpgsqlDbType.Numeric).Value = nhom;
                //cmd.Parameters.Add("nhom", NpgsqlDbType.Numeric).Value = nhom;
                cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                cmd.Parameters.Add("loai", NpgsqlDbType.Numeric).Value = loai;
                cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;

                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_theodoiduyet(nhom,ngay,loai,makp, userid, ngayud, phieu) values ";
                    sql += "(:nhom,to_timestamp(:ngay,'dd/mm/yyyy'),:loai,:makp, :d_userid,now(), :d_phieu)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("nhom", NpgsqlDbType.Numeric).Value = nhom;
                    cmd.Parameters.Add("ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                    cmd.Parameters.Add("loai", NpgsqlDbType.Numeric).Value = loai;
                    cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_theodoiduyet");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_thuhoi(string mmyy, int nhom, string ngay, int loai, int makp, int d_userid, int d_phieu)
        {
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();

                sql = "insert into " + user + mmyy + ".d_thuhoi(nhom,ngay,loai,makp, userid, ngayud, phieu) values ";
                sql += "(:nhom,to_timestamp(:ngay,'dd/mm/yyyy'),:loai,:makp, :d_userid, now(), :d_phieu)";
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("nhom", NpgsqlDbType.Numeric).Value = nhom;
                cmd.Parameters.Add("ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                cmd.Parameters.Add("loai", NpgsqlDbType.Numeric).Value = loai;
                cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_theodoiduyet");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public void kiemtratienthuoc(string s_mmyy, string b_mabn, decimal b_maql)
        {
            schema = user + s_mmyy + ".upd_tienthuoc_ktcao";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = b_mabn;
                cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = b_maql;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(s_mmyy, ex.Message, sComputer, "d_tienthuoc");
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
        }
        //d_duyet
        public void upd_theodoiduyet(string mmyy, string ngay, int nhom, int loai, int makp, int done)
        {
            if (done == 1) upd_theodoiduyet(mmyy, nhom, ngay, loai, makp);
            else execute_data("delete from " + user + mmyy + ".d_theodoiduyet where nhom=" + nhom + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and loai=" + loai + " and makp=" + makp);
        }
        public void upd_theodoiduyet_2(string mmyy, string ngay, int nhom, int loai, int makp, int done, int d_userid, int d_phieu)
        {
            if (done == 1) upd_theodoiduyet_2(mmyy, nhom, ngay, loai, makp, d_userid, d_phieu);
            else execute_data("delete from " + user + mmyy + ".d_theodoiduyet where nhom=" + nhom + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and loai=" + loai + " and makp=" + makp + " and phieu=" + d_phieu);
        }

        public void upd_theodoicongno(string tt, string mabn, decimal mavaovien, decimal maql, decimal idkhoa, int madoituong, decimal sotien, string fie)
        {
            if (tt == delete)
                execute_data("update " + user + ".v_theodoicongno set " + fie + "=" + fie + "-(" + sotien + ") where maql=" + maql + " and idkhoa=" + idkhoa + " and madoituong=" + madoituong);
            else
                upd_theodoicongno(mabn, mavaovien, maql, idkhoa, madoituong, sotien, fie);
        }

        public bool get_dutrucap(string mmyy, decimal id)
        {
            ds = get_data("select done from " + user + mmyy + ".d_dutrucapll where done=1 and id=" + id);
            return ds.Tables[0].Rows.Count > 0;
        }

        public string title(string tu, string den)
        {
            tu = tu.PadLeft(2, '0'); den = den.PadLeft(2, '0');
            if (tu == den) return "Tháng " + tu;
            else if (tu == "01")
            {
                if (den == "03") return "Quí 1";
                else if (den == "06") return "6 tháng đầu";
                else if (den == "12") return "";
                else return "Từ tháng " + tu + " đến " + den;
            }
            else if (tu == "04" && den == "06") return "Quí 2";
            else if (tu == "07" && den == "09") return "Quí 3";
            else if (tu == "10" && den == "12") return "Quí 4";
            else if (tu == "06" && den == "12") return "6 tháng sau";
            else return "Từ tháng " + tu + " đến " + den;
        }

        public bool kiemtra_xuatban(DataTable dt, int sotoa, string hoten)
        {
            return getrowbyid(dt, "sotoa=" + sotoa + " and hoten='" + hoten + "'") != null;
        }

        public int kiemtra_xuatban(DataTable dtll, DataTable dtct, string hoten, string mmyy)
        {
            int sotoa = 0; dtct.AcceptChanges();
            DataRow[] r = dtll.Select("hoten='" + hoten + "'", "sotoa desc");
            if (r.Length > 0)
            {
                string ma1 = "", ma2 = "";
                foreach (DataRow r1 in dtct.Select("soluong>0", "mabd,soluong")) ma1 = ma1 + r1["mabd"].ToString().Trim() + ";" + r1["soluong"].ToString().Trim() + ";";
                sql = "select mabd,soluong from " + user + mmyy + ".d_ngtruct where id=" + decimal.Parse(r[0]["id"].ToString()) + " order by mabd,soluong";
                foreach (DataRow r1 in get_data(sql).Tables[0].Rows) ma2 = ma2 + r1["mabd"].ToString().Trim() + ";" + r1["soluong"].ToString().Trim() + ";";
                if (ma1 == ma2) sotoa = int.Parse(r[0]["sotoa"].ToString());
            }
            return sotoa;
        }

        public string thongbao_baohiem(string mmyy, string mabn, string ngay)
        {
            sql = "select nvl(b.tenkp,'?') tenkp from " + user + mmyy + ".bhytkb a left join " + user + ".btdkp_bv b on a.makp=b.makp";
            sql += " where a.mabn='" + mabn + "' and to_char(a.ngay,'dd/mm/yyyy')='" + ngay + "'";
            sql += " order by a.ngayud";
            ds = get_data(sql);
            if (ds.Tables[0].Rows.Count == 0) return "";
            else return ds.Tables[0].Rows[0]["tenkp"].ToString().Trim().ToUpper();
        }

        public int kiemtra_baohiem(DataRow[] dr, string ngay, string mabn, string mmyy)
        {
            int sotoa = 0;
            sql = "select a.id,a.sotoa,b.mabd,b.soluong from " + user + mmyy + ".bhytkb a," + user + mmyy + ".bhytthuoc b where a.id=b.id and to_char(a.ngay,'dd/mm/yyyy')='" + ngay.Substring(0, 10) + "' and mabn='" + mabn + "' order by a.sotoa desc,a.ngay,b.mabd,b.soluong";
            DataTable dt = get_data(sql).Tables[0];
            if (dt.Rows.Count > 0)
            {
                string ma1 = "", ma2 = "";
                int toa = 0;
                decimal id = 0;
                foreach (DataRow r1 in dr) ma1 = ma1 + r1["mabd"].ToString().Trim() + ";" + r1["soluong"].ToString().Trim() + ";";
                foreach (DataRow r in dt.Rows)
                {
                    if (id != decimal.Parse(r["id"].ToString()))
                    {
                        toa = int.Parse(r["sotoa"].ToString());
                        id = decimal.Parse(r["id"].ToString());
                        ma2 = "";
                        foreach (DataRow r1 in dt.Select("id=" + id, "mabd,soluong")) ma2 = ma2 + r1["mabd"].ToString().Trim() + ";" + r1["soluong"].ToString().Trim() + ";";
                        if (ma1 != "" && ma2 != "")
                        {
                            if (ma2.Length > ma1.Length)
                            {
                                if (ma1.Substring(0, ma2.Length) == ma2)
                                {
                                    sotoa = toa;
                                    break;
                                }
                            }
                            else
                            {
                                if (ma2.Substring(0, ma1.Length) == ma1)
                                {
                                    sotoa = toa;
                                    break;
                                }
                            }
                        }
                    }
                }
            }
            return sotoa;
        }

        public bool upd_dmvay(decimal d_id, string d_ten, int d_nhom, decimal d_stt, int d_thanhpho)
        {
            sql = "update " + user + ".d_dmvay set ten=:d_ten,nhom=:d_nhom,stt=:d_stt,thanhpho=:d_thanhpho where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_thanhpho", NpgsqlDbType.Numeric).Value = d_thanhpho;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmvay (id,ten,nhom,stt,thanhpho) values ";
                    sql += "(:d_id,:d_ten,:d_nhom,:d_stt,:d_thanhpho)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_thanhpho", NpgsqlDbType.Numeric).Value = d_thanhpho;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dmvay");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tonvayct(int d_makp, int d_makho, int d_manguon, int d_nhomcc, decimal d_stt, int d_mabd, string d_handung, string d_losx, decimal d_tondau, decimal d_giaban, decimal d_giamua)
        {
            sql = "update " + user + ".d_tonvayct set manguon=:d_manguon,nhomcc=:d_nhomcc,mabd=:d_mabd,handung=:d_handung,losx=:d_losx,";
            sql += "tondau=:d_tondau,giaban=:d_giaban,giamua=:d_giamua ";
            sql += "where makp=:d_makp and makho=:d_makho and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                cmd.Parameters.Add("d_tondau", NpgsqlDbType.Numeric).Value = d_tondau;
                cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_tonvayct(makp,makho,stt,manguon,nhomcc,mabd,handung,losx,tondau,giaban,giamua) values ";
                    sql += "(:d_makp,:d_makho,:d_stt,:d_manguon,:d_nhomcc,:d_mabd,:d_handung,:d_losx,:d_tondau,:d_giaban,:d_giamua)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                    cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                    cmd.Parameters.Add("d_tondau", NpgsqlDbType.Numeric).Value = d_tondau;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    con.Close(); con.Dispose();
                    upd_dmbd_sudung(d_mabd);
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tonvayct");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tonvayth(int makp, int makho, int manguon, int mabd, decimal soluong, string fie)
        {
            sql = "update " + user + ".d_tonvayth set " + fie + "=" + fie + "+:soluong where makp=:makp and makho=:makho and manguon=:manguon and mabd=:mabd";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                cmd.Parameters.Add("manguon", NpgsqlDbType.Numeric).Value = manguon;
                cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_tonvayth(makp,makho,manguon,mabd," + fie + ") values ";
                    sql += "(:makp,:makho,:manguon,:mabd,:soluong)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                    cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                    cmd.Parameters.Add("manguon", NpgsqlDbType.Numeric).Value = manguon;
                    cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                    cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tonvayth");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tonvayct(int makp, int makho, int manguon, int nhomcc, decimal stt, int mabd, string handung, string losx, decimal soluong, decimal giaban, decimal giamua, string fie1)
        {
            sql = "update " + user + ".d_tonvayct set " + fie1 + "=" + fie1 + "+:soluong,";
            sql += "manguon=:manguon,nhomcc=:nhomcc,mabd=:mabd,handung=:handung,losx=:losx,";
            sql += "giaban=:giaban,giamua=:giamua ";
            sql += "where makp=:makp and makho=:makho and stt=:stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                cmd.Parameters.Add("manguon", NpgsqlDbType.Numeric).Value = manguon;
                cmd.Parameters.Add("nhomcc", NpgsqlDbType.Numeric).Value = nhomcc;
                cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                cmd.Parameters.Add("handung", NpgsqlDbType.Varchar, 10).Value = handung;
                cmd.Parameters.Add("losx", NpgsqlDbType.Varchar, 20).Value = losx;
                cmd.Parameters.Add("giaban", NpgsqlDbType.Numeric).Value = giaban;
                cmd.Parameters.Add("giamua", NpgsqlDbType.Numeric).Value = giamua;
                cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_tonvayct(manguon,nhomcc,stt,mabd,handung,losx,giaban,giamua,makp,makho," + fie1 + ") values ";
                    sql += "(:manguon,:nhomcc,:stt,:mabd,:handung,:losx,:giaban,:giamua,:makp,:makho,:soluong)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("manguon", NpgsqlDbType.Numeric).Value = manguon;
                    cmd.Parameters.Add("nhomcc", NpgsqlDbType.Numeric).Value = nhomcc;
                    cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                    cmd.Parameters.Add("mabd", NpgsqlDbType.Numeric).Value = mabd;
                    cmd.Parameters.Add("handung", NpgsqlDbType.Varchar, 10).Value = handung;
                    cmd.Parameters.Add("losx", NpgsqlDbType.Varchar, 20).Value = losx;
                    cmd.Parameters.Add("giaban", NpgsqlDbType.Numeric).Value = giaban;
                    cmd.Parameters.Add("giamua", NpgsqlDbType.Numeric).Value = giamua;
                    cmd.Parameters.Add("makp", NpgsqlDbType.Numeric).Value = makp;
                    cmd.Parameters.Add("makho", NpgsqlDbType.Numeric).Value = makho;
                    cmd.Parameters.Add("soluong", NpgsqlDbType.Numeric).Value = soluong;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    con.Close(); con.Dispose();
                    upd_dmbd_sudung(mabd);
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tonvayct");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public void upd_tonvayth(string tt, int makp, int makho, int mabd, int manguon, decimal soluong, string fie)
        {
            if (tt == delete) execute_data("update " + user + ".d_tonvayth set " + fie + "=" + fie + "-(" + soluong + ") where makp=" + makp + " and makho=" + makho + " and mabd=" + mabd + " and manguon=" + manguon);
            else if (tt == insert) upd_tonvayth(makp, makho, manguon, mabd, soluong, fie);
        }


        public bool upd_tonkhovay()
        {
            schema = user + ".upd_tonkhovay";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "tonvay");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public void upd_tonkhoct_vay(string tt, string mmyy, string loai, int khox, int khon, decimal stt, int manguon, int nhomcc, int mabd, string handung, string losx, decimal soluong, decimal giaban, decimal giamua)
        {
            if (tt == delete)
            {
                if (loai == "VA")
                {
                    execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat-(" + soluong + ")	where makho=" + khox + " and stt=" + stt);
                    upd_tonkhoth(tt, mmyy, khox, mabd, manguon, soluong, "slxuat");
                    execute_data("update " + user + ".d_tonvayct set slvay=slvay-(" + soluong + ")	where makp=" + khon + " and makho=" + khox + " and stt=" + stt);
                    upd_tonvayth(tt, khon, khox, mabd, manguon, soluong, "slvay");
                }
                else if (loai == "QT")
                {
                    execute_data("update " + user + ".d_tonvayct set slquyettoan=slquyettoan-(" + soluong + ")	where makp=" + khox + " and makho=" + khon + " and stt=" + stt);
                    upd_tonvayth(tt, khox, khon, mabd, manguon, soluong, "slquyettoan");
                }
            }
            else if (tt == insert)
            {
                if (loai == "VA")
                {
                    execute_data("update " + user + mmyy + ".d_tonkhoct set slxuat=slxuat+" + soluong + "	where makho=" + khox + " and stt=" + stt);
                    upd_tonkhoth(tt, mmyy, khox, mabd, manguon, soluong, "slxuat");
                    upd_tonvayct(khon, khox, manguon, nhomcc, stt, mabd, handung, losx, soluong, giaban, giamua, "slvay");
                    upd_tonvayth(tt, khon, khox, mabd, manguon, soluong, "slvay");
                }
                else if (loai == "QT")
                {
                    execute_data("update " + user + ".d_tonvayct set slquyettoan=slquyettoan+" + soluong + "	where makp=" + khox + " and makho=" + khon + " and stt=" + stt);
                    upd_tonvayth(tt, khox, khon, mabd, manguon, soluong, "slquyettoan");
                }
            }
        }

        public DataTable get_tonvayth(int makp, int makho)
        {
            sql = "select b.id as stt,c.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,d.ten as tenhang,a.tondau+a.slvay-a.slquyettoan as soluong,b.id,a.makp as makho,a.manguon,b.mahc from " + user + ".d_tonvayth a," + user + ".d_dmbd b," + user + ".d_dmnguon c," + user + ".d_dmhang d where a.mabd=b.id and a.manguon=c.id and b.mahang=d.id and a.makp=" + makp + " and a.makho=" + makho + " order by b.ten";
            return get_data(sql).Tables[0];
        }

        public bool get_dasuamadt(decimal maql, decimal idkhoa)
        {
            sql = "select maql,idkhoa from " + user + ".dasuamadt where maql=" + maql;
            if (idkhoa != 0) sql += " and idkhoa=" + idkhoa;
            ds = get_data(sql);
            return ds.Tables[0].Rows.Count > 0;
        }

        public void upd_laitienthuoc(string mabn, decimal maql, string ngayvao, string ngayra, bool kiemtra)
        {
            if (kiemtra && get_dasuamadt(maql, 0)) return;
            DateTime dt1 = StringToDate(ngayvao.Substring(0, 10)).AddDays(-iNgaykiemke);
            DateTime dt2 = StringToDate(ngayra.Substring(0, 10)).AddDays(iNgaykiemke);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            string mmyy = "";
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(mmyy)) kiemtratienthuoc(mmyy, mabn, maql);
                }
            }
        }

        public string get_stt(string ma, int nhom)
        {
            try
            {
                int l1 = ma.Length, l2 = l1 + 1;
                sql = "select max(substr(ma," + l2 + ")) as so from " + user + ".d_dmbd where substr(ma,1," + l1 + ")='" + ma + "' and nhom=" + nhom;
                ds = get_data(sql);
                if (ds.Tables[0].Rows.Count == 0) return "0";
                else return ds.Tables[0].Rows[0]["so"].ToString();
            }
            catch { return "0"; }
        }

        private int get_loai_doituong(int madoituong)
        {
            ds = get_data("select loai from " + user + ".d_doituong where madoituong=" + madoituong);
            if (ds.Tables[0].Rows.Count > 0) return int.Parse(ds.Tables[0].Rows[0]["loai"].ToString());
            else return 0;
        }

        public decimal get_dongia(string mmyy, int makp, int mabd, int makho, int manguon, int madoituong)
        {
            int fie = (get_loai_doituong(madoituong) == 0) ? 0 : 1;
            sql = "select t.giamua,t.giaban from " + user + mmyy + ".d_tutrucct a," + user + mmyy + ".d_theodoi t where a.stt=t.id and a.makp=" + makp + " and a.mabd=" + mabd + " and a.makho=" + makho + " and t.manguon=" + manguon;
            sql += " order by a.stt";
            ds = get_data(sql);
            if (ds.Tables[0].Rows.Count > 0) return decimal.Parse(ds.Tables[0].Rows[0][fie].ToString());
            else return 0;
        }

        public bool sothe_doituong(int madoituong)
        {
            return get_data("select * from " + user + ".doituong where sothe>0 and madoituong=" + madoituong).Tables[0].Rows.Count > 0;
        }

        public string get_chandoan(string mmyy, decimal id, int loai)
        {
            ds = get_data("select * from " + user + mmyy + ".d_chandoan where id=" + id + " and loai=" + loai);
            if (ds.Tables[0].Rows.Count > 0) return ds.Tables[0].Rows[0]["chandoan"].ToString().Trim();
            else return "";
        }

        #region Binh

        public bool check_open_Excel()
        {
            Process[] processes = Process.GetProcesses();
            bool ret = false;
            if (processes.Length > 1)
            {
                for (int i = 0; i <= processes.Length - 1; i++)
                {
                    if (((Process)processes[i]).ProcessName == "EXCEL")
                    {
                        ret = true;
                        break;
                    }
                }
            }
            return ret;
        }

        public void check_process_Excel()
        {
            Process[] processes = Process.GetProcesses();

            if (processes.Length > 1)
            {
                int i = 0;
                for (int n = 0; n <= processes.Length - 1; n++)
                {
                    if (((Process)processes[n]).ProcessName == "EXCEL")
                    {
                        i++;
                        ((Process)processes[n]).Kill();
                    }
                }
            }
        }
        #endregion

        public bool upd_dmlydotscd(int d_id, string d_ten, decimal d_stt, int d_nhom, int d_loai)
        {
            sql = "update " + user + ".d_dmlydotscd set ten=:d_ten,stt=:d_stt,nhom=:d_nhom,loai=:d_loai where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmlydotscd (id,ten,stt,nhom,loai) values ";
                    sql += "(:d_id,:d_ten,:d_stt,:d_nhom,:d_loai)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "dmlydotscd");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmloaitscd(int d_id, string d_ten, decimal d_stt, int d_nhom)
        {
            sql = "update " + user + ".d_dmloaitscd set ten=:d_ten,stt=:d_stt,nhom=:d_nhom where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.ExecuteNonQuery();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmloaitscd (id,ten,stt,nhom) values ";
                    sql += "(:d_id,:d_ten,:d_stt,:d_nhom)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.ExecuteNonQuery();
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "dmloaitscd");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmnguongoc(int d_id, string d_ten, decimal d_stt, int d_nhom)
        {
            sql = "update " + user + ".d_dmnguongoc set ten=:d_ten,stt=:d_stt,nhom=:d_nhom where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.ExecuteNonQuery();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmnguongoc (id,ten,stt,nhom) values ";
                    sql += "(:d_id,:d_ten,:d_stt,:d_nhom)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.ExecuteNonQuery();
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "dmnguongoc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmtinhtrang(int d_id, string d_ten, decimal d_stt, int d_nhom)
        {
            sql = "update " + user + ".d_dmtinhtrang set ten=:d_ten,stt=:d_stt,nhom=:d_nhom where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.ExecuteNonQuery();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmtinhtrang (id,ten,stt,nhom) values ";
                    sql += "(:d_id,:d_ten,:d_stt,:d_nhom)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.ExecuteNonQuery();
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "dmtinhtrang");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmnoisc(decimal d_id, string d_ma, string d_ten, decimal d_stt, string d_diachi, int d_nhom)
        {
            sql = "update " + user + ".d_dmnoisc set ma=:d_ma,ten=:d_ten,stt=:d_stt,diachi=:d_diachi,nhom=:d_nhom where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ma", NpgsqlDbType.Varchar, 10).Value = d_ma;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_diachi", NpgsqlDbType.Text).Value = d_diachi;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.ExecuteNonQuery();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmnoisc (id,ma,ten,stt,diachi,nhom) values ";
                    sql += "(:d_id,:d_ma,:d_ten,:d_stt,:d_diachi,:d_nhom)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ma", NpgsqlDbType.Varchar, 10).Value = d_ma;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_diachi", NpgsqlDbType.Text).Value = d_diachi;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.ExecuteNonQuery();
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "dmnoisc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tonkhokemtheo(string d_mmyy, int d_makhot, decimal d_sttt, int d_makho, decimal d_stt, int d_mabd, decimal d_tondau, decimal d_giamua)
        {
            string xxx = user + d_mmyy;
            sql = "update " + xxx + ".d_tonkhokemtheo set mabd=:d_mabd,tondau=:d_tondau,giamua=:d_giamua where makhot=:d_makhot and sttt=:d_sttt and makho=:d_makho and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_tondau", NpgsqlDbType.Numeric).Value = d_tondau;
                cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                cmd.Parameters.Add("d_makhot", NpgsqlDbType.Numeric).Value = d_makhot;
                cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + xxx + ".d_tonkhokemtheo (makhot,sttt,makho,stt,mabd,tondau,giamua) values ";
                    sql += "(:d_makhot,:d_sttt,:d_makho,:d_stt,:d_mabd,:d_tondau,:d_giamua)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_makhot", NpgsqlDbType.Numeric).Value = d_makhot;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_tondau", NpgsqlDbType.Numeric).Value = d_tondau;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tonkhokemtheo");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tutruckemtheo(string d_mmyy, int d_makhot, decimal d_sttt, int d_makp, int d_makho, decimal d_stt, int d_mabd, decimal d_tondau, decimal d_sttondau, decimal d_giamua)
        {
            string xxx = user + d_mmyy;
            sql = "update " + xxx + ".d_tutruckemtheo set mabd=:d_mabd,tondau=:d_tondau,giamua=:d_giamua where makhot=:d_makhot and sttt=:d_sttt and makp=:d_makp and makho=:d_makho and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_tondau", NpgsqlDbType.Numeric).Value = d_tondau;
                cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                cmd.Parameters.Add("d_makhot", NpgsqlDbType.Numeric).Value = d_makhot;
                cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + xxx + ".d_tutruckemtheo (makhot,sttt,makp,makho,stt,mabd,tondau,giamua) values ";
                    sql += "(:d_makhot,:d_sttt,:d_makp,:d_makho,:d_stt,:d_mabd,:d_tondau,:d_giamua)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_makhot", NpgsqlDbType.Numeric).Value = d_makhot;
                    cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_tondau", NpgsqlDbType.Numeric).Value = d_tondau;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tutruckemtheo");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public string get_makho(int nhom, int loai, int thuoc)
        {
            string makho = "";
            sql = "select * from " + user + ".d_dmkho where hide=0 and nhom=" + nhom + " and loai=" + thuoc;
            makho = get_data("select kho from " + user + ".d_dmphieu where id=" + loai).Tables[0].Rows[0][0].ToString();
            if (makho != "") sql += " and id in (" + makho.Substring(0, makho.Length - 1) + ")";
            makho = "";
            foreach (DataRow r in get_data(sql).Tables[0].Rows) makho += r["id"].ToString().Trim() + ",";
            return makho;
        }

        public decimal get_id_donthuoc_bacsy(string mabs, string maicd)
        {
            ds = get_data("select id from " + user + ".d_theodonll where mabs='" + mabs + "' and maicd='" + maicd + "'");
            return (ds.Tables[0].Rows.Count > 0) ? decimal.Parse(ds.Tables[0].Rows[0]["id"].ToString()) : 0;
        }

        public bool upd_ttngay(string d_ngay, string d_makp)
        {
            schema = user + ".upd_ttngay";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_ttngay");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool get_ttngay(string d_ngay, string d_makp)
        {
            return get_data("select * from " + user + ".d_ttngay where to_char(ngay,'dd/mm/yyyy')='" + d_ngay + "' and makp='" + d_makp + "'").Tables[0].Rows.Count > 0;
        }

        public string get_stt_haophi(int nhom, int makp, string mmyy)
        {
            int ret = 1;
            try
            {
                sql = "select max(to_number(substr(b.sophieu,1,3),'999')) as so from " + user + mmyy + ".d_duyet a," + user + mmyy + ".d_haophill b where a.id=b.idduyet and a.makp=" + makp;
                sql += " and a.nhom=" + nhom;
                ds = get_data(sql);
                if (ds.Tables[0].Rows.Count > 0)
                {
                    try
                    {
                        if (ds.Tables[0].Rows[0]["so"].ToString() != "") ret = int.Parse(ds.Tables[0].Rows[0]["so"].ToString()) + 1;
                    }
                    catch { ret.ToString().PadLeft(3, '0'); }
                }
                return ret.ToString().PadLeft(3, '0');
            }
            catch { return ret.ToString().PadLeft(3, '0'); }
        }

        public string get_sophieu(string mmyy, string table, string fie, string dk)
        {
            int ret = 1;
            sql = "select max(to_number(substr(" + fie + ",1,4),'9999')) as so from " + user + mmyy + "." + table + " " + dk;
            ds = get_data(sql);
            if (ds.Tables[0].Rows.Count > 0)
            {
                try
                {
                    if (ds.Tables[0].Rows[0]["so"].ToString() != "") ret = int.Parse(ds.Tables[0].Rows[0]["so"].ToString()) + 1;
                }
                catch { ret.ToString().PadLeft(4, '0'); }
            }
            return ret.ToString().PadLeft(4, '0');
        }

        public string get_sophieu_nam(string mmyy, string table, string fie, string dk)
        {
            int ret = 1;
            string s = "";
            for (int i = 0; i < 4; i++) s += "0";
            sql = "select max(to_number(substr(" + fie + ",1,4),'9999')) as so from " + user + mmyy + "." + table + " " + dk;
            ds = get_data(sql);
            if (ds.Tables[0].Rows.Count > 0)
            {
                try
                {
                    if (ds.Tables[0].Rows[0]["so"].ToString() != "") ret = int.Parse(ds.Tables[0].Rows[0]["so"].ToString()) + 1;
                }
                catch { }
            }
            if (ret == 1)
            {
                string mmyys = Mmyy_truoc(mmyy);
                if (mmyys.Substring(2, 2) == mmyy.Substring(2, 2) && bMmyy(mmyys))
                {
                    sql = "select max(to_number(substr(" + fie + ",1,4),'9999')) as so from " + user + mmyys + "." + table + " " + dk;
                    ds = get_data(sql);
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        try
                        {
                            if (ds.Tables[0].Rows[0]["so"].ToString() != "") ret = int.Parse(ds.Tables[0].Rows[0]["so"].ToString()) + 1;
                        }
                        catch { }
                    }
                }
            }
            return ret.ToString().PadLeft(4, '0');
        }

        public int get_sobienlai(string mmyy)
        {
            int ret = 1;
            ds = get_data("select max(sobienlai) as so from " + user + mmyy + ".d_bienlai");
            if (ds.Tables[0].Rows.Count > 0)
            {
                try
                {
                    if (ds.Tables[0].Rows[0]["so"].ToString() != "") ret = int.Parse(ds.Tables[0].Rows[0]["so"].ToString()) + 1;
                }
                catch { }
            }
            return ret;

        }

        public void netsend(string domain, string computer, string message)
        {
            string filerun = @"net";
            string arg = " send /domain:" + domain + " " + computer + ":" + message;
            run f = new run(filerun, arg, true);
            f.Launch();
        }

        public int get_nhomkho
        {
            get
            {
                try { return int.Parse(Thongso("d_nhomkholog", "NHOMKHO").ToString()); }
                catch { return 1; }
            }
        }
        public bool upd_tscdkhoa(decimal d_id, int d_makp, int d_makho, int d_manguon, int d_nhomcc, decimal d_stt, int d_mabd, string d_losx, string d_sothe, decimal d_sotien, decimal d_tyle, string d_namsx, string d_namsd)
        {
            sql = "update " + user + ".d_tscdkhoa set makp=:d_makp,makho=:d_makho,manguon=:d_manguon,nhomcc=:d_nhomcc,stt=:d_stt,mabd=:d_mabd,losx=:d_losx,sothe=:d_sothe,tyle=:d_tyle,sotien=:d_sotien,namsx=:d_namsx,namsd=:d_namsd where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
                cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
                cmd.Parameters.Add("d_namsd", NpgsqlDbType.Varchar, 10).Value = d_namsd;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_tscdkhoa(id,makp,makho,manguon,nhomcc,stt,mabd,losx,sothe,tyle,sotien,namsx,namsd) values (:d_id,:d_makp,:d_makho,:d_manguon,:d_nhomcc,:d_stt,:d_mabd,:d_losx,:d_sothe,:d_tyle,:d_sotien,:d_namsx,:d_namsd)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                    cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                    cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
                    cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                    cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
                    cmd.Parameters.Add("d_namsd", NpgsqlDbType.Varchar, 10).Value = d_namsd;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tscdimage");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_tscdkhoa_fuc(decimal d_id, int d_makp, int d_makho, int d_manguon, int d_nhomcc, decimal d_stt, int d_mabd, string d_losx, string d_sothe, decimal d_sotien, decimal d_tyle, string d_namsx, string d_namsd)
        {
            schema = user + ".upd_tscdkhoa";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
                cmd.Parameters.Add("d_sotien", NpgsqlDbType.Numeric).Value = d_sotien;
                cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
                cmd.Parameters.Add("d_namsd", NpgsqlDbType.Varchar, 10).Value = d_namsd;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tscdkhoa");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tscdkem(decimal d_id, decimal d_stt, string d_ngay, int d_mabd, string d_diengiai)
        {
            schema = user + ".upd_tscdkem";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_diengiai", NpgsqlDbType.Text).Value = d_diengiai;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tscdkem");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tscdsc(decimal d_id, decimal d_stt, string d_ngay, string d_diengiai, string d_nguoidenghi, int d_noisc, decimal d_sogio, string d_nguoichungkien, decimal d_tyle)
        {
            schema = user + ".upd_tscdsc";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_diengiai", NpgsqlDbType.Text).Value = d_diengiai;
                cmd.Parameters.Add("d_nguoidenghi", NpgsqlDbType.Text).Value = d_nguoidenghi;
                cmd.Parameters.Add("d_noisc", NpgsqlDbType.Numeric).Value = d_noisc;
                cmd.Parameters.Add("d_sogio", NpgsqlDbType.Numeric).Value = d_sogio;
                cmd.Parameters.Add("d_nguoichungkien", NpgsqlDbType.Text).Value = d_nguoichungkien;
                cmd.Parameters.Add("d_tyle", NpgsqlDbType.Numeric).Value = d_tyle;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tscdsc");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tscdsc(decimal d_id, decimal d_stt, byte[] d_image)
        {
            sql = "update " + user + ".d_tscdsc set image=:d_image where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_image", NpgsqlDbType.Bytea, d_image.Length).Value = d_image;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tscdsc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tscdsc(decimal d_id, decimal d_stt, string d_nguoisuachua, string d_nguoigiamsat, string d_sausc)
        {
            sql = "update " + user + ".d_tscdsc set nguoisuachua=:d_nguoisuachua,nguoigiamsat=:d_nguoigiamsat,sausc=:d_sausc where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_nguoisuachua", NpgsqlDbType.Text).Value = d_nguoisuachua;
                cmd.Parameters.Add("d_nguoigiamsat", NpgsqlDbType.Text).Value = d_nguoigiamsat;
                cmd.Parameters.Add("d_sausc", NpgsqlDbType.Text).Value = d_sausc;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tscdsc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tscdlc(decimal d_id, decimal d_stt, int d_makp, string d_ngay, string d_diengiai)
        {
            //schema = user + ".upd_tscdlc";
            string sql = "update " + user + ".d_tscdlc set makp=:d_makp,ngay=to_timestamp(:d_ngay,'dd/mm/yyyy')";
            sql += ",diengiai=:d_diengiai where id=:d_id and stt=:d_stt";

            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
            cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
            cmd.Parameters.Add("d_diengiai", NpgsqlDbType.Text).Value = d_diengiai;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
            cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into medibv.d_tscdlc(id,stt,makp,ngay,diengiai) values ";
                    sql += "(:d_id,:d_stt,:d_makp,to_timestamp(:d_ngay,'dd/mm/yyyy'),:d_diengiai)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                    cmd.Parameters.Add("d_diengiai", NpgsqlDbType.Text).Value = d_diengiai;
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tscdlc");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tscdlc(decimal d_id, decimal d_stt, byte[] d_image)
        {
            sql = "update " + user + ".d_tscdlc set image=:d_image where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_image", NpgsqlDbType.Bytea, d_image.Length).Value = d_image;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tscdlc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_tscdimage(decimal d_id, decimal d_stt, int d_loai, int d_tt, byte[] d_image)
        {
            sql = "update " + user + ".d_tscdimage set image=:d_image where id=:d_id and stt=:d_stt and loai=:d_loai and tt=:d_tt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_image", NpgsqlDbType.Bytea, d_image.Length).Value = d_image;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_tt", NpgsqlDbType.Numeric).Value = d_tt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_tscdimage (id,stt,loai,tt,image) values ";
                    sql += "(:d_id,:d_stt,:d_loai,:d_tt,:d_image)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_tt", NpgsqlDbType.Numeric).Value = d_tt;
                    cmd.Parameters.Add("d_image", NpgsqlDbType.Bytea, d_image.Length).Value = d_image;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_tscdimage");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public int get_stt_tscd(decimal id, string table)
        {
            try
            {
                sql = "select max(stt) as so from " + user + "." + table + " where id=" + id;
                ds = get_data(sql);
                if (ds.Tables[0].Rows[0]["so"].ToString() == "") return 1;
                else return int.Parse(ds.Tables[0].Rows[0]["so"].ToString()) + 1;
            }
            catch { return 1; }
        }

        public bool get_theodoi(int mabd)
        {
            return get_data("select * from " + user + ".d_dmbd a," + user + ".d_dmnhom b where a.manhom=b.id and b.theodoi=1 and a.id=" + mabd).Tables[0].Rows.Count == 1;
        }

        public DataSet get_tondau_cstt(DataSet ds, DataTable dt, string d_mmyy, int d_makp, int d_manguon)
        {
            DataRow r1, r2, r3;
            DataRow[] dr;
            string usr = user, xxx = usr + d_mmyy;
            sql = "select a.mabd,sum(a.tondau) as tondau,sum(a.tondau*t.giamua) as sttondau from " + xxx + ".d_tutrucct a," + xxx + ".d_theodoi t ";
            sql += " where a.stt=t.id and a.tondau<>0 and a.makp=" + d_makp;
            if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
            sql += " and a.mabd in (select mabd from " + usr + ".d_mabd) group by a.mabd";
            bool bCongdon = bThekho_congdon(get_nhomkho);
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                if (r1 != null)
                {
                    r3 = getrowbyid(ds.Tables[0], "mabd=" + int.Parse(r["mabd"].ToString()));
                    if (r3 == null)
                    {
                        r2 = ds.Tables[0].NewRow();
                        r2["yymmdd"] = "";
                        r2["ngay"] = "";
                        r2["sonhap"] = "";
                        r2["soxuat"] = "";
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r1["ma"].ToString();
                        r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                        r2["tenhc"] = r1["tenhc"].ToString();
                        r2["dang"] = r1["dang"].ToString();
                        if (bCongdon)
                        {
                            r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                            r2["tennuoc"] = r1["tennhom"].ToString();
                        }
                        else
                        {
                            r2["tenhang"] = r1["tenhang"].ToString();
                            r2["tennuoc"] = r1["tennuoc"].ToString();
                        }
                        r2["diengiai"] = "Tồn đầu";
                        r2["tondau"] = r["tondau"].ToString();
                        r2["sttondau"] = r["sttondau"].ToString();
                        r2["slnhap"] = 0;
                        r2["stnhap"] = 0;
                        r2["slxuat"] = 0;
                        r2["stxuat"] = 0;
                        r2["toncuoi"] = r["tondau"].ToString();
                        r2["sttoncuoi"] = r["sttondau"].ToString();
                        ds.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = ds.Tables[0].Select("mabd=" + int.Parse(r["mabd"].ToString()));
                        if (dr.Length > 0)
                        {
                            dr[0]["tondau"] = decimal.Parse(dr[0]["tondau"].ToString()) + decimal.Parse(r["tondau"].ToString());
                            dr[0]["sttondau"] = decimal.Parse(dr[0]["sttondau"].ToString()) + decimal.Parse(r["sttondau"].ToString());
                        }
                    }
                }
            }
            ds.AcceptChanges();
            return ds;
        }

        public DataSet get_nhap_cstt(DataSet ds, DataTable dt, DataTable dtkp, DataTable dtkho, string d_tu, string d_den, string d_yy, int d_makp, int d_manguon, int d_nhom)
        {
            bool bSophieu = bThekho_sophieu(d_nhom), bDongia = bDongia_thekho(d_nhom);
            bool bCongdon = bThekho_congdon(d_nhom);
            DataRow r1, r2, r3;
            string s_diengiai = "", usr = user, d_mmyy, xxx;
            int i_tu = int.Parse(d_tu), i_den = int.Parse(d_den);
            for (int i = i_tu; i <= i_den; i++)
            {
                d_mmyy = i.ToString().PadLeft(2, '0') + d_yy;
                if (bMmyy(d_mmyy))
                {
                    xxx = usr + d_mmyy;
                    sql = "select a.sophieu as so,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.lydo,a.loai,a.khox,a.khon,b.mabd,b.soluong,b.soluong*t.giamua as sotien,t.giamua ";
                    sql += " from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b ," + xxx + ".d_theodoi t ";
                    sql += " where a.id=b.id and b.sttt=t.id and a.loai in ('BS') ";
                    sql += " and a.khon=" + d_makp;
                    if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                    sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) order by a.ngay";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["soxuat"] = "";
                            r2["sonhap"] = r["so"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            switch (r["loai"].ToString())
                            {
                                case "BS":
                                    s_diengiai = "Bổ sung tủ trực :";
                                    break;
                            }
                            r2["diengiai"] = s_diengiai;
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slxuat"] = 0;
                            r2["stxuat"] = 0;
                            r2["slnhap"] = r["soluong"].ToString();
                            r2["stnhap"] = r["sotien"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            if (bDongia) r2["dongia"] = r["giamua"].ToString();
                            else r2["dongia"] = 0;
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    sql = "select ";
                    if (bDongia) sql += "t.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,b.mabd,a.loai,sum(b.soluong) as soluong,sum(b.soluong*t.giamua) as sotien";
                    sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucbucstt b," + xxx + ".d_theodoi t ";
                    sql += " where a.id=b.id and b.sttt=t.id and a.loai in (2) ";
                    sql += " and a.makp=" + d_makp;
                    if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                    sql += " and a.maql<>0 and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += "group by ";
                    if (bDongia) sql += "t.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),a.makp,b.mabd,a.loai";
                    sql += " union all ";
                    sql += "select ";
                    if (bDongia) sql += "t.giamua,";
                    else sql += "0,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,a.makp,b.mabd,a.loai,sum(b.soluong) as soluong,sum(b.soluong*t.giamua) as sotien";
                    sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucbucstt b," + xxx + ".d_theodoi t ";
                    sql += "where a.id=b.id and b.sttt=t.id and a.loai=2 ";
                    sql += " and a.makp=" + d_makp;
                    if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                    sql += " and a.maql=0 and b.mabd in (select mabd from " + usr + ".d_mabd)";
                    sql += "group by ";
                    if (bDongia) sql += "t.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),a.makp,b.mabd,a.loai";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            s_diengiai = "Bù trực";
                            r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["soxuat"] = "";
                            r2["sonhap"] = r["ngay"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            r2["diengiai"] = "Nhập :" + "[" + s_diengiai + "]";
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slxuat"] = 0;
                            r2["stxuat"] = 0;
                            r2["slnhap"] = r["soluong"].ToString();
                            r2["stnhap"] = r["sotien"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["dongia"] = r["giamua"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                }
            }
            ds.AcceptChanges();
            return ds;
        }

        public DataSet get_xuat_cstt(DataSet ds, DataTable dt, DataTable dtkp, DataTable dtloaint, DataTable dtkhac, DataTable dtkho, string d_tu, string d_den, string d_yy, int d_makp, int d_manguon, int d_nhom)
        {
            string s_diengiai = "", d_mmyy, usr = user, xxx;
            DataTable dtvay = get_data("select * from " + usr + ".d_dmvay").Tables[0];
            DataRow r1, r2, r3;
            bool bDongia = bDongia_thekho(d_nhom), bCongdon = bThekho_congdon(d_nhom);
            bool incstt = bIntheocstt(d_nhom);
            int i_tu = int.Parse(d_tu), i_den = int.Parse(d_den);
            for (int i = i_tu; i <= i_den; i++)
            {
                d_mmyy = i.ToString().PadLeft(2, '0') + d_yy;
                if (bMmyy(d_mmyy))
                {
                    xxx = usr + d_mmyy;
                    sql = "select a.sophieu as so,to_char(a.ngay,'dd/mm/yyyy') as ngay,a.lydo,a.loai,a.khox,a.khon,b.mabd,b.soluong,b.soluong*t.giamua as sotien,t.giamua ";
                    sql += " from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b," + xxx + ".d_theodoi t ";
                    sql += " where a.id=b.id and b.sttt=t.id and a.loai in ('TH','HT') and a.khox=" + d_makp;
                    if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                    sql += " and b.mabd in (select mabd from " + usr + ".d_mabd) order by a.ngay";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r3 = getrowbyid(dtkp, "id=" + int.Parse(r["khox"].ToString()));
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["soxuat"] = r["so"].ToString();
                            r2["sonhap"] = "";
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            switch (r["loai"].ToString())
                            {
                                case "TH":
                                    s_diengiai = "Thu hồi :" + r3["ten"].ToString();
                                    break;
                                case "HT":
                                    s_diengiai = r3["ten"].ToString() + ": Hoàn trả ";
                                    break;
                            }
                            r2["diengiai"] = s_diengiai;
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slxuat"] = r["soluong"].ToString();
                            r2["stxuat"] = r["sotien"].ToString();
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            if (bDongia) r2["dongia"] = r["giamua"].ToString();
                            else r2["dongia"] = 0;
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    sql = "select ";
                    if (bDongia) sql += "t.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,";
                    if (incstt) sql += "a.makp,";
                    else sql += "a.makhoa as makp,";
                    sql += "b.mabd,a.loai,sum(b.soluong) as soluong,sum(b.soluong*t.giamua) as sotien";
                    sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + xxx + ".d_theodoi t ";
                    sql += " where a.id=b.id and b.sttt=t.id and a.loai in (2) ";
                    sql += " and a.makp=" + d_makp;
                    if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                    sql += " and a.maql<>0 and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += "group by ";
                    if (bDongia) sql += "t.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),";
                    if (incstt) sql += "a.makp,";
                    else sql += "a.makhoa,";
                    sql += "b.mabd,a.loai";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            s_diengiai = "Tủ trực";
                            r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = "";
                            r2["soxuat"] = r["ngay"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            r2["diengiai"] = "Xuất :" + r3["ten"].ToString() + "[" + s_diengiai + "]";
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            r2["slxuat"] = r["soluong"].ToString();
                            r2["stxuat"] = r["sotien"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["dongia"] = r["giamua"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                    sql = "select ";
                    if (bDongia) sql += "t.giamua,";
                    else sql += " 0 as giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy') as ngay,";
                    if (incstt) sql += "a.makp,";
                    else sql += "a.makhoa as makp,";
                    sql += "b.mabd,a.mabn,sum(b.soluong) as soluong,sum(b.soluong*t.giamua) as sotien";
                    sql += " from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + xxx + ".d_theodoi t ";
                    sql += " where a.id=b.id and b.sttt=t.id and a.loai in (2) ";
                    sql += " and a.makp=" + d_makp;
                    if (d_manguon != -1) sql += " and t.manguon=" + d_manguon;
                    sql += " and a.maql=0 and b.mabd in (select mabd from " + usr + ".d_mabd) ";
                    sql += "group by ";
                    if (bDongia) sql += "t.giamua,";
                    sql += "to_char(a.ngay,'dd/mm/yyyy'),";
                    if (incstt) sql += "a.makp,";
                    else sql += "a.makhoa,";
                    sql += "b.mabd,a.mabn";
                    foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    {
                        r1 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                        if (r1 != null)
                        {
                            r3 = getrowbyid(dtkp, "id=" + int.Parse(r["makp"].ToString()));
                            r2 = ds.Tables[0].NewRow();
                            r2["yymmdd"] = r["ngay"].ToString().Substring(8, 2) + r["ngay"].ToString().Substring(3, 2) + r["ngay"].ToString().Substring(0, 2);
                            r2["ngay"] = r["ngay"].ToString();
                            r2["sonhap"] = "";
                            r2["soxuat"] = r["mabn"].ToString();
                            r2["mabd"] = r["mabd"].ToString();
                            r2["ma"] = r1["ma"].ToString();
                            r2["ten"] = r1["ten"].ToString().Trim() + " " + r1["hamluong"].ToString();
                            r2["tenhc"] = r1["tenhc"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            if (bCongdon)
                            {
                                r2["tenhang"] = r1["tenhang"].ToString().Trim() + "-" + r1["tennuoc"].ToString();
                                r2["tennuoc"] = r1["tennhom"].ToString();
                            }
                            else
                            {
                                r2["tenhang"] = r1["tenhang"].ToString();
                                r2["tennuoc"] = r1["tennuoc"].ToString();
                            }
                            r2["diengiai"] = "Xuất :" + r3["ten"].ToString();
                            r2["tondau"] = 0;
                            r2["sttondau"] = 0;
                            r2["slnhap"] = 0;
                            r2["stnhap"] = 0;
                            r2["slxuat"] = r["soluong"].ToString();
                            r2["stxuat"] = r["sotien"].ToString();
                            r2["toncuoi"] = r["soluong"].ToString();
                            r2["sttoncuoi"] = r["sotien"].ToString();
                            r2["dongia"] = r["giamua"].ToString();
                            ds.Tables[0].Rows.Add(r2);
                        }
                    }
                }
            }
            ds.AcceptChanges();
            return ds;
        }

        public decimal Round(decimal so, int le)
        {
            return Math.Round(so + decimal.Parse("0.00000000001"), le);
        }

        public bool upd_theodoi(string d_mmyy, decimal d_id, int d_mabd, int d_manguon, int d_nhomcc, string d_handung, string d_losx, string d_sothe, string d_namsx, string d_namsd, int d_baohanh, int d_nguongoc, int d_tinhtrang, decimal d_giamua, decimal d_giaban, decimal d_chietkhau, decimal d_giaban2, decimal d_gianovat, decimal d_tyle_ggia, decimal d_st_ggia,string d_sodangky)
        {
            //schema = user + d_mmyy + ".upd_theodoi";
            string sql = "update " + user + d_mmyy + ".d_theodoi set mabd=:d_mabd,manguon=:d_manguon,nhomcc=:d_nhomcc,";
            sql += "handung=:d_handung,losx=:d_losx,sothe=:d_sothe,namsx=:d_namsx,namsd=:d_namsd,baohanh=:d_baohanh,";//bbb
            sql += "nguongoc=:d_nguongoc,tinhtrang=:d_tinhtrang,giamua=:d_giamua,giaban=:d_giaban,";
            sql += "chietkhau=:d_chietkhau,giaban2=:d_giaban2,gianovat=:d_gianovat,tyle_ggia=:d_tyle_ggia,";
            sql += "st_ggia=:d_st_ggia,sodangky=:d_sodangky where id=:d_id";

            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
            cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
            cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
            cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
            cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
            cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
            cmd.Parameters.Add("d_namsd", NpgsqlDbType.Varchar, 10).Value = d_namsd;
            cmd.Parameters.Add("d_baohanh", NpgsqlDbType.Numeric).Value = d_baohanh;
            cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Numeric).Value = d_nguongoc;
            cmd.Parameters.Add("d_tinhtrang", NpgsqlDbType.Numeric).Value = d_tinhtrang;
            cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_chietkhau", NpgsqlDbType.Numeric).Value = d_chietkhau;
            cmd.Parameters.Add("d_giaban2", NpgsqlDbType.Numeric).Value = d_giaban2;
            cmd.Parameters.Add("d_gianovat", NpgsqlDbType.Numeric).Value = d_gianovat;
            cmd.Parameters.Add("d_tyle_ggia", NpgsqlDbType.Numeric).Value = d_tyle_ggia;
            cmd.Parameters.Add("d_st_ggia", NpgsqlDbType.Numeric).Value = d_st_ggia;
            cmd.Parameters.Add("d_sodangky", NpgsqlDbType.Varchar,20).Value = d_sodangky;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_theodoi(id,mabd,manguon,nhomcc,handung,losx,";
                    sql += "sothe,namsx,namsd,baohanh,nguongoc,tinhtrang,giamua,giaban,chietkhau,";
                    sql += "giaban2,gianovat,tyle_ggia,st_ggia,sodangky) values (:d_id,:d_mabd,:d_manguon,:d_nhomcc,";
                    sql += ":d_handung,:d_losx,:d_sothe,:d_namsx,:d_namsd,:d_baohanh,:d_nguongoc,:d_tinhtrang,";
                    sql += ":d_giamua,:d_giaban,:d_chietkhau,:d_giaban2,:d_gianovat,:d_tyle_ggia,:d_st_ggia,:d_sodangky)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                    cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                    cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                    cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                    cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
                    cmd.Parameters.Add("d_namsd", NpgsqlDbType.Varchar, 10).Value = d_namsd;
                    cmd.Parameters.Add("d_baohanh", NpgsqlDbType.Numeric).Value = d_baohanh;
                    cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Numeric).Value = d_nguongoc;
                    cmd.Parameters.Add("d_tinhtrang", NpgsqlDbType.Numeric).Value = d_tinhtrang;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_chietkhau", NpgsqlDbType.Numeric).Value = d_chietkhau;
                    cmd.Parameters.Add("d_giaban2", NpgsqlDbType.Numeric).Value = d_giaban2;
                    cmd.Parameters.Add("d_gianovat", NpgsqlDbType.Numeric).Value = d_gianovat;
                    cmd.Parameters.Add("d_tyle_ggia", NpgsqlDbType.Numeric).Value = d_tyle_ggia;
                    cmd.Parameters.Add("d_st_ggia", NpgsqlDbType.Numeric).Value = d_st_ggia;
                    cmd.Parameters.Add("d_sodangky", NpgsqlDbType.Varchar,20).Value = d_sodangky;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();

                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_theodoi");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_theodoi(string d_mmyy, decimal d_id, int d_mabd, int d_manguon, int d_nhomcc, string d_handung, string d_losx, string d_sothe, string d_namsx, string d_namsd, int d_baohanh, int d_nguongoc, int d_tinhtrang, decimal d_giamua, decimal d_giaban, decimal d_gianovat, decimal d_tyle_ggia, decimal d_st_ggia)
        {
            //schema = user + d_mmyy + ".upd_theodoi";
            string sql = "update " + user + d_mmyy + ".d_theodoi set mabd=:d_mabd,manguon=:d_manguon,nhomcc=:d_nhomcc,";
            sql += "handung=:d_handung,losx=:d_losx,sothe=:d_sothe,namsx=:d_namsx,namsd=:d_namsd,baohanh=:d_baohanh,";
            sql += "nguongoc=:d_nguongoc,tinhtrang=:d_tinhtrang,giamua=:d_giamua,giaban=:d_giaban,gianovat=:d_gianovat,";
            sql += "tyle_ggia=:d_tyle_ggia,st_ggia=:d_st_ggia where id=:d_id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);

            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
            cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
            cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
            cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
            cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
            cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
            cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
            cmd.Parameters.Add("d_namsd", NpgsqlDbType.Varchar, 10).Value = d_namsd;
            cmd.Parameters.Add("d_baohanh", NpgsqlDbType.Numeric).Value = d_baohanh;
            cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Numeric).Value = d_nguongoc;
            cmd.Parameters.Add("d_tinhtrang", NpgsqlDbType.Numeric).Value = d_tinhtrang;
            cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
            cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
            cmd.Parameters.Add("d_gianovat", NpgsqlDbType.Numeric).Value = d_gianovat;
            cmd.Parameters.Add("d_tyle_ggia", NpgsqlDbType.Numeric).Value = d_tyle_ggia;
            cmd.Parameters.Add("d_st_ggia", NpgsqlDbType.Numeric).Value = d_st_ggia;
            cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                if (irec == 0)
                {
                    sql = "insert into " + user + d_mmyy + ".d_theodoi(id,mabd,manguon,nhomcc,handung,losx,";
                    sql += "sothe,namsx,namsd,baohanh,nguongoc,tinhtrang,giamua,giaban,gianovat,";
                    sql += "tyle_ggia,st_ggia) ";
                    sql += " values (:d_id,:d_mabd,:d_manguon,:d_nhomcc,:d_handung,";//bbb
                    sql += ":d_losx,:d_sothe,:d_namsx,:d_namsd,:d_baohanh,:d_nguongoc,:d_tinhtrang,:d_giamua,";
                    sql += ":d_giaban,:d_gianovat,:d_tyle_ggia,:d_st_ggia)";

                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    cmd.Parameters.Add("d_nhomcc", NpgsqlDbType.Numeric).Value = d_nhomcc;
                    cmd.Parameters.Add("d_handung", NpgsqlDbType.Varchar, 10).Value = d_handung;
                    cmd.Parameters.Add("d_losx", NpgsqlDbType.Varchar, 20).Value = d_losx;
                    cmd.Parameters.Add("d_sothe", NpgsqlDbType.Varchar, 20).Value = d_sothe;
                    cmd.Parameters.Add("d_namsx", NpgsqlDbType.Varchar, 10).Value = d_namsx;
                    cmd.Parameters.Add("d_namsd", NpgsqlDbType.Varchar, 10).Value = d_namsd;
                    cmd.Parameters.Add("d_baohanh", NpgsqlDbType.Numeric).Value = d_baohanh;
                    cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Numeric).Value = d_nguongoc;
                    cmd.Parameters.Add("d_tinhtrang", NpgsqlDbType.Numeric).Value = d_tinhtrang;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                    cmd.Parameters.Add("d_gianovat", NpgsqlDbType.Numeric).Value = d_gianovat;
                    cmd.Parameters.Add("d_tyle_ggia", NpgsqlDbType.Numeric).Value = d_tyle_ggia;
                    cmd.Parameters.Add("d_st_ggia", NpgsqlDbType.Numeric).Value = d_st_ggia;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_theodoi");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public void upd_kho_theodoi(string mmyys, string mmyy, int makho)
        {
            if (!bMmyy(mmyys)) return;
            sql = "select a.* from " + user + mmyys + ".d_theodoi a," + user + mmyys + ".d_tonkhoct b, " + user + ".d_dmbd c ";
            sql += " where a.id=b.stt and b.mabd=c.id and b.makho=" + makho;
            sql += " and b.tondau+b.slnhap-b.slxuat<>0";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
                upd_theodoi(mmyy, decimal.Parse(r["id"].ToString()), int.Parse(r["mabd"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), r["handung"].ToString(), r["losx"].ToString(), r["sothe"].ToString(), r["namsx"].ToString(), r["namsd"].ToString(), int.Parse(r["baohanh"].ToString()), int.Parse(r["nguongoc"].ToString()), int.Parse(r["tinhtrang"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["chietkhau"].ToString()), decimal.Parse(r["giaban2"].ToString()), decimal.Parse(r["gianovat"].ToString()), decimal.Parse(r["tyle_ggia"].ToString()), decimal.Parse(r["st_ggia"].ToString()),"");

            sql = "select a.*,to_char(a.ngay,'dd/mm/yyyy') as ng from " + user + mmyys + ".d_theodoitscd a," + user + mmyys + ".d_tonkhoct b," + user + ".d_dmbd c where a.sttt=b.stt and b.mabd=c.id and b.makho=" + makho;
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
                upd_theodoitscd(mmyy, decimal.Parse(r["sttt"].ToString()), decimal.Parse(r["nam"].ToString()), decimal.Parse(r["tyle"].ToString()), int.Parse(r["phanloai"].ToString()), r["phutrach"].ToString(), r["chucdanh"].ToString(), r["daotao"].ToString(), r["coquan"].ToString(), r["tailieu"].ToString(), r["quyetdinh"].ToString(), r["ng"].ToString(), r["tuoitho"].ToString(), (r["baotri"].ToString() != "") ? decimal.Parse(r["baotri"].ToString()) : 0, r["tinhhinh"].ToString(), r["khauhao"].ToString());
        }

        public void upd_kho_theodoi(string mmyys, string mmyy, int makho, bool bNewMonth)
        {
            if (!bMmyy(mmyys)) return;
            if (bNewMonth)
            {
                string s_field_name = f_get_field_name(mmyy, "d_theodoi", "a");
                sql = " insert into " + user + mmyy + ".d_theodoi ";
                sql += " select " + s_field_name + " from " + user + mmyys + ".d_theodoi a," + user + mmyys + ".d_tonkhoct b";
                sql += " where a.id=b.stt ";
                if (makho > 0) sql += " and b.makho=" + makho;
                sql += " and b.tondau+b.slnhap-b.slxuat<>0";
                sql += " and a.id not in (select id from " + user + mmyy + ".d_theodoi )";
                sql += " and a.mabd in(select id from " + user + ".d_dmbd) ";
                execute_data(sql);
                //
                s_field_name = f_get_field_name(mmyy, "d_theodoitscd", "a");
                sql = " insert into " + user + mmyy + ".d_theodoitscd ";
                sql += " select " + s_field_name + " from " + user + mmyys + ".d_theodoitscd a," + user + mmyys + ".d_tonkhoct b where a.sttt=b.stt ";
                if (makho > 0) sql += " and b.makho=" + makho;
                sql += " and sttt not in (select sttt from " + user + mmyy + ".d_theodoitscd)";
                execute_data(sql);
                //
            }
            else
            {
                sql = "select a.* from " + user + mmyys + ".d_theodoi a," + user + mmyys + ".d_tonkhoct b";
                sql += " where a.id=b.stt and b.makho=" + makho;
                sql += " and b.tondau+b.slnhap-b.slxuat<>0";
                sql += " and a.mabd in(select id from " + user + ".d_dmbd) ";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    upd_theodoi(mmyy, decimal.Parse(r["id"].ToString()), int.Parse(r["mabd"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), r["handung"].ToString(), r["losx"].ToString(), r["sothe"].ToString(), r["namsx"].ToString(), r["namsd"].ToString(), int.Parse(r["baohanh"].ToString()), int.Parse(r["nguongoc"].ToString()), int.Parse(r["tinhtrang"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["chietkhau"].ToString()), decimal.Parse(r["giaban2"].ToString()), decimal.Parse(r["gianovat"].ToString()), decimal.Parse(r["tyle_ggia"].ToString()), decimal.Parse(r["st_ggia"].ToString()),"");

                sql = "select a.*,to_char(a.ngay,'dd/mm/yyyy') as ng from " + user + mmyys + ".d_theodoitscd a," + user + mmyys + ".d_tonkhoct b where a.sttt=b.stt and b.makho=" + makho;
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    upd_theodoitscd(mmyy, decimal.Parse(r["sttt"].ToString()), decimal.Parse(r["nam"].ToString()), decimal.Parse(r["tyle"].ToString()), int.Parse(r["phanloai"].ToString()), r["phutrach"].ToString(), r["chucdanh"].ToString(), r["daotao"].ToString(), r["coquan"].ToString(), r["tailieu"].ToString(), r["quyetdinh"].ToString(), r["ng"].ToString(), r["tuoitho"].ToString(), (r["baotri"].ToString() != "") ? decimal.Parse(r["baotri"].ToString()) : 0, r["tinhhinh"].ToString(), r["khauhao"].ToString());
            }
        }
        public void upd_cstt_theodoi(string mmyys, string mmyy, int makp, int makho)
        {
            if (!bMmyy(mmyys)) return;
            sql = "select a.* from " + user + mmyys + ".d_theodoi a," + user + mmyys + ".d_tutrucct b";
            sql += " where a.id=b.stt and b.makho=" + makho + " and makp=" + makp;
            sql += " and b.tondau+b.slnhap-b.slxuat>0";
            sql += " and a.mabd in (select id from " + user + ".d_dmbd)";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
                upd_theodoi(mmyy, decimal.Parse(r["id"].ToString()), int.Parse(r["mabd"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), r["handung"].ToString(), r["losx"].ToString(), r["sothe"].ToString(), r["namsx"].ToString(), r["namsd"].ToString(), int.Parse(r["baohanh"].ToString()), int.Parse(r["nguongoc"].ToString()), int.Parse(r["tinhtrang"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["chietkhau"].ToString()), decimal.Parse(r["giaban2"].ToString()), decimal.Parse(r["gianovat"].ToString()), decimal.Parse(r["tyle_ggia"].ToString()), decimal.Parse(r["st_ggia"].ToString()),"");

            sql = "select a.*,to_char(a.ngay,'dd/mm/yyyy') as ng from " + user + mmyys + ".d_theodoitscd a," + user + mmyys + ".d_tutrucct b where a.sttt=b.stt and b.makho=" + makho + " and b.makp=" + makp;
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
                upd_theodoitscd(mmyy, decimal.Parse(r["sttt"].ToString()), decimal.Parse(r["nam"].ToString()), decimal.Parse(r["tyle"].ToString()), int.Parse(r["phanloai"].ToString()), r["phutrach"].ToString(), r["chucdanh"].ToString(), r["daotao"].ToString(), r["coquan"].ToString(), r["tailieu"].ToString(), r["quyetdinh"].ToString(), r["ng"].ToString(), r["tuoitho"].ToString(), (r["baotri"].ToString() != "") ? decimal.Parse(r["baotri"].ToString()) : 0, r["tinhhinh"].ToString(), r["khauhao"].ToString());
        }

        public void upd_cstt_theodoi(string mmyys, string mmyy, int makp, int makho, bool bNewMonth)
        {
            if (!bMmyy(mmyys)) return;
            if (bNewMonth)
            {
                string s_field_name = f_get_field_name(mmyy, "d_theodoi", "a");
                sql = " insert into " + user + mmyy + ".d_theodoi ";
                sql += " select distinct " + s_field_name.Trim().Trim(',') + " from " + user + mmyys + ".d_theodoi a," + user + mmyys + ".d_tutrucct b";
                sql += " where a.id=b.stt ";
                if (makho > 0) sql += " and b.makho=" + makho;
                if (makp > 0) sql += " and makp=" + makp;
                sql += " and b.tondau+b.slnhap-b.slxuat<>0";
                sql += " and a.id not in (select id from " + user + mmyy + ".d_theodoi )";
                execute_data(sql);
                //
                s_field_name = f_get_field_name(mmyy, "d_theodoitscd", "a");
                sql = " insert into  " + user + mmyy + ".d_theodoitscd ";
                sql += " select distinct " + s_field_name + " from " + user + mmyys + ".d_theodoitscd a," + user + mmyys + ".d_tutrucct b where a.sttt=b.stt ";
                if (makho > 0) sql += " and b.makho=" + makho;
                if (makp > 0) sql += " and b.makp=" + makp;
                sql += " and sttt not in(select sttt from " + user + mmyy + ".d_theodoitscd)";
                execute_data(sql);
            }
            else
            {

                sql = "select a.* from " + user + mmyys + ".d_theodoi a," + user + mmyys + ".d_tutrucct b";
                sql += " where a.id=b.stt and b.makho=" + makho + " and makp=" + makp;
                sql += " and b.tondau+b.slnhap-b.slxuat>0";
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    upd_theodoi(mmyy, decimal.Parse(r["id"].ToString()), int.Parse(r["mabd"].ToString()), int.Parse(r["manguon"].ToString()), int.Parse(r["nhomcc"].ToString()), r["handung"].ToString(), r["losx"].ToString(), r["sothe"].ToString(), r["namsx"].ToString(), r["namsd"].ToString(), int.Parse(r["baohanh"].ToString()), int.Parse(r["nguongoc"].ToString()), int.Parse(r["tinhtrang"].ToString()), decimal.Parse(r["giamua"].ToString()), decimal.Parse(r["giaban"].ToString()), decimal.Parse(r["chietkhau"].ToString()), decimal.Parse(r["giaban2"].ToString()), decimal.Parse(r["gianovat"].ToString()), decimal.Parse(r["tyle_ggia"].ToString()), decimal.Parse(r["st_ggia"].ToString()),"");

                sql = "select a.*,to_char(a.ngay,'dd/mm/yyyy') as ng from " + user + mmyys + ".d_theodoitscd a," + user + mmyys + ".d_tutrucct b where a.sttt=b.stt and b.makho=" + makho + " and b.makp=" + makp;
                foreach (DataRow r in get_data(sql).Tables[0].Rows)
                    upd_theodoitscd(mmyy, decimal.Parse(r["sttt"].ToString()), decimal.Parse(r["nam"].ToString()), decimal.Parse(r["tyle"].ToString()), int.Parse(r["phanloai"].ToString()), r["phutrach"].ToString(), r["chucdanh"].ToString(), r["daotao"].ToString(), r["coquan"].ToString(), r["tailieu"].ToString(), r["quyetdinh"].ToString(), r["ng"].ToString(), r["tuoitho"].ToString(), (r["baotri"].ToString() != "") ? decimal.Parse(r["baotri"].ToString()) : 0, r["tinhhinh"].ToString(), r["khauhao"].ToString());
            }
        }

        public bool get_kiemtra(string mmyy, int m_nhom, string m_ngay)
        {
            return get_data("select * from " + user + mmyy + ".d_kiemtra where nhom=" + m_nhom + " and to_char(ngay,'dd/mm/yyyy')='" + m_ngay + "'").Tables[0].Rows.Count == 0;
        }

        public bool upd_kiemtra(string mmyy, int m_nhom, string m_ngay, int m_userid)
        {
            sql = "update " + user + mmyy + ".d_kiemtra set userid=:m_userid";
            sql += " where nhom=:m_nhom and ngay=:m_ngay";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_userid", NpgsqlDbType.Numeric).Value = m_userid;
                cmd.Parameters.Add("m_nhom", NpgsqlDbType.Numeric).Value = m_nhom;
                cmd.Parameters.Add("m_ngay", NpgsqlDbType.Timestamp).Value = StringToDate(m_ngay);
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + mmyy + ".d_kiemtra(nhom,ngay,userid) values (:m_nhom,:m_ngay,:m_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("m_nhom", NpgsqlDbType.Numeric).Value = m_nhom;
                    cmd.Parameters.Add("m_ngay", NpgsqlDbType.Timestamp).Value = StringToDate(m_ngay);
                    cmd.Parameters.Add("m_userid", NpgsqlDbType.Numeric).Value = m_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_kiemtra");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public decimal get_thuoc(decimal maql, string tu, string den, string makp, int madoituong, bool bCongno)
        {
            DateTime dt1 = StringToDate(tu).AddDays(-iNgaykiemke);
            DateTime dt2 = StringToDate(den).AddDays(iNgaykiemke);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            decimal st = 0;
            DataTable dt;
            string sql, d_mmyy = "", usr = user, xxx, stime = "'" + f_ngay + "'";
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    d_mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(d_mmyy))
                    {
                        xxx = usr + d_mmyy;
                        sql = "select sum(a.soluong*a.giamua) as sotien from " + xxx + ".d_tienthuoc a," + usr + ".d_duockp b," + usr + ".doituong c";
                        sql += " where a.makp=b.id and a.madoituong=c.madoituong and a.maql=" + maql;
                        if (bCongno) sql += " and c.mien=0";
                        sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                        if (makp != "") sql += " and b.makp='" + makp + "'";
                        if (madoituong != 0) sql += " and a.madoituong=" + madoituong;
                        dt = get_data(sql).Tables[0];
                        if (dt.Rows[0]["sotien"].ToString() != "") st += decimal.Parse(dt.Rows[0]["sotien"].ToString());
                        //toa cap ve
                        sql = "select sum(a.soluong*t.giamua) as sotien from " + xxx + ".bhytkb aa," + xxx + ".bhytthuoc a," + usr + ".btdkp_bv b," + usr + ".doituong c," + xxx + ".d_theodoi t ";
                        sql += " where aa.id=a.id and aa.makp=b.makp and aa.maphu=c.madoituong and a.sttt=t.id and aa.maql=" + maql;
                        if (bCongno) sql += " and c.mien=0";
                        sql += " and aa.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                        if (makp != "") sql += " and aa.makp='" + makp + "'";
                        if (madoituong != 0) sql += " and a.maphu=" + madoituong;
                        dt = get_data(sql).Tables[0];
                        if (dt.Rows[0]["sotien"].ToString() != "") st += decimal.Parse(dt.Rows[0]["sotien"].ToString());
                    }
                }
            }
            return st;
        }

        public DataSet get_soluong_thuoc(int mabd, string tu, string den, string makp)
        {
            DateTime dt1 = StringToDate(tu).AddDays(-iNgaykiemke);
            DateTime dt2 = StringToDate(den).AddDays(iNgaykiemke);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            DataSet dstmp = new DataSet();
            bool be = true;
            string sql, d_mmyy = "", usr = user, xxx, stime = "'" + f_ngay + "'";
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    d_mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(d_mmyy))
                    {
                        xxx = usr + d_mmyy;
                        sql = "select a.mabn,sum(b.soluong) as soluong from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + usr + ".d_duockp c";
                        sql += " where a.id=b.id and a.makp=c.id and a.loai<>3 and b.mabd=" + mabd;
                        sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                        if (makp != "") sql += " and c.makp='" + makp + "'";
                        sql += " group by a.mabn";
                        if (be) dstmp = get_data(sql);
                        else dstmp.Merge(get_data(sql));
                        be = false;
                        sql = "select a.mabn,-sum(b.soluong) as soluong from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + usr + ".d_duockp c";
                        sql += " where a.id=b.id and a.makp=c.id and a.loai=3 and b.mabd=" + mabd;
                        sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                        if (makp != "") sql += " and c.makp='" + makp + "'";
                        sql += " group by a.mabn";
                        dstmp.Merge(get_data(sql));
                    }
                }
            }
            return dstmp;
        }

        public string get_mmyy(string tu, string den, string str)
        {
            DateTime dt1 = StringToDate(tu).AddDays(-iNgaykiemke);
            DateTime dt2 = StringToDate(den).AddDays(iNgaykiemke);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            string mmyy = "";
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(mmyy))
                    {
                        sql = str.Replace("xxx", user + mmyy);
                        if (get_data(sql).Tables[0].Rows.Count > 0) break;
                    }
                }
            }
            return mmyy;
        }

        public DataSet get_thuoc(string tu, string den, string str)
        {
            DateTime dt1 = StringToDate(tu).AddDays(-iNgaykiemke);
            DateTime dt2 = StringToDate(den).AddDays(iNgaykiemke);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            string mmyy = "", sql1 = "";
            bool be = true;
            DataSet dstmp = new DataSet();
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(mmyy))
                    {
                        sql1 = str.Replace("xxx", user + mmyy);
                        if (be) dstmp = get_data(sql1);
                        else dstmp.Merge(get_data(sql1));
                        be = false;
                    }
                }
            }
            return dstmp;
        }

        public void exe_thuoc(string tu, string den, string str)
        {
            DateTime dt1 = StringToDate(tu).AddDays(-iNgaykiemke);
            DateTime dt2 = StringToDate(den).AddDays(iNgaykiemke);
            int y1 = dt1.Year, m1 = dt1.Month;
            int y2 = dt2.Year, m2 = dt2.Month;
            int itu, iden;
            string mmyy = "";
            for (int i = y1; i <= y2; i++)
            {
                itu = (i == y1) ? m1 : 1;
                iden = (i == y2) ? m2 : 12;
                for (int j = itu; j <= iden; j++)
                {
                    mmyy = j.ToString().PadLeft(2, '0') + i.ToString().Substring(2, 2);
                    if (bMmyy(mmyy))
                    {
                        sql = str.Replace("xxx", user + mmyy);
                        execute_data(sql);
                    }
                }
            }
        }

        public DataSet get_0(int i_nhom, string tu, string den, DataTable dt, int nhapxuat)
        {
            DataSet dstmp = new DataSet();
            DataSet dsmabd = new DataSet();
            DataSet dsxml = new DataSet();
            dstmp.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsmabd.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsxml.ReadXml("..//..//..//xml//d_truyvan.xml");
            decimal n_so = 0, n_tien = 0, x_so = 0, x_tien = 0;
            DataRow r1, r2, r3;
            DataRow[] dr;
            string usr = user, stime = "'" + f_ngay + "'";
            //nhap
            if (nhapxuat == 0 || nhapxuat == 2)
            {
                sql = "select e.id,count(*) as so,sum(b.sotien+b.sotien*b.vat/100+b.cuocvc+b.chaythu) as sotien ";
                sql += " from xxx.d_nhapll a,xxx.d_nhapct b," + usr + ".d_dmbd c," + usr + ".d_dmnhom d," + usr + ".d_nhombc e";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and d.loai=e.id";
                sql += " and a.ngaysp between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += " group by e.id";
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString());
                    r1 = getrowbyid(dt, sql);
                    if (r1 != null)
                    {
                        r3 = getrowbyid(dstmp.Tables[0], sql);
                        if (r3 == null)
                        {
                            r2 = dstmp.Tables[0].NewRow();
                            r2["id"] = r["id"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["tyle_so"] = r1["tyle_so"].ToString();
                            r2["tyle_tien"] = r1["tyle_tien"].ToString();
                            r2["n_so"] = r["so"].ToString();
                            r2["n_tien"] = r["sotien"].ToString();
                            r2["x_so"] = 0;
                            r2["x_tien"] = 0;
                            dstmp.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = dstmp.Tables[0].Select(sql);
                            if (dr.Length > 0)
                            {
                                dr[0]["n_so"] = decimal.Parse(dr[0]["n_so"].ToString()) + decimal.Parse(r["so"].ToString());
                                dr[0]["n_tien"] = decimal.Parse(dr[0]["n_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                            }
                        }
                        n_so += decimal.Parse(r["so"].ToString());
                        n_tien += decimal.Parse(r["sotien"].ToString());
                    }
                }
            }
            if (nhapxuat == 1 || nhapxuat == 2)
            {
                //xuat mat hang
                sql = "select distinct e.id,b.mabd from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c," + usr + ".d_dmnhom d," + usr + ".d_nhombc e,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and d.loai=e.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += " union all select distinct e.id,b.mabd from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c," + usr + ".d_dmnhom d," + usr + ".d_nhombc e,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and d.loai=e.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai='XK' and a.nhom=" + i_nhom;
                sql += " union all select distinct e.id,b.mabd from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c," + usr + ".d_dmnhom d," + usr + ".d_nhombc e,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and d.loai=e.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += " union all select distinct e.id,b.mabd from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c," + usr + ".d_dmnhom d," + usr + ".d_nhombc e,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and d.loai=e.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString()) + " and n_so=" + int.Parse(r["mabd"].ToString());
                    r1 = getrowbyid(dsmabd.Tables[0], sql);
                    if (r1 == null)
                    {
                        r2 = dsmabd.Tables[0].NewRow();
                        r2["id"] = r["id"].ToString();
                        r2["n_so"] = r["mabd"].ToString();
                        dsmabd.Tables[0].Rows.Add(r2);
                    }
                }
                //xuat sotien
                sql = "select e.id,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c," + usr + ".d_dmnhom d," + usr + ".d_nhombc e,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and d.loai=e.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai<>3 and a.nhom=" + i_nhom;
                sql += " group by e.id";
                sql += " union all select e.id,-sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c," + usr + ".d_dmnhom d," + usr + ".d_nhombc e,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and d.loai=e.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai=3 and a.nhom=" + i_nhom;
                sql += " group by e.id";
                sql += " union all select e.id,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c," + usr + ".d_dmnhom d," + usr + ".d_nhombc e,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and d.loai=e.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai='XK' and a.nhom=" + i_nhom;
                sql += " group by e.id";
                sql += " union all select e.id,sum(b.soluong*f.giamua) as sotien from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c," + usr + ".d_dmnhom d," + usr + ".d_nhombc e,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and d.loai=e.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += " group by e.id";
                sql += " union all select e.id,sum(b.soluong*f.giamua) as sotien from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c," + usr + ".d_dmnhom d," + usr + ".d_nhombc e,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and c.manhom=d.id and d.loai=e.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += " group by e.id";
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(dt, "id=" + int.Parse(r["id"].ToString()));
                    if (r1 != null)
                    {
                        sql = "id=" + int.Parse(r["id"].ToString());
                        r3 = getrowbyid(dstmp.Tables[0], sql);
                        if (r3 == null)
                        {
                            r2 = dstmp.Tables[0].NewRow();
                            r2["id"] = r["id"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["tyle_so"] = r1["tyle_so"].ToString();
                            r2["tyle_tien"] = r1["tyle_tien"].ToString();
                            r2["x_so"] = 0;
                            r2["x_tien"] = r["sotien"].ToString();
                            r2["n_so"] = 0;
                            r2["n_tien"] = 0;
                            dstmp.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = dstmp.Tables[0].Select(sql);
                            if (dr.Length > 0) dr[0]["x_tien"] = decimal.Parse(dr[0]["x_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                        }
                        x_tien += decimal.Parse(r["sotien"].ToString());
                    }
                }
                foreach (DataRow r in dstmp.Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString());
                    x_so += dsmabd.Tables[0].Select(sql).Length;
                    r["x_so"] = dsmabd.Tables[0].Select(sql).Length;
                }
            }
            dsxml.Merge(dstmp.Tables[0].Select("true", "id"));
            foreach (DataRow r in dsxml.Tables[0].Rows)
            {
                r["n_so_tl"] = (n_so == 0) ? 0 : decimal.Parse(r["n_so"].ToString()) / n_so * 100;
                r["n_tien_tl"] = (n_tien == 0) ? 0 : decimal.Parse(r["n_tien"].ToString()) / n_tien * 100;
                r["x_so_tl"] = (x_so == 0) ? 0 : decimal.Parse(r["x_so"].ToString()) / x_so * 100;
                r["x_tien_tl"] = (x_tien == 0) ? 0 : decimal.Parse(r["x_tien"].ToString()) / x_tien * 100;
            }
            r1 = dsxml.Tables[0].NewRow();
            r1["id"] = 0;
            r1["ten"] = "TỔNG CỘNG";
            r1["dang"] = "";
            r1["n_so"] = n_so;
            r1["n_tien"] = n_tien;
            r1["x_so"] = x_so;
            r1["x_tien"] = x_tien;
            r1["n_so_tl"] = 0;
            r1["n_tien_tl"] = 0;
            r1["x_so_tl"] = 0;
            r1["x_tien_tl"] = 0;
            dsxml.Tables[0].Rows.Add(r1);
            return dsxml;
        }

        public DataSet get_1(int i_nhom, string tu, string den, DataTable dt, int nhapxuat, string str)
        {
            DataSet dstmp = new DataSet();
            DataSet dsxml = new DataSet();
            dstmp.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsxml.ReadXml("..//..//..//xml//d_truyvan.xml");
            decimal n_so = 0, n_tien = 0, x_so = 0, x_tien = 0;
            DataRow r1, r2, r3;
            DataRow[] dr;
            string usr = user, stime = "'" + f_ngay + "'";
            //nhap
            if (nhapxuat == 0 || nhapxuat == 2)
            {
                sql = "select b.mabd as id,sum(b.soluong) as so,sum(b.sotien+b.sotien*b.vat/100+b.cuocvc+b.chaythu) as sotien from xxx.d_nhapll a,xxx.d_nhapct b," + usr + ".d_dmbd c";
                sql += " where a.id=b.id and b.mabd=c.id ";
                sql += " and a.ngaysp between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                sql += " group by b.mabd";
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString());
                    r1 = getrowbyid(dt, sql);
                    if (r1 != null)
                    {
                        r3 = getrowbyid(dstmp.Tables[0], sql);
                        if (r3 == null)
                        {
                            r2 = dstmp.Tables[0].NewRow();
                            r2["id"] = r["id"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            r2["tyle_so"] = 0;
                            r2["tyle_tien"] = 0;
                            r2["n_so"] = r["so"].ToString();
                            r2["n_tien"] = r["sotien"].ToString();
                            r2["x_so"] = 0;
                            r2["x_tien"] = 0;
                            r2["n_x"] = r["sotien"].ToString();
                            dstmp.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = dstmp.Tables[0].Select(sql);
                            if (dr.Length > 0)
                            {
                                dr[0]["n_so"] = decimal.Parse(dr[0]["n_so"].ToString()) + decimal.Parse(r["so"].ToString());
                                dr[0]["n_tien"] = decimal.Parse(dr[0]["n_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                                dr[0]["n_x"] = decimal.Parse(dr[0]["n_x"].ToString()) + decimal.Parse(r["sotien"].ToString());
                            }
                        }
                        n_so += decimal.Parse(r["so"].ToString());
                        n_tien += decimal.Parse(r["sotien"].ToString());
                    }
                }
            }
            if (nhapxuat == 1 || nhapxuat == 2)
            {
                //xuat
                sql = "select c.id,sum(b.soluong) as so,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai<>3 and a.nhom=" + i_nhom;
                sql += str;
                sql += " group by c.id";
                sql += " union all select c.id,-sum(b.soluong) as so,-sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai=3 and a.nhom=" + i_nhom;
                sql += str;
                sql += " group by c.id";
                sql += " union all select c.id,sum(b.soluong) as so,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai='XK' and a.nhom=" + i_nhom;
                sql += str;
                sql += " group by c.id";
                sql += " union all select c.id,sum(b.soluong) as so,sum(b.soluong*f.giamua) as sotien from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                sql += " group by c.id";
                sql += " union all select c.id,sum(b.soluong) as so,sum(b.soluong*f.giamua) as sotien from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                sql += " group by c.id";
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(dt, "id=" + int.Parse(r["id"].ToString()));
                    if (r1 != null)
                    {
                        sql = "id=" + int.Parse(r["id"].ToString());
                        r3 = getrowbyid(dstmp.Tables[0], sql);
                        if (r3 == null)
                        {
                            r2 = dstmp.Tables[0].NewRow();
                            r2["id"] = r["id"].ToString();
                            r2["dang"] = r1["dang"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["tyle_so"] = 0;
                            r2["tyle_tien"] = 0;
                            r2["x_so"] = r["so"].ToString();
                            r2["x_tien"] = r["sotien"].ToString();
                            r2["n_so"] = 0;
                            r2["n_tien"] = 0;
                            r2["n_x"] = r["sotien"].ToString();
                            dstmp.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = dstmp.Tables[0].Select(sql);
                            if (dr.Length > 0)
                            {
                                dr[0]["x_tien"] = decimal.Parse(dr[0]["x_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                                dr[0]["x_so"] = decimal.Parse(dr[0]["x_so"].ToString()) + decimal.Parse(r["so"].ToString());
                                dr[0]["n_x"] = decimal.Parse(dr[0]["n_x"].ToString()) + decimal.Parse(r["sotien"].ToString());
                            }
                        }
                        x_tien += decimal.Parse(r["sotien"].ToString());
                        x_so += decimal.Parse(r["so"].ToString());
                    }
                }
            }
            dsxml.Merge(dstmp.Tables[0].Select("true", "n_x desc"));
            foreach (DataRow r in dsxml.Tables[0].Rows)
            {
                r["n_so_tl"] = (n_so == 0) ? 0 : decimal.Parse(r["n_so"].ToString()) / n_so * 100;
                r["n_tien_tl"] = (n_tien == 0) ? 0 : decimal.Parse(r["n_tien"].ToString()) / n_tien * 100;
                r["x_so_tl"] = (x_so == 0) ? 0 : decimal.Parse(r["x_so"].ToString()) / x_so * 100;
                r["x_tien_tl"] = (x_tien == 0) ? 0 : decimal.Parse(r["x_tien"].ToString()) / x_tien * 100;
            }
            r1 = dsxml.Tables[0].NewRow();
            r1["id"] = 0;
            r1["ten"] = "TỔNG CỘNG";
            r1["dang"] = "";
            r1["n_so"] = n_so;
            r1["n_tien"] = n_tien;
            r1["x_so"] = x_so;
            r1["x_tien"] = x_tien;
            r1["n_so_tl"] = 0;
            r1["n_tien_tl"] = 0;
            r1["x_so_tl"] = 0;
            r1["x_tien_tl"] = 0;
            dsxml.Tables[0].Rows.Add(r1);
            return dsxml;
        }

        public DataSet get_2(int i_nhom, string tu, string den, DataTable dt, int nhapxuat, string str)
        {
            DataSet dstmp = new DataSet();
            DataSet dsmabd = new DataSet();
            DataSet dsxml = new DataSet();
            dstmp.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsmabd.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsxml.ReadXml("..//..//..//xml//d_truyvan.xml");
            decimal n_so = 0, n_tien = 0, x_so = 0, x_tien = 0;
            DataRow r1, r2, r3;
            DataRow[] dr;
            string usr = user, stime = "'" + f_ngay + "'";
            //nhap
            if (nhapxuat == 0 || nhapxuat == 2)
            {
                sql = "select c.manhom as id,count(*) as so,sum(b.sotien+b.sotien*b.vat/100+b.cuocvc+b.chaythu) as sotien from xxx.d_nhapll a,xxx.d_nhapct b," + usr + ".d_dmbd c";
                sql += " where a.id=b.id and b.mabd=c.id";
                sql += " and a.ngaysp between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str + " group by c.manhom";
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString());
                    r1 = getrowbyid(dt, sql);
                    if (r1 != null)
                    {
                        r3 = getrowbyid(dstmp.Tables[0], sql);
                        if (r3 == null)
                        {
                            r2 = dstmp.Tables[0].NewRow();
                            r2["id"] = r["id"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["tyle_so"] = 0;
                            r2["tyle_tien"] = 0;
                            r2["n_so"] = r["so"].ToString();
                            r2["n_tien"] = r["sotien"].ToString();
                            r2["x_so"] = 0;
                            r2["x_tien"] = 0;
                            dstmp.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = dstmp.Tables[0].Select(sql);
                            if (dr.Length > 0)
                            {
                                dr[0]["n_so"] = decimal.Parse(dr[0]["n_so"].ToString()) + decimal.Parse(r["so"].ToString());
                                dr[0]["n_tien"] = decimal.Parse(dr[0]["n_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                            }
                        }
                        n_so += decimal.Parse(r["so"].ToString());
                        n_tien += decimal.Parse(r["sotien"].ToString());
                    }
                }
            }
            if (nhapxuat == 1 || nhapxuat == 2)
            {
                //xuat mat hang
                sql = "select distinct c.manhom as id,b.mabd from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                sql += " union all select distinct c.manhom as id,b.mabd from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai='XK' and a.nhom=" + i_nhom;
                sql += str;
                sql += " union all select distinct c.manhom as id,b.mabd from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                sql += " union all select distinct c.manhom as id,b.mabd from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString()) + " and n_so=" + int.Parse(r["mabd"].ToString());
                    r1 = getrowbyid(dsmabd.Tables[0], sql);
                    if (r1 == null)
                    {
                        r2 = dsmabd.Tables[0].NewRow();
                        r2["id"] = r["id"].ToString();
                        r2["n_so"] = r["mabd"].ToString();
                        dsmabd.Tables[0].Rows.Add(r2);
                    }
                }
                //xuat sotien
                sql = "select c.manhom as id,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai<>3 and a.nhom=" + i_nhom;
                sql += str + " group by c.manhom";
                sql += " union all select c.manhom as id,-sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai=3 and a.nhom=" + i_nhom;
                sql += str + " group by c.manhom";
                sql += " union all select c.manhom as id,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai='XK' and a.nhom=" + i_nhom;
                sql += str + " group by c.manhom";
                sql += " union all select c.manhom as id,sum(b.soluong*f.giamua) as sotien from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str + " group by c.manhom";
                sql += " union all select c.manhom as id,sum(b.soluong*f.giamua) as sotien from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str + " group by c.manhom";
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(dt, "id=" + int.Parse(r["id"].ToString()));
                    if (r1 != null)
                    {
                        sql = "id=" + int.Parse(r["id"].ToString());
                        r3 = getrowbyid(dstmp.Tables[0], sql);
                        if (r3 == null)
                        {
                            r2 = dstmp.Tables[0].NewRow();
                            r2["id"] = r["id"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["tyle_so"] = 0;
                            r2["tyle_tien"] = 0;
                            r2["x_so"] = 0;
                            r2["x_tien"] = r["sotien"].ToString();
                            r2["n_so"] = 0;
                            r2["n_tien"] = 0;
                            dstmp.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = dstmp.Tables[0].Select(sql);
                            if (dr.Length > 0) dr[0]["x_tien"] = decimal.Parse(dr[0]["x_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                        }
                        x_tien += decimal.Parse(r["sotien"].ToString());
                    }
                }
                foreach (DataRow r in dstmp.Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString());
                    x_so += dsmabd.Tables[0].Select(sql).Length;
                    r["x_so"] = dsmabd.Tables[0].Select(sql).Length;
                }
            }
            dsxml.Merge(dstmp.Tables[0].Select("true", "id"));
            foreach (DataRow r in dsxml.Tables[0].Rows)
            {
                r["n_so_tl"] = (n_so == 0) ? 0 : decimal.Parse(r["n_so"].ToString()) / n_so * 100;
                r["n_tien_tl"] = (n_tien == 0) ? 0 : decimal.Parse(r["n_tien"].ToString()) / n_tien * 100;
                r["x_so_tl"] = (x_so == 0) ? 0 : decimal.Parse(r["x_so"].ToString()) / x_so * 100;
                r["x_tien_tl"] = (x_tien == 0) ? 0 : decimal.Parse(r["x_tien"].ToString()) / x_tien * 100;
            }
            r1 = dsxml.Tables[0].NewRow();
            r1["id"] = 0;
            r1["ten"] = "TỔNG CỘNG";
            r1["dang"] = "";
            r1["n_so"] = n_so;
            r1["n_tien"] = n_tien;
            r1["x_so"] = x_so;
            r1["x_tien"] = x_tien;
            r1["n_so_tl"] = 0;
            r1["n_tien_tl"] = 0;
            r1["x_so_tl"] = 0;
            r1["x_tien_tl"] = 0;
            dsxml.Tables[0].Rows.Add(r1);
            return dsxml;
        }

        public DataSet get_3(int i_nhom, string tu, string den, DataTable dt, int nhapxuat, string str)
        {
            DataSet dstmp = new DataSet();
            DataSet dsmabd = new DataSet();
            DataSet dsxml = new DataSet();
            dstmp.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsmabd.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsxml.ReadXml("..//..//..//xml//d_truyvan.xml");
            decimal n_so = 0, n_tien = 0, x_so = 0, x_tien = 0;
            DataRow r1, r2, r3;
            DataRow[] dr;
            string usr = user, stime = "'" + f_ngay + "'";
            //nhap
            if (nhapxuat == 0 || nhapxuat == 2)
            {
                sql = "select c.mahang as id,count(*) as so,sum(b.sotien+b.sotien*b.vat/100+b.cuocvc+b.chaythu) as sotien from xxx.d_nhapll a,xxx.d_nhapct b," + usr + ".d_dmbd c";
                sql += " where a.id=b.id and b.mabd=c.id";
                sql += " and a.ngaysp between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str + " group by c.mahang";
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString());
                    r1 = getrowbyid(dt, sql);
                    if (r1 != null)
                    {
                        r3 = getrowbyid(dstmp.Tables[0], sql);
                        if (r3 == null)
                        {
                            r2 = dstmp.Tables[0].NewRow();
                            r2["id"] = r["id"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["tyle_so"] = 0;
                            r2["tyle_tien"] = 0;
                            r2["n_so"] = r["so"].ToString();
                            r2["n_tien"] = r["sotien"].ToString();
                            r2["x_so"] = 0;
                            r2["x_tien"] = 0;
                            r2["n_x"] = r["sotien"].ToString();
                            dstmp.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = dstmp.Tables[0].Select(sql);
                            if (dr.Length > 0)
                            {
                                dr[0]["n_so"] = decimal.Parse(dr[0]["n_so"].ToString()) + decimal.Parse(r["so"].ToString());
                                dr[0]["n_tien"] = decimal.Parse(dr[0]["n_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                                dr[0]["n_x"] = decimal.Parse(dr[0]["n_x"].ToString()) + decimal.Parse(r["sotien"].ToString());
                            }
                        }
                        n_so += decimal.Parse(r["so"].ToString());
                        n_tien += decimal.Parse(r["sotien"].ToString());
                    }
                }
            }
            if (nhapxuat == 1 || nhapxuat == 2)
            {
                //xuat mat hang
                sql = "select distinct c.mahang as id,b.mabd from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                sql += " union all select distinct c.mahang as id,b.mabd from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai='XK' and a.nhom=" + i_nhom;
                sql += str;
                sql += " union all select distinct c.mahang as id,b.mabd from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                sql += " union all select distinct c.mahang as id,b.mabd from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString()) + " and n_so=" + int.Parse(r["mabd"].ToString());
                    r1 = getrowbyid(dsmabd.Tables[0], sql);
                    if (r1 == null)
                    {
                        r2 = dsmabd.Tables[0].NewRow();
                        r2["id"] = r["id"].ToString();
                        r2["n_so"] = r["mabd"].ToString();
                        dsmabd.Tables[0].Rows.Add(r2);
                    }
                }
                //xuat sotien
                sql = "select c.mahang as id,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai<>3 and a.nhom=" + i_nhom;
                sql += str + " group by c.mahang";
                sql += " union all select c.mahang as id,-sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai=3 and a.nhom=" + i_nhom;
                sql += str + " group by c.mahang";
                sql += " union all select c.mahang as id,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai='XK' and a.nhom=" + i_nhom;
                sql += str + " group by c.mahang";
                sql += " union all select c.mahang as id,sum(b.soluong*f.giamua) as sotien from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str + " group by c.mahang";
                sql += " union all select c.mahang as id,sum(b.soluong*f.giamua) as sotien from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str + " group by c.mahang";
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(dt, "id=" + int.Parse(r["id"].ToString()));
                    if (r1 != null)
                    {
                        sql = "id=" + int.Parse(r["id"].ToString());
                        r3 = getrowbyid(dstmp.Tables[0], sql);
                        if (r3 == null)
                        {
                            r2 = dstmp.Tables[0].NewRow();
                            r2["id"] = r["id"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["tyle_so"] = 0;
                            r2["tyle_tien"] = 0;
                            r2["x_so"] = 0;
                            r2["x_tien"] = r["sotien"].ToString();
                            r2["n_x"] = r["sotien"].ToString();
                            r2["n_so"] = 0;
                            r2["n_tien"] = 0;
                            dstmp.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = dstmp.Tables[0].Select(sql);
                            if (dr.Length > 0)
                            {
                                dr[0]["x_tien"] = decimal.Parse(dr[0]["x_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                                dr[0]["n_x"] = decimal.Parse(dr[0]["n_x"].ToString()) + decimal.Parse(r["sotien"].ToString());
                            }
                        }
                        x_tien += decimal.Parse(r["sotien"].ToString());
                    }
                }
                foreach (DataRow r in dstmp.Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString());
                    x_so += dsmabd.Tables[0].Select(sql).Length;
                    r["x_so"] = dsmabd.Tables[0].Select(sql).Length;
                }
            }
            dsxml.Merge(dstmp.Tables[0].Select("true", "n_x desc"));
            foreach (DataRow r in dsxml.Tables[0].Rows)
            {
                r["n_so_tl"] = (n_so == 0) ? 0 : decimal.Parse(r["n_so"].ToString()) / n_so * 100;
                r["n_tien_tl"] = (n_tien == 0) ? 0 : decimal.Parse(r["n_tien"].ToString()) / n_tien * 100;
                r["x_so_tl"] = (x_so == 0) ? 0 : decimal.Parse(r["x_so"].ToString()) / x_so * 100;
                r["x_tien_tl"] = (x_tien == 0) ? 0 : decimal.Parse(r["x_tien"].ToString()) / x_tien * 100;
            }
            r1 = dsxml.Tables[0].NewRow();
            r1["id"] = 0;
            r1["ten"] = "TỔNG CỘNG";
            r1["dang"] = "";
            r1["n_so"] = n_so;
            r1["n_tien"] = n_tien;
            r1["x_so"] = x_so;
            r1["x_tien"] = x_tien;
            r1["n_so_tl"] = 0;
            r1["n_tien_tl"] = 0;
            r1["x_so_tl"] = 0;
            r1["x_tien_tl"] = 0;
            dsxml.Tables[0].Rows.Add(r1);
            return dsxml;
        }

        public DataSet get_4(int i_nhom, string tu, string den, DataTable dt, string str)
        {
            DataSet dstmp = new DataSet();
            DataSet dsxml = new DataSet();
            dstmp.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsxml.ReadXml("..//..//..//xml//d_truyvan.xml");
            decimal n_so = 0, n_tien = 0, x_so = 0, x_tien = 0;
            DataRow r1, r2, r3;
            DataRow[] dr;
            string usr = user, stime = "'" + f_ngay + "'";
            sql = "select a.madv as id,count(*) as so,sum(b.sotien+b.sotien*b.vat/100+b.cuocvc+b.chaythu) as sotien from xxx.d_nhapll a,xxx.d_nhapct b," + usr + ".d_dmbd c";
            sql += " where a.id=b.id and b.mabd=c.id";
            sql += " and a.ngaysp between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += str + " group by a.madv";
            foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
            {
                sql = "id=" + int.Parse(r["id"].ToString());
                r1 = getrowbyid(dt, sql);
                if (r1 != null)
                {
                    r3 = getrowbyid(dstmp.Tables[0], sql);
                    if (r3 == null)
                    {
                        r2 = dstmp.Tables[0].NewRow();
                        r2["id"] = r["id"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["tyle_so"] = 0;
                        r2["tyle_tien"] = 0;
                        r2["n_so"] = r["so"].ToString();
                        r2["n_tien"] = r["sotien"].ToString();
                        r2["x_so"] = 0;
                        r2["x_tien"] = 0;
                        r2["n_x"] = r["sotien"].ToString();
                        dstmp.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = dstmp.Tables[0].Select(sql);
                        if (dr.Length > 0)
                        {
                            dr[0]["n_so"] = decimal.Parse(dr[0]["n_so"].ToString()) + decimal.Parse(r["so"].ToString());
                            dr[0]["n_tien"] = decimal.Parse(dr[0]["n_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                            dr[0]["n_x"] = decimal.Parse(dr[0]["n_x"].ToString()) + decimal.Parse(r["sotien"].ToString());
                        }
                    }
                    n_so += decimal.Parse(r["so"].ToString());
                    n_tien += decimal.Parse(r["sotien"].ToString());
                }
            }

            dsxml.Merge(dstmp.Tables[0].Select("true", "n_x desc"));
            foreach (DataRow r in dsxml.Tables[0].Rows)
            {
                r["n_so_tl"] = (n_so == 0) ? 0 : decimal.Parse(r["n_so"].ToString()) / n_so * 100;
                r["n_tien_tl"] = (n_tien == 0) ? 0 : decimal.Parse(r["n_tien"].ToString()) / n_tien * 100;
                r["x_so_tl"] = (x_so == 0) ? 0 : decimal.Parse(r["x_so"].ToString()) / x_so * 100;
                r["x_tien_tl"] = (x_tien == 0) ? 0 : decimal.Parse(r["x_tien"].ToString()) / x_tien * 100;
            }
            r1 = dsxml.Tables[0].NewRow();
            r1["id"] = 0;
            r1["ten"] = "TỔNG CỘNG";
            r1["dang"] = "";
            r1["n_so"] = n_so;
            r1["n_tien"] = n_tien;
            r1["x_so"] = x_so;
            r1["x_tien"] = x_tien;
            r1["n_so_tl"] = 0;
            r1["n_tien_tl"] = 0;
            r1["x_so_tl"] = 0;
            r1["x_tien_tl"] = 0;
            dsxml.Tables[0].Rows.Add(r1);
            return dsxml;
        }

        public DataSet get_8(int i_nhom, string tu, string den, int nhapxuat, string str)
        {
            string usr = user, table = bNoiNgoai_Hang(i_nhom) ? "," + usr + ".d_dmhang g," + usr + ".d_nhomhang h" : "," + usr + ".d_dmnuoc g," + usr + ".d_nhomnuoc h";
            string dk = bNoiNgoai_Hang(i_nhom) ? " and c.mahang=g.id and g.loai=h.id" : " and c.manuoc=g.id and g.loai=h.id";
            DataTable dt = bNoiNgoai_Hang(i_nhom) ? get_data("select * from " + usr + ".d_nhomhang where nhom=" + i_nhom).Tables[0] : get_data("select * from " + usr + ".d_nhomnuoc where nhom=" + i_nhom).Tables[0];
            DataSet dstmp = new DataSet();
            DataSet dsmabd = new DataSet();
            DataSet dsxml = new DataSet();
            dstmp.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsmabd.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsxml.ReadXml("..//..//..//xml//d_truyvan.xml");
            decimal n_so = 0, n_tien = 0, x_so = 0, x_tien = 0;
            DataRow r1, r2, r3;
            DataRow[] dr;
            string stime = "'" + f_ngay + "'";
            //nhap
            if (nhapxuat == 0 || nhapxuat == 2)
            {
                sql = "select h.id,count(*) as so,sum(b.sotien+b.sotien*b.vat/100+b.cuocvc+b.chaythu) as sotien from xxx.d_nhapll a,xxx.d_nhapct b," + usr + ".d_dmbd c";
                sql += table;
                sql += " where a.id=b.id and b.mabd=c.id";
                sql += dk;
                sql += " and a.ngaysp between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str + " group by h.id";
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString());
                    r1 = getrowbyid(dt, sql);
                    if (r1 != null)
                    {
                        r3 = getrowbyid(dstmp.Tables[0], sql);
                        if (r3 == null)
                        {
                            r2 = dstmp.Tables[0].NewRow();
                            r2["id"] = r["id"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["tyle_so"] = 0;
                            r2["tyle_tien"] = 0;
                            r2["n_so"] = r["so"].ToString();
                            r2["n_tien"] = r["sotien"].ToString();
                            r2["x_so"] = 0;
                            r2["x_tien"] = 0;
                            r2["n_x"] = r["sotien"].ToString();
                            dstmp.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = dstmp.Tables[0].Select(sql);
                            if (dr.Length > 0)
                            {
                                dr[0]["n_so"] = decimal.Parse(dr[0]["n_so"].ToString()) + decimal.Parse(r["so"].ToString());
                                dr[0]["n_tien"] = decimal.Parse(dr[0]["n_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                                dr[0]["n_x"] = decimal.Parse(dr[0]["n_x"].ToString()) + decimal.Parse(r["sotien"].ToString());
                            }
                        }
                        n_so += decimal.Parse(r["so"].ToString());
                        n_tien += decimal.Parse(r["sotien"].ToString());
                    }
                }
            }
            if (nhapxuat == 1 || nhapxuat == 2)
            {
                //xuat mat hang
                sql = "select distinct h.id,b.mabd from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += table;
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += dk;
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                sql += " union all select distinct h.id,b.mabd from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += table;
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += dk;
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai='XK' and a.nhom=" + i_nhom;
                sql += str;
                sql += " union all select distinct h.id,b.mabd from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += table;
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += dk;
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                sql += " union all select distinct h.id,b.mabd from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += table;
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += dk;
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str;
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString()) + " and n_so=" + int.Parse(r["mabd"].ToString());
                    r1 = getrowbyid(dsmabd.Tables[0], sql);
                    if (r1 == null)
                    {
                        r2 = dsmabd.Tables[0].NewRow();
                        r2["id"] = r["id"].ToString();
                        r2["n_so"] = r["mabd"].ToString();
                        dsmabd.Tables[0].Rows.Add(r2);
                    }
                }
                //xuat sotien
                sql = "select h.id,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += table;
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += dk;
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai<>3 and a.nhom=" + i_nhom;
                sql += str + " group by h.id";
                sql += " union all select h.id,-sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += table;
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += dk;
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai=3 and a.nhom=" + i_nhom;
                sql += str + " group by h.id";
                sql += " union all select h.id,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += table;
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += dk;
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.loai='XK' and a.nhom=" + i_nhom;
                sql += str + " group by h.id";
                sql += " union all select h.id,sum(b.soluong*f.giamua) as sotien from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += table;
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += dk;
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str + " group by h.id";
                sql += " union all select h.id,sum(b.soluong*f.giamua) as sotien from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f";
                sql += table;
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
                sql += dk;
                sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
                sql += " and a.nhom=" + i_nhom;
                sql += str + " group by h.id";
                foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
                {
                    r1 = getrowbyid(dt, "id=" + int.Parse(r["id"].ToString()));
                    if (r1 != null)
                    {
                        sql = "id=" + int.Parse(r["id"].ToString());
                        r3 = getrowbyid(dstmp.Tables[0], sql);
                        if (r3 == null)
                        {
                            r2 = dstmp.Tables[0].NewRow();
                            r2["id"] = r["id"].ToString();
                            r2["ten"] = r1["ten"].ToString();
                            r2["tyle_so"] = 0;
                            r2["tyle_tien"] = 0;
                            r2["x_so"] = 0;
                            r2["x_tien"] = r["sotien"].ToString();
                            r2["n_x"] = r["sotien"].ToString();
                            r2["n_so"] = 0;
                            r2["n_tien"] = 0;
                            dstmp.Tables[0].Rows.Add(r2);
                        }
                        else
                        {
                            dr = dstmp.Tables[0].Select(sql);
                            if (dr.Length > 0)
                            {
                                dr[0]["x_tien"] = decimal.Parse(dr[0]["x_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                                dr[0]["n_x"] = decimal.Parse(dr[0]["n_x"].ToString()) + decimal.Parse(r["sotien"].ToString());
                            }
                        }
                        x_tien += decimal.Parse(r["sotien"].ToString());
                    }
                }
                foreach (DataRow r in dstmp.Tables[0].Rows)
                {
                    sql = "id=" + int.Parse(r["id"].ToString());
                    x_so += dsmabd.Tables[0].Select(sql).Length;
                    r["x_so"] = dsmabd.Tables[0].Select(sql).Length;
                }
            }
            dsxml.Merge(dstmp.Tables[0].Select("true", "n_x desc"));
            foreach (DataRow r in dsxml.Tables[0].Rows)
            {
                r["n_so_tl"] = (n_so == 0) ? 0 : decimal.Parse(r["n_so"].ToString()) / n_so * 100;
                r["n_tien_tl"] = (n_tien == 0) ? 0 : decimal.Parse(r["n_tien"].ToString()) / n_tien * 100;
                r["x_so_tl"] = (x_so == 0) ? 0 : decimal.Parse(r["x_so"].ToString()) / x_so * 100;
                r["x_tien_tl"] = (x_tien == 0) ? 0 : decimal.Parse(r["x_tien"].ToString()) / x_tien * 100;
            }
            r1 = dsxml.Tables[0].NewRow();
            r1["id"] = 0;
            r1["ten"] = "TỔNG CỘNG";
            r1["dang"] = "";
            r1["n_so"] = n_so;
            r1["n_tien"] = n_tien;
            r1["x_so"] = x_so;
            r1["x_tien"] = x_tien;
            r1["n_so_tl"] = 0;
            r1["n_tien_tl"] = 0;
            r1["x_so_tl"] = 0;
            r1["x_tien_tl"] = 0;
            dsxml.Tables[0].Rows.Add(r1);
            return dsxml;
        }

        public DataSet get_9(int i_nhom, string tu, string den, DataTable dt, string str)
        {
            DataSet dstmp = new DataSet();
            DataSet dsmabd = new DataSet();
            DataSet dsxml = new DataSet();
            dstmp.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsmabd.ReadXml("..//..//..//xml//d_truyvan.xml");
            dsxml.ReadXml("..//..//..//xml//d_truyvan.xml");
            decimal n_so = 0, n_tien = 0, x_so = 0, x_tien = 0;
            DataRow r1, r2, r3;
            DataRow[] dr;
            string usr = user, stime = "'" + f_ngay + "'";

            //xuat mat hang
            sql = "select distinct g.id,b.mabd from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_duockp g";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and a.makp=g.id";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += str;
            sql += " union all select distinct g.id,b.mabd from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_duockp g";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and a.makp=g.id";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += str;
            sql += " union all select distinct g.id,b.mabd from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_duockp g";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and a.makp=g.makp";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += str;
            foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
            {
                sql = "id=" + int.Parse(r["id"].ToString()) + " and n_so=" + int.Parse(r["mabd"].ToString());
                r1 = getrowbyid(dsmabd.Tables[0], sql);
                if (r1 == null)
                {
                    r2 = dsmabd.Tables[0].NewRow();
                    r2["id"] = r["id"].ToString();
                    r2["n_so"] = r["mabd"].ToString();
                    dsmabd.Tables[0].Rows.Add(r2);
                }
            }
            //xuat sotien
            sql = "select g.id,sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_duockp g";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and a.makp=g.id";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai<>3 and a.nhom=" + i_nhom;
            sql += str + " group by g.id";
            sql += " union all select g.id,-sum(b.soluong*f.giamua) as sotien from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_duockp g";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and a.makp=g.id";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai=3 and a.nhom=" + i_nhom;
            sql += str + " group by g.id";
            sql += " union all select g.id,sum(b.soluong*f.giamua) as sotien from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_duockp g";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and a.makp=g.id";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += str + " group by g.id";
            sql += " union all select g.id,sum(b.soluong*f.giamua) as sotien from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_duockp g";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and a.makp=g.makp";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += str + " group by g.id";
            foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
            {
                r1 = getrowbyid(dt, "id=" + int.Parse(r["id"].ToString()));
                if (r1 != null)
                {
                    sql = "id=" + int.Parse(r["id"].ToString());
                    r3 = getrowbyid(dstmp.Tables[0], sql);
                    if (r3 == null)
                    {
                        r2 = dstmp.Tables[0].NewRow();
                        r2["id"] = r["id"].ToString();
                        r2["ten"] = r1["ten"].ToString();
                        r2["tyle_so"] = 0;
                        r2["tyle_tien"] = 0;
                        r2["x_so"] = 0;
                        r2["x_tien"] = r["sotien"].ToString();
                        r2["n_x"] = r["sotien"].ToString();
                        r2["n_so"] = 0;
                        r2["n_tien"] = 0;
                        dstmp.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        dr = dstmp.Tables[0].Select(sql);
                        if (dr.Length > 0)
                        {
                            dr[0]["x_tien"] = decimal.Parse(dr[0]["x_tien"].ToString()) + decimal.Parse(r["sotien"].ToString());
                            dr[0]["n_x"] = decimal.Parse(dr[0]["n_x"].ToString()) + decimal.Parse(r["sotien"].ToString());
                        }
                    }
                    x_tien += decimal.Parse(r["sotien"].ToString());
                }
            }
            foreach (DataRow r in dstmp.Tables[0].Rows)
            {
                sql = "id=" + int.Parse(r["id"].ToString());
                x_so += dsmabd.Tables[0].Select(sql).Length;
                r["x_so"] = dsmabd.Tables[0].Select(sql).Length;
            }

            dsxml.Merge(dstmp.Tables[0].Select("true", "n_x desc"));
            foreach (DataRow r in dsxml.Tables[0].Rows)
            {
                r["n_so_tl"] = (n_so == 0) ? 0 : decimal.Parse(r["n_so"].ToString()) / n_so * 100;
                r["n_tien_tl"] = (n_tien == 0) ? 0 : decimal.Parse(r["n_tien"].ToString()) / n_tien * 100;
                r["x_so_tl"] = (x_so == 0) ? 0 : decimal.Parse(r["x_so"].ToString()) / x_so * 100;
                r["x_tien_tl"] = (x_tien == 0) ? 0 : decimal.Parse(r["x_tien"].ToString()) / x_tien * 100;
            }
            r1 = dsxml.Tables[0].NewRow();
            r1["id"] = 0;
            r1["ten"] = "TỔNG CỘNG";
            r1["dang"] = "";
            r1["n_so"] = n_so;
            r1["n_tien"] = n_tien;
            r1["x_so"] = x_so;
            r1["x_tien"] = x_tien;
            r1["n_so_tl"] = 0;
            r1["n_tien_tl"] = 0;
            r1["x_so_tl"] = 0;
            r1["x_tien_tl"] = 0;
            dsxml.Tables[0].Rows.Add(r1);
            return dsxml;
        }
        public DataSet get_6(int i_nhom, string tu, string den, string str)
        {
            string usr = user, stime = "'" + f_ngay + "'";
            DataSet dstmp = new DataSet();
            DataSet dsxml = new DataSet();
            DataSet dstyle = new DataSet();
            DataRow r1, r2;
            DataRow[] dr;
            dstyle.ReadXml("..//..//..//xml//m_tyle.xml");
            dstmp.ReadXml("..//..//..//xml//d_truyvan6.xml");
            DataColumn dc;
            sql = "select distinct to_char(a.ngay,'yymmdd') as ngay ";
            sql += " from xxx.d_theodoigia a," + usr + ".d_dmbd c where a.mabd=c.id ";
            sql += str;
            sql += " and c.nhom=" + i_nhom;
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Select("ngay<>''", "ngay"))
            {
                try
                {
                    dc = new DataColumn();
                    dc.ColumnName = "c" + r["ngay"].ToString();
                    dc.DataType = Type.GetType("System.Decimal");
                    dstmp.Tables[0].Columns.Add(dc);
                }
                catch { }
            }
            dc = new DataColumn();
            dc.ColumnName = "tyle";
            dc.DataType = Type.GetType("System.Decimal");
            dstmp.Tables[0].Columns.Add(dc);
            dc = new DataColumn();
            dc.ColumnName = "ghichu";
            dc.DataType = Type.GetType("System.String");
            dstmp.Tables[0].Columns.Add(dc);
            //
            sql = "select c.id,trim(c.ten)||' '||c.hamluong as ten,c.dang,a.dongia,to_char(a.ngay,'yymmdd') as ngay ";
            sql += " from xxx.d_theodoigia a," + usr + ".d_dmbd c where a.mabd=c.id";
            sql += str;
            sql += " and c.nhom=" + i_nhom;
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " order by a.ngay";
            foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Select("dongia>0", "ten,ngay"))
            {
                sql = "id=" + int.Parse(r["id"].ToString());
                r1 = getrowbyid(dstmp.Tables[0], sql);
                if (r1 == null)
                {
                    r2 = dstmp.Tables[0].NewRow();
                    r2["id"] = r["id"].ToString();
                    r2["ten"] = r["ten"].ToString();
                    r2["dang"] = r["dang"].ToString();
                    for (int k = 3; k < dstmp.Tables[0].Columns.Count - 2; k++) r2[dstmp.Tables[0].Columns[k].ColumnName.ToString()] = 0;
                    r2["c" + r["ngay"].ToString()] = decimal.Parse(r["dongia"].ToString());
                    dstmp.Tables[0].Rows.Add(r2);
                }
                else
                {
                    dr = dstmp.Tables[0].Select(sql);
                    if (dr.Length > 0) dr[0]["c" + r["ngay"].ToString()] = decimal.Parse(r["dongia"].ToString());
                }
                sql = "mabd=" + int.Parse(r["id"].ToString());
                r1 = getrowbyid(dstyle.Tables[0], sql);
                if (r1 == null)
                {
                    r2 = dstyle.Tables[0].NewRow();
                    r2["mabd"] = r["id"].ToString();
                    r2["cu"] = decimal.Parse(r["dongia"].ToString());
                    r2["moi"] = r2["cu"];
                    dstyle.Tables[0].Rows.Add(r2);
                }
                else
                {
                    dr = dstyle.Tables[0].Select(sql);
                    if (dr.Length > 0) dr[0]["moi"] = decimal.Parse(r["dongia"].ToString());
                }
            }
            decimal tyle;
            foreach (DataRow r in dstyle.Tables[0].Rows)
            {
                dr = dstmp.Tables[0].Select("id=" + int.Parse(r["mabd"].ToString()));
                if (dr.Length > 0)
                {
                    tyle = Math.Round((decimal.Parse(r["moi"].ToString()) - decimal.Parse(r["cu"].ToString())) / decimal.Parse(r["cu"].ToString()) * 100, 2);
                    dr[0]["tyle"] = tyle;
                    dr[0]["ghichu"] = (tyle == 0) ? "" : (tyle > 0) ? "Tăng" : "Giảm";
                }
            }
            //
            dsxml = dstmp.Copy();
            dsxml.Clear();
            dsxml.Merge(dstmp.Tables[0].Select("true", "ten"));
            return dsxml;
        }

        public DataSet get_5(int i_nhom, string mmyy, string nam, string str)
        {
            string usr = user, xxx = usr + mmyy;
            DataSet dstmp = new DataSet();
            DataSet dsxml = new DataSet();
            sql = "select c.id,trim(c.ten)||' '||c.hamluong as ten,c.dang,c.sodk as losx,substr(b.handung,1,2)||'/'||substr(b.handung,3,2) as handung,d.ten as kho,";
            sql += "a.tondau+a.slnhap-a.slxuat as soluong,b.giamua,(a.tondau+a.slnhap-a.slxuat)*b.giamua as sotien,";
            sql += "substr(b.handung,3,2)||substr(b.handung,1,2) as hd";
            sql += " from " + xxx + ".d_tonkhoct a," + usr + ".d_dmbd c," + xxx + ".d_theodoi b," + usr + ".d_dmkho d";
            sql += " where a.mabd=c.id and a.stt=b.id and a.makho=d.id and a.tondau+a.slnhap-a.slxuat>0 and b.handung !='0000' and b.handung!='????'";
            sql += str;
            sql += " and c.nhom=" + i_nhom;
            sql += " and substr(c.sodk,length(trim(c.sodk))-1) <='" + nam + "'";
            dstmp = get_data(sql);
            //
            sql = "select 0 as id,trim(c.ten)||' '||c.hamluong as ten,c.dang,c.sodk as losx,substr(b.handung,1,2)||'/'||substr(b.handung,3,2) as handung,trim(d.ten)||'('||trim(e.ten)||')' as kho ,";
            sql += "a.tondau+a.slnhap-a.slxuat as soluong,b.giamua,(a.tondau+a.slnhap-a.slxuat)*b.giamua as sotien,";
            sql += "substr(b.handung,3,2)||substr(b.handung,1,2) as hd";
            sql += " from " + xxx + ".d_tutrucct a," + usr + ".d_dmbd c," + xxx + ".d_theodoi b," + usr + ".d_dmkho d," + usr + ".d_duockp e";
            sql += " where a.mabd=c.id and a.stt=b.id and a.makho=d.id and a.makp=e.id and a.tondau+a.slnhap-a.slxuat>0 and b.handung !='0000' and b.handung!='????'";
            sql += str;
            sql += " and c.nhom=" + i_nhom;
            sql += " and substr(c.sodk,length(trim(c.sodk))-1) <='" + nam + "'";
            dstmp = merge(dstmp, get_data(sql));
            dsxml = dstmp.Copy();
            dsxml.Clear();
            dsxml.Merge(dstmp.Tables[0].Select("true", "kho,ten,hd"));
            return dsxml;
        }

        public DataSet merge(DataSet ds1, DataSet ds2)
        {
            DataRow r1;
            foreach (DataRow r in ds2.Tables[0].Rows)
            {
                r1 = ds1.Tables[0].NewRow();
                for (int i = 0; i < ds2.Tables[0].Columns.Count; i++) r1[i] = r[i].ToString();
                ds1.Tables[0].Rows.Add(r1);
            }
            return ds1;
        }

        public DataSet get_7(int i_nhom, string mmyy, string handung, string str, string d_makho)
        {
            string usr = user, xxx = usr + mmyy;
            DataSet dstmp = new DataSet();
            DataSet dsxml = new DataSet();
            sql = "select c.id,trim(c.ten)||' '||c.hamluong as ten,c.dang,b.losx,substr(b.handung,1,2)||'/'||substr(b.handung,3,2) as handung,d.ten as kho,";
            sql += "a.tondau+a.slnhap-a.slxuat as soluong,b.giamua,(a.tondau+a.slnhap-a.slxuat)*b.giamua as sotien,";
            sql += "substr(b.handung,3,2)||substr(b.handung,1,2) as hd";
            sql += " from " + xxx + ".d_tonkhoct a," + usr + ".d_dmbd c," + xxx + ".d_theodoi b," + usr + ".d_dmkho d";
            sql += " where a.mabd=c.id and a.stt=b.id and a.makho=d.id and a.tondau+a.slnhap-a.slxuat>0 and b.handung !='0000' and b.handung!='????'";
            sql += str;
            sql += " and c.nhom=" + i_nhom;
            if (d_makho.Trim().Trim(',') != "") sql += " and a.makho in (" + d_makho.Trim().Trim(',') + ")";
            sql += " and substr(b.handung,3,2)||substr(b.handung,1,2) <='" + handung.Substring(2, 2) + handung.Substring(0, 2) + "'";
            dstmp = get_data(sql);
            //
            sql = "select 0 as id,trim(c.ten)||' '||c.hamluong as ten,c.dang,b.losx,substr(b.handung,1,2)||'/'||substr(b.handung,3,2) as handung,trim(d.ten)||'('||trim(e.ten)||')' as kho ,";
            sql += "a.tondau+a.slnhap-a.slxuat as soluong,b.giamua,(a.tondau+a.slnhap-a.slxuat)*b.giamua as sotien,";
            sql += "substr(b.handung,3,2)||substr(b.handung,1,2) as hd ";
            sql += " from " + xxx + ".d_tutrucct a," + usr + ".d_dmbd c," + xxx + ".d_theodoi b," + usr + ".d_dmkho d," + usr + ".d_duockp e";
            sql += " where a.mabd=c.id and a.stt=b.id and a.makho=d.id and a.makp=e.id and a.tondau+a.slnhap-a.slxuat>0 and b.handung !='0000' and b.handung!='????'";
            sql += str;
            sql += " and c.nhom=" + i_nhom;
            if (d_makho.Trim().Trim(',') != "") sql += " and a.makho in (" + d_makho.Trim().Trim(',') + ")";
            sql += " and substr(b.handung,3,2)||substr(b.handung,1,2) <='" + handung.Substring(2, 2) + handung.Substring(0, 2) + "'";
            dstmp = merge(dstmp, get_data(sql));
            dsxml = dstmp.Copy();
            dsxml.Clear();
            dsxml.Merge(dstmp.Tables[0].Select("true", "kho,ten,hd"));
            return dsxml;
        }

        public string get_tt_duyet(decimal sl, DataRow[] dr)
        {
            int n = dr.Length;
            decimal so = 0;
            string s = "";
            bool bFound = false;
            for (int i = 0; i < n; i++)
            {
                so = decimal.Parse(dr[i]["soluong"].ToString());
                s = dr[i]["tt"].ToString().Trim() + ",";
                for (int j = i + 1; j < n; j++)
                {
                    so += decimal.Parse(dr[j]["soluong"].ToString());
                    s += dr[j]["tt"].ToString().Trim() + ",";
                    if (so == sl)
                    {
                        i = n;
                        bFound = true;
                        break;
                    }
                }
                if (i == n)
                {
                    bFound = true;
                    break;
                }
                for (int j = 0; j < n; j++)
                {
                    if (i != j)
                    {
                        so += decimal.Parse(dr[j]["soluong"].ToString());
                        s += dr[j]["tt"].ToString().Trim() + ",";
                    }
                    if (so == sl)
                    {
                        i = n;
                        bFound = true;
                        break;
                    }
                }
            }
            return (bFound) ? s : "";
        }

        public DataSet get_sotien_dbv(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            sql = "select case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += "from xxx.d_xuatsdll a inner join xxx.d_thucxuat b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai<>3 and a.nhom=" + i_nhom;
            sql += " group by case when d.stt is null then 0 else d.stt end ";
            sql += " union all select case when d.stt is null then 0 else d.stt end as stt,-sum(b.soluong*f.giamua) as sotien ";
            sql += "from xxx.d_xuatsdll a inner join xxx.d_thucxuat b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai=3 and a.nhom=" + i_nhom;
            sql += " group by case when d.stt is null then 0 else d.stt end";
            sql += " union all select case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.d_xuatll a inner join xxx.d_xuatct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai='XK' and a.nhom=" + i_nhom;
            sql += " group by case when d.stt is null then 0 else d.stt end";
            sql += " union all select case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.d_ngtrull a inner join xxx.d_ngtruct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " inner join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " group by case when d.stt is null then 0 else d.stt end";
            sql += " union all select case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.bhytkb a inner join xxx.bhytthuoc b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " group by case when d.stt is null then 0 else d.stt end";
            return get_thuoc(tu, den, sql);
        }

        public DataSet get_sotien_dbv_angiang(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            sql = "select 1 as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.d_xuatsdll a inner join xxx.d_thucxuat b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai<>3 and a.nhom=" + i_nhom;
            sql += " group by case when d.stt is null then 0 else d.stt end ";
            sql += " union all ";
            sql += " select 1 as loai, case when d.stt is null then 0 else d.stt end as stt,-sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.d_xuatsdll a inner join xxx.d_thucxuat b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai=3 and a.nhom=" + i_nhom;
            sql += " group by case when d.stt is null then 0 else d.stt end";
            sql += " union all select 1 as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.d_xuatll a inner join xxx.d_xuatct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai='XK' and a.nhom=" + i_nhom;
            sql += " group by case when d.stt is null then 0 else d.stt end";
            sql += " union all select 2 as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.d_ngtrull a inner join xxx.d_ngtruct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " inner join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " group by case when d.stt is null then 0 else d.stt end";
            sql += " union all select 2 as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.bhytkb a inner join xxx.bhytthuoc b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " group by case when d.stt is null then 0 else d.stt end";
            return get_thuoc(tu, den, sql);
        }

        public DataSet get_sotien_bhyt_dbv_angiang_duoc(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            sql = "select 1 as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.d_xuatsdll a inner join xxx.d_xuatsdct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai<>3 and a.nhom=" + i_nhom;
            sql += " and b.madoituong=1 ";
            sql += " group by case when d.stt is null then 0 else d.stt end ";
            sql += " union all ";
            sql += " select 1 as loai, case when d.stt is null then 0 else d.stt end as stt,-sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.d_xuatsdll a inner join xxx.d_xuatsdct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai=3 and a.nhom=" + i_nhom;
            sql += " and b.madoituong=1 ";
            sql += " group by case when d.stt is null then 0 else d.stt end";
            sql += " union all select 2 as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.bhytkb a inner join xxx.bhytthuoc b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " and a.maphu=1 ";
            sql += " group by case when d.stt is null then 0 else d.stt end";
            return get_thuoc(tu, den, sql);
        }

        public DataSet get_sotien_bhyt_dbv_angiang_vp(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            sql = "select 1 as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.bhyttra) as sotien ";
            sql += " from xxx.v_ttrvll a inner join xxx.v_ttrvct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mavp=c.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and c.nhom=" + i_nhom;
            sql += " and b.madoituong=1 and b.tra=0";
            sql += " group by case when d.stt is null then 0 else d.stt end ";
            sql += " union all ";
            sql += " select 2 as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*f.giamua) as sotien ";
            sql += " from xxx.bhytkb a inner join xxx.bhytthuoc b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi f on b.sttt=f.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " and a.maphu=1 and quyenso=0 and sobienlai=0";
            sql += " group by case when d.stt is null then 0 else d.stt end";
            return get_thuoc(tu, den, sql);
        }

        public DataSet get_sotien_nhap_dbv_angiang(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            sql = "select case when h.stt is null then 1 else h.stt end as idnn, f.ten as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*b.giamua) as sotien ";
            sql += " from xxx.d_nhapll a inner join xxx.d_nhapct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " inner join " + usr + ".d_dmnx e on a.madv=e.id ";
            sql += " inner join " + usr + ".d_nhomcc f on e.nhomcc=f.id ";
            if (bNoiNgoai_Hang(i_nhom)) sql += " inner join " + usr + ".d_dmhang g on c.mahang=g.id left join " + usr + ".d_nhomhang h on g.loai=h.id";
            else sql += " inner join " + usr + ".d_dmnuoc g on c.manuoc=g.id left join " + usr + ".d_nhomnuoc h on g.loai=h.id";
            sql += " where a.ngaysp between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai='M' and d.id is not null and d.stt>0 and a.nhom=" + i_nhom;
            sql += " group by case when h.stt is null then 1 else h.stt end, f.ten, case when d.stt is null then 0 else d.stt end ";

            return get_thuoc(tu, den, sql);


        }

        public DataSet get_sotien_xuat_nhaptu_dbv_angiang(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            sql = "select case when h.stt is null then 1 else h.stt end as idnn, f.ten as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*t.giamua) as sotien ";
            sql += " from xxx.d_xuatsdll a inner join xxx.d_thucxuat b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi t on b.sttt=t.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " inner join " + usr + ".d_dmnx e on t.nhomcc=e.id ";
            sql += " inner join " + usr + ".d_nhomcc f on e.nhomcc=f.id ";
            if (bNoiNgoai_Hang(i_nhom)) sql += " inner join " + usr + ".d_dmhang g on c.mahang=g.id left join " + usr + ".d_nhomhang h on g.loai=h.id";
            else sql += " inner join " + usr + ".d_dmnuoc g on c.manuoc=g.id left join " + usr + ".d_nhomnuoc h on g.loai=h.id";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai in(1,4) and a.nhom=" + i_nhom;//loai<>3
            sql += " group by case when h.stt is null then 1 else h.stt end, f.ten, case when d.stt is null then 0 else d.stt end  ";
            //
            sql += " union all ";
            sql += "select case when h.stt is null then 1 else h.stt end as idnn, f.ten as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*t.giamua) as sotien ";
            sql += " from xxx.d_xuatsdll a inner join xxx.d_thucbucstt b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi t on b.sttt=t.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " inner join " + usr + ".d_dmnx e on t.nhomcc=e.id ";
            sql += " inner join " + usr + ".d_nhomcc f on e.nhomcc=f.id ";
            if (bNoiNgoai_Hang(i_nhom)) sql += " inner join " + usr + ".d_dmhang g on c.mahang=g.id left join " + usr + ".d_nhomhang h on g.loai=h.id";
            else sql += " inner join " + usr + ".d_dmnuoc g on c.manuoc=g.id left join " + usr + ".d_nhomnuoc h on g.loai=h.id";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai=2 and a.nhom=" + i_nhom;
            sql += " group by case when h.stt is null then 1 else h.stt end, f.ten, case when d.stt is null then 0 else d.stt end  ";
            sql += " union all ";
            //sql += " select 1 as loai, case when d.stt is null then 0 else d.stt end as stt,-sum(b.soluong*f.giamua) as sotien ";
            sql += "select case when h.stt is null then 1 else h.stt end as idnn, f.ten as loai, case when d.stt is null then 0 else d.stt end as stt,-1*sum(b.soluong*t.giamua) as sotien ";
            sql += " from xxx.d_xuatsdll a inner join xxx.d_thucxuat b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi t on b.sttt=t.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " inner join " + usr + ".d_dmnx e on t.nhomcc=e.id ";
            sql += " inner join " + usr + ".d_nhomcc f on e.nhomcc=f.id ";
            if (bNoiNgoai_Hang(i_nhom)) sql += " inner join " + usr + ".d_dmhang g on c.mahang=g.id left join " + usr + ".d_nhomhang h on g.loai=h.id";
            else sql += " inner join " + usr + ".d_dmnuoc g on c.manuoc=g.id left join " + usr + ".d_nhomnuoc h on g.loai=h.id";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai=3 and a.nhom=" + i_nhom;
            sql += " group by case when h.stt is null then 1 else h.stt end, f.ten, case when d.stt is null then 0 else d.stt end ";
            //
            sql += " union all ";
            sql += " select case when h.stt is null then 1 else h.stt end as idnn, f.ten as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*t.giamua) as sotien ";
            sql += " from xxx.d_xuatll a inner join xxx.d_xuatct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi t on b.sttt=t.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id";
            sql += " inner join " + usr + ".d_dmnx e on t.nhomcc=e.id ";
            sql += " inner join " + usr + ".d_nhomcc f on e.nhomcc=f.id ";
            if (bNoiNgoai_Hang(i_nhom)) sql += " inner join " + usr + ".d_dmhang g on c.mahang=g.id left join " + usr + ".d_nhomhang h on g.loai=h.id";
            else sql += " inner join " + usr + ".d_dmnuoc g on c.manuoc=g.id left join " + usr + ".d_nhomnuoc h on g.loai=h.id";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            //sql += " and a.loai='XK' and a.nhom=" + i_nhom;
            sql += " and a.loai in('XK','BS','VA') and a.nhom=" + i_nhom;
            sql += " group by case when h.stt is null then 1 else h.stt end, f.ten, case when d.stt is null then 0 else d.stt end ";
            //
            sql += " union all ";
            sql += " select case when h.stt is null then 1 else h.stt end as idnn, f.ten as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*t.giamua) as sotien ";
            sql += " from xxx.d_ngtrull a inner join xxx.d_ngtruct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi t on b.sttt=t.id ";
            sql += " inner join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " inner join " + usr + ".d_dmnx e on t.nhomcc=e.id ";
            sql += " inner join " + usr + ".d_nhomcc f on e.nhomcc=f.id ";
            if (bNoiNgoai_Hang(i_nhom)) sql += " inner join " + usr + ".d_dmhang g on c.mahang=g.id left join " + usr + ".d_nhomhang h on g.loai=h.id";
            else sql += " inner join " + usr + ".d_dmnuoc g on c.manuoc=g.id left join " + usr + ".d_nhomnuoc h on g.loai=h.id";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " group by case when h.stt is null then 1 else h.stt end, f.ten, case when d.stt is null then 0 else d.stt end ";
            //
            sql += " union all ";
            sql += " select case when h.stt is null then 1 else h.stt end as idnn, f.ten as loai, case when d.stt is null then 0 else d.stt end as stt,sum(b.soluong*t.giamua) as sotien ";
            sql += " from xxx.bhytkb a inner join xxx.bhytthuoc b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " inner join xxx.d_theodoi t on b.sttt=t.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " inner join " + usr + ".d_dmnx e on t.nhomcc=e.id ";
            sql += " inner join " + usr + ".d_nhomcc f on e.nhomcc=f.id ";
            if (bNoiNgoai_Hang(i_nhom)) sql += " inner join " + usr + ".d_dmhang g on c.mahang=g.id left join " + usr + ".d_nhomhang h on g.loai=h.id";
            else sql += " inner join " + usr + ".d_dmnuoc g on c.manuoc=g.id left join " + usr + ".d_nhomnuoc h on g.loai=h.id";
            sql += " where a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " group by case when h.stt is null then 1 else h.stt end, f.ten, case when d.stt is null then 0 else d.stt end ";
            return get_thuoc(tu, den, sql);
        }
        public DataSet get_sothuoc_dbv(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            DataSet dsmabd = new DataSet();
            dsmabd.ReadXml("..//..//..//xml//d_truyvan.xml");
            DataRow r1, r2;
            string table = bNoiNgoai_Hang(i_nhom) ? "," + usr + ".d_dmhang g," + usr + ".d_nhomhang h" : "," + usr + ".d_dmnuoc g," + usr + ".d_nhomnuoc h";
            string dk = bNoiNgoai_Hang(i_nhom) ? " and c.mahang=g.id and g.loai=h.id" : " and c.manuoc=g.id and g.loai=h.id";
            DataTable dt = bNoiNgoai_Hang(i_nhom) ? get_data("select * from " + usr + ".d_nhomhang where nhom=" + i_nhom).Tables[0] : get_data("select * from " + usr + ".d_nhomnuoc where nhom=" + i_nhom).Tables[0];
            sql = "select distinct h.stt,b.mabd from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f";
            sql += table;
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
            sql += dk;
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " union all select distinct h.stt,b.mabd from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
            sql += table;
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
            sql += dk;
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai='XK' and a.nhom=" + i_nhom;
            sql += " union all select distinct h.stt,b.mabd from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f";
            sql += table;
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
            sql += dk;
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " union all select distinct h.stt,b.mabd from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f";
            sql += table;
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id";
            sql += dk;
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Rows)
            {
                sql = "id=" + decimal.Parse(r["stt"].ToString()) + " and n_so=" + int.Parse(r["mabd"].ToString());
                r1 = getrowbyid(dsmabd.Tables[0], sql);
                if (r1 == null)
                {
                    r2 = dsmabd.Tables[0].NewRow();
                    r2["id"] = r["stt"].ToString();
                    r2["n_so"] = r["mabd"].ToString();
                    dsmabd.Tables[0].Rows.Add(r2);
                }
            }
            return dsmabd;
        }

        public DataSet get_sothuoc_xuat_dbv_angiang(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            DataSet dsmabd = new DataSet();
            dsmabd.ReadXml("..//..//..//xml//d_truyvan.xml");
            DataRow r1, r2;
            string table = bNoiNgoai_Hang(i_nhom) ? "," + usr + ".d_dmhang g," + usr + ".d_nhomhang h" : "," + usr + ".d_dmnuoc g," + usr + ".d_nhomnuoc h";
            string dk = bNoiNgoai_Hang(i_nhom) ? " and c.mahang=g.id and g.loai=h.id" : " and c.manuoc=g.id and g.loai=h.id";
            DataTable dt = bNoiNgoai_Hang(i_nhom) ? get_data("select * from " + usr + ".d_nhomhang where nhom=" + i_nhom).Tables[0] : get_data("select * from " + usr + ".d_nhomnuoc where nhom=" + i_nhom).Tables[0];
            sql = "select distinct h.stt,b.mabd, case when x.id is null then 0 else x.stt end as sttnhombo from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_nhombo x ";
            sql += table;
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and c.nhombo=x.id(+)";
            sql += dk;
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " union all select distinct h.stt,b.mabd, case when x.id is null then 0 else x.stt end as sttnhombo from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_nhombo x ";
            sql += table;
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and c.nhombo=x.id(+) ";
            sql += dk;
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai='XK' and a.nhom=" + i_nhom;
            sql += " union all select distinct h.stt,b.mabd, case when x.id is null then 0 else x.stt end as sttnhombo from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_nhombo x ";
            sql += table;
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and c.nhombo=x.id(+) ";
            sql += dk;
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " union all select distinct h.stt,b.mabd, case when x.id is null then 0 else x.stt end as sttnhombo from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_nhombo x ";
            sql += table;
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and c.nhombo=x.id(+) ";
            sql += dk;
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Select("stt>0"))//.Rows)
            {
                sql = "id=" + decimal.Parse(r["stt"].ToString()) + " and n_so=" + int.Parse(r["mabd"].ToString());//sttnhombo >0 and 
                r1 = getrowbyid(dsmabd.Tables[0], sql);
                if (r1 == null)
                {
                    r2 = dsmabd.Tables[0].NewRow();
                    r2["id"] = r["stt"].ToString();
                    r2["n_so"] = r["mabd"].ToString();
                    dsmabd.Tables[0].Rows.Add(r2);
                }
            }
            return dsmabd;
        }
        public DataSet get_sothuoc_dbv_angiang(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            DataSet dsmabd = new DataSet();
            dsmabd.ReadXml("..//..//..//xml//d_truyvan.xml");
            DataRow r1, r2;
            string table = bNoiNgoai_Hang(i_nhom) ? "," + usr + ".d_dmhang g," + usr + ".d_nhomhang h" : "," + usr + ".d_dmnuoc g," + usr + ".d_nhomnuoc h";
            string dk = bNoiNgoai_Hang(i_nhom) ? " and c.mahang=g.id and g.loai=h.id" : " and c.manuoc=g.id and g.loai=h.id";
            DataTable dt = bNoiNgoai_Hang(i_nhom) ? get_data("select * from " + usr + ".d_nhomhang where nhom=" + i_nhom).Tables[0] : get_data("select * from " + usr + ".d_nhomnuoc where nhom=" + i_nhom).Tables[0];

            sql = "select distinct case when h.stt is null then 0 else h.stt end as stt,b.mabd ";
            sql += " from xxx.d_nhapll a inner join xxx.d_nhapct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " inner join " + usr + ".d_dmnx e on a.madv=e.id ";
            if (bNoiNgoai_Hang(i_nhom)) sql += " inner join " + usr + ".d_dmhang g on c.mahang=g.id left join " + usr + ".d_nhomhang h on g.loai=h.id";
            else sql += " inner join " + usr + ".d_dmnuoc g on c.manuoc=g.id left join " + usr + ".d_nhomnuoc h on g.loai=h.id";
            sql += " where a.ngaysp between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai='M' and d.id is not null and d.stt>0 and a.nhom=" + i_nhom;



            foreach (DataRow r in get_thuoc(tu, den, sql).Tables[0].Select("stt>0"))//.Rows)
            {
                sql = "id=" + decimal.Parse(r["stt"].ToString()) + " and n_so=" + int.Parse(r["mabd"].ToString());
                r1 = getrowbyid(dsmabd.Tables[0], sql);
                if (r1 == null)
                {
                    r2 = dsmabd.Tables[0].NewRow();
                    r2["id"] = r["stt"].ToString();
                    r2["n_so"] = r["mabd"].ToString();
                    dsmabd.Tables[0].Rows.Add(r2);
                }
            }
            return dsmabd;
        }
        public DataSet get_soluong_dichtruyen(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            sql = "select d.stt,c.hamluong,sum(b.soluong) as soluong from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_nhombo d";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and c.nhombo=d.id";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai<>3 and a.nhom=" + i_nhom;
            sql += " and d.stt in (12,13,14) and c.hamluong is not null";
            sql += " group by d.stt,c.hamluong";
            sql += " union all select d.stt,c.hamluong,-sum(b.soluong) as soluong from xxx.d_xuatsdll a,xxx.d_thucxuat b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_nhombo d";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and c.nhombo=d.id";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai=3 and a.nhom=" + i_nhom;
            sql += " and d.stt in (12,13,14) and c.hamluong is not null";
            sql += " group by d.stt,c.hamluong";
            sql += " union all select d.stt,c.hamluong,sum(b.soluong) as soluong from xxx.d_xuatll a,xxx.d_xuatct b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_nhombo d";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and c.nhombo=d.id";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai='XK' and a.nhom=" + i_nhom;
            sql += " and d.stt in (12,13,14) and c.hamluong is not null";
            sql += " group by d.stt,c.hamluong";
            sql += " union all select d.stt,c.hamluong,sum(b.soluong) as soluong from xxx.d_ngtrull a,xxx.d_ngtruct b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_nhombo d";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and c.nhombo=d.id";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " and d.stt in (12,13,14)";
            sql += " group by d.stt,c.hamluong";
            sql += " union all select d.stt,c.hamluong,sum(b.soluong) as soluong from xxx.bhytkb a,xxx.bhytthuoc b," + usr + ".d_dmbd c,xxx.d_theodoi f," + usr + ".d_nhombo d";
            sql += " where a.id=b.id and b.mabd=c.id and b.sttt=f.id and c.nhombo=d.id";
            sql += " and a.ngay between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.nhom=" + i_nhom;
            sql += " and d.stt in (12,13,14) and c.hamluong is not null";
            sql += " group by d.stt,c.hamluong";
            return get_thuoc(tu, den, sql);
        }

        public DataSet get_soluong_dichtruyen_angiang(int i_nhom, string tu, string den)
        {
            string stime = "'" + f_ngay + "'", usr = user;
            //
            sql = "select d.stt,c.hamluong,sum(b.soluong) as soluong ";
            sql += " from xxx.d_nhapll a inner join xxx.d_nhapct b on a.id=b.id ";
            sql += " inner join " + usr + ".d_dmbd c on b.mabd=c.id ";
            sql += " left join " + usr + ".d_nhombo d on c.nhombo=d.id ";
            sql += " inner join " + usr + ".d_dmnx e on a.madv=e.id ";
            sql += " inner join " + usr + ".d_nhomcc f on e.nhomcc=f.id ";
            sql += " where a.ngaysp between to_date('" + tu + "'," + stime + ") and to_date('" + den + "'," + stime + ")";
            sql += " and a.loai='M' and d.id is not null and d.stt>0 and a.nhom=" + i_nhom;
            sql += " group by d.stt,c.hamluong";
            //            
            return get_thuoc(tu, den, sql);
        }

        public string so_chu(string s)
        {
            string ret = "0";
            int i = 0, l = s.Length;
            while (i < l)
            {
                if (Char.IsDigit(Convert.ToChar(s.Substring(i, 1)))) ret += s.Substring(i, 1);
                else break;
                i++;
            }
            return ret;
        }

        public string kiemtra_toathuoc(DataTable dtdmbd, DataTable dtct, string mabn, int nhom, string ngay, decimal id)
        {
            string ret = "", ma1 = "";
            dtct.AcceptChanges();
            DataRow r;
            foreach (DataRow r1 in dtct.Select("soluong>0", "mabd")) ma1 += r1["mabd"].ToString().Trim().PadLeft(7, '0') + ",";
            sql = "select d.tenkp,e.hoten,b.mabd,sum(b.slyeucau) as soluong from " + user + mmyy(ngay) + ".d_thuocbhytll a," + user + mmyy(ngay) + ".d_thuocbhytct b," + user + ".btdkp_bv d," + user + ".dmbs e";
            sql += " where a.id=b.id and a.makp=d.makp and a.mabs=e.ma ";
            sql += " and a.mabn='" + mabn + "' and a.nhom=" + nhom + " and to_char(a.ngay,'dd/mm/yyyy')='" + ngay.Substring(0, 10) + "'";
            sql += " and a.id<>" + id;
            sql += " group by d.tenkp,e.hoten,b.mabd";
            sql += " order by d.tenkp,e.hoten,b.mabd";
            foreach (DataRow r1 in get_data(sql).Tables[0].Rows)
            {
                if (ma1.IndexOf(r1["mabd"].ToString().Trim().PadLeft(7, '0') + ",") != -1)
                {
                    r = getrowbyid(dtdmbd, "id=" + int.Parse(r1["mabd"].ToString()));
                    if (r != null)
                        ret = ret + r1["tenkp"].ToString().Trim() + ";BÁC SỸ : " + r1["hoten"].ToString().Trim() + ";" + r["ten"].ToString().Trim() + " " + r["hamluong"].ToString().Trim() + " " + r["dang"].ToString() + "(" + r1["soluong"].ToString().Trim() + ")\n";
                }
            }
            return ret;
        }

        public decimal get_stt_tonkho(string d_mmyy, int d_makho, decimal d_idn, int d_sttn)
        {
            ds = get_data("select stt from " + user + d_mmyy + ".d_tonkhoct where makho=" + d_makho + " and idn=" + d_idn + " and sttn=" + d_sttn);
            if (ds.Tables[0].Rows.Count == 0) return 0;
            else return decimal.Parse(ds.Tables[0].Rows[0][0].ToString());
        }

        public void upd_tonkho1(int nhom, string mmyy)
        {
            if (!bMmyy(mmyy)) return;
            upd_kiemtra(mmyy, nhom);
            upd_tonkho(mmyy, nhom, 0);
            upd_xuat(nhom, mmyy);
        }

        private void upd_xuat(int nhom, string mmyy)
        {
            DataRow r1, r3;
            bFound = false; bool be = false;
            DataTable dtct, dtth, tmp;
            bool bGiaban_dot = bGiaban_theodot(nhom);
            bool bGiaban_noi_ngoai = bGiaban_noi_ngtru(nhom);
            string usr = user, xxx = usr + mmyy, f1, f2, fie, dk = "";
            dtth = get_data("select a.* from " + xxx + ".d_tonkhoth a," + usr + ".d_dmkho b where a.makho=b.id and b.hide=0 and b.nhom=" + nhom).Tables[0];
            sql = "select c.khott,c.stt as sttkho,a.stt,a.makho,a.tondau,a.slnhap,a.slxuat,b.*,d.giaban as giaban_,d.giaban2 as giaban2_,d.gia_bh ";
            sql += " from " + xxx + ".d_tonkhoct a," + xxx + ".d_theodoi b," + usr + ".d_dmkho c," + usr + ".d_dmbd d ";
            sql += " where a.stt=b.id and a.makho=c.id and a.mabd=d.id and c.nhom=" + nhom;
            if (bNhaptruocxuat(nhom)) sql += " order by c.khott desc,a.stt";
            else sql += " order by c.khott desc,substring(b.handung,3,2) ,substring(b.handung,1,2)";
            dtct = get_data(sql).Tables[0];
            decimal slton = 0, giaban = 0, sl = 0, slthuc = 0, gia_bh = 0;
            decimal id, sttt, stt, irec;
            int makho, manguon, mabd;
            foreach (DataRow r in dtct.Select("tondau+slnhap-slxuat<0", "khott desc,stt"))
            {
                slton = decimal.Parse(r["tondau"].ToString()) + decimal.Parse(r["slnhap"].ToString()) - decimal.Parse(r["slxuat"].ToString());
                makho = int.Parse(r["makho"].ToString()); manguon = int.Parse(r["manguon"].ToString()); mabd = int.Parse(r["mabd"].ToString());
                sttt = decimal.Parse(r["stt"].ToString()); bFound = true; giaban = decimal.Parse(r["giaban"].ToString());
                sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd;
                sql += " and tondau+slnhap-slxuat>=0";
                r1 = getrowbyid(dtth, sql);
                if (r1 != null)
                {
                    bFound = true;

                    #region xuat
                    //xuatll+xuatct
                    f1 = "d_xuatll"; f2 = "d_xuatct"; fie = "a.khox"; dk = "";
                    sql = " select a.loai,a.khox,a.khon,b.*,t.manguon,t.nhomcc,t.giamua,t.handung,t.losx ";
                    sql += " from " + xxx + "." + f1 + " a," + xxx + "." + f2 + " b," + xxx + ".d_theodoi t ";
                    sql += " where a.id=b.id and b.sttt=t.id and " + fie + "=" + makho;
                    sql += " and b.sttt=" + sttt + " and a.nhom=" + nhom;
                    sql += dk;
                    sql += " order by a.id,b.stt";
                    tmp = get_data(sql).Tables[0];
                    foreach (DataRow r2 in tmp.Rows)
                    {
                        id = decimal.Parse(r2["id"].ToString());
                        stt = decimal.Parse(r2["stt"].ToString());
                        sl = decimal.Parse(r2["soluong"].ToString());
                        giaban = decimal.Parse(r2["giaban"].ToString());
                        r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) - sl;
                        sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd + " and tondau+slnhap-slxuat>=" + sl;
                        r3 = getrowbyid(dtct, sql);
                        if (r3 != null)
                        {
                            upd_tonkhoct_xuatct(delete, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r2["sttt"].ToString()), manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                            sql = "update " + xxx + "." + f2 + " set sttt=" + decimal.Parse(r3["stt"].ToString());
                            sql += " where id=" + id + " and stt=" + stt;
                            sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                            execute_data(sql);
                            slton += sl;
                            r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + sl;
                            if (r2["loai"].ToString() == "VA" || r2["loai"].ToString() == "QT")
                                upd_tonkhoct_vay(insert, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r3["stt"].ToString()), manguon, int.Parse(r3["nhomcc"].ToString()), mabd, r3["handung"].ToString(), r3["losx"].ToString(), sl, giaban, decimal.Parse(r3["giamua"].ToString()));
                            else
                                upd_tonkhoct_xuatct(insert, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r3["stt"].ToString()), manguon, int.Parse(r3["nhomcc"].ToString()), mabd, r3["handung"].ToString(), r3["losx"].ToString(), sl, sl * decimal.Parse(r3["giamua"].ToString()), giaban, decimal.Parse(r3["giamua"].ToString()));
                        }
                        else
                        {
                            upd_tonkhoct_xuatct(delete, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r2["sttt"].ToString()), manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                            irec = get_stt(get_data("select * from " + xxx + "." + f2 + " where id=" + id + " order by stt").Tables[0]);
                            sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd + " and tondau+slnhap-slxuat>0";
                            be = true;
                            foreach (DataRow r5 in dtct.Select(sql))
                            {
                                giaban = decimal.Parse(r5["giaban"].ToString());
                                gia_bh = decimal.Parse(r5["gia_bh"].ToString());
                                slthuc = Math.Min(sl, decimal.Parse(r5["tondau"].ToString()) + decimal.Parse(r5["slnhap"].ToString()) - decimal.Parse(r5["slxuat"].ToString()));
                                if (be)
                                {
                                    sql = "update " + xxx + "." + f2 + " set soluong=" + slthuc + ",sttt=" + decimal.Parse(r5["stt"].ToString());
                                    sql += " where id=" + id + " and stt=" + stt;
                                    sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                                    execute_data(sql);
                                }
                                else
                                    upd_xuatct(mmyy, id, irec++, decimal.Parse(r5["stt"].ToString()), mabd, slthuc, r2["mabs"].ToString(), r2["hotenbn"].ToString(), giaban);
                                if (r2["loai"].ToString() == "VA" || r2["loai"].ToString() == "QT")
                                    upd_tonkhoct_vay(insert, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r5["stt"].ToString()), manguon, int.Parse(r5["nhomcc"].ToString()), mabd, r5["handung"].ToString(), r5["losx"].ToString(), slthuc, giaban, decimal.Parse(r5["giamua"].ToString()));
                                else
                                    upd_tonkhoct_xuatct(insert, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r5["stt"].ToString()), manguon, int.Parse(r5["nhomcc"].ToString()), mabd, r5["handung"].ToString(), r5["losx"].ToString(), slthuc, slthuc * decimal.Parse(r5["giamua"].ToString()), giaban, decimal.Parse(r5["giamua"].ToString()));
                                slton += slthuc;
                                sl -= slthuc;
                                r5["slxuat"] = decimal.Parse(r5["slxuat"].ToString()) + slthuc;
                                r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + slthuc;
                                if (sl == 0) break;
                                be = false;
                            }
                            if (sl > 0)
                            {
                                giaban = decimal.Parse(r2["giaban"].ToString());
                                upd_xuatct(mmyy, id, irec++, decimal.Parse(r2["sttt"].ToString()), mabd, sl, r2["mabs"].ToString(), r2["hotenbn"].ToString(), giaban);
                                if (r2["loai"].ToString() == "VA" || r2["loai"].ToString() == "QT")
                                    upd_tonkhoct_vay(insert, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r2["sttt"].ToString()), manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, giaban, decimal.Parse(r2["giamua"].ToString()));
                                else
                                    upd_tonkhoct_xuatct(insert, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r2["sttt"].ToString()), manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), giaban, decimal.Parse(r2["giamua"].ToString()));
                                slton += sl;
                                r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + sl;
                            }
                        }
                    }
                    #endregion
                    #region ngtru
                    if (slton < 0)
                    {
                        f1 = "d_ngtrull"; f2 = "d_ngtruct"; fie = "b.makho"; dk = "";
                        sql = " select b.*,t.manguon,t.nhomcc,t.giamua,t.handung,t.losx,c.giaban as giaban_,c.giaban2 as giaban2_ ";
                        sql += " from " + xxx + "." + f1 + " a," + xxx + "." + f2 + " b," + xxx + ".d_theodoi t," + usr + ".d_dmbd c";
                        sql += " where a.id=b.id and b.sttt=t.id and b.mabd=c.id and " + fie + "=" + makho;
                        sql += " and b.sttt=" + sttt + " and a.nhom=" + nhom;
                        sql += dk;
                        sql += " order by a.id,b.stt";
                        tmp = get_data(sql).Tables[0];
                        foreach (DataRow r2 in tmp.Rows)
                        {
                            id = decimal.Parse(r2["id"].ToString());
                            stt = decimal.Parse(r2["stt"].ToString());
                            sl = decimal.Parse(r2["soluong"].ToString());
                            r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) - sl;
                            sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd + " and tondau+slnhap-slxuat>=" + sl;
                            r3 = getrowbyid(dtct, sql);
                            if (r3 != null)
                            {
                                upd_tonkhoct_xuat(delete, mmyy, decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                                sql = "update " + xxx + "." + f2 + " set sttt=" + decimal.Parse(r3["stt"].ToString());
                                sql += " where id=" + id + " and stt=" + stt;
                                sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                                execute_data(sql);
                                slton += sl;
                                r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + sl;
                                upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(r3["stt"].ToString()), makho, manguon, int.Parse(r3["nhomcc"].ToString()), mabd, r3["handung"].ToString(), r3["losx"].ToString(), sl, sl * decimal.Parse(r3["giamua"].ToString()), decimal.Parse(r3["giaban"].ToString()), decimal.Parse(r3["giamua"].ToString()));
                            }
                            else
                            {
                                upd_tonkhoct_xuat(delete, mmyy, decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                                irec = get_stt(get_data("select * from " + xxx + "." + f2 + " where id=" + id + " order by stt").Tables[0]);
                                sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd + " and tondau+slnhap-slxuat>0";
                                be = true;
                                foreach (DataRow r5 in dtct.Select(sql))
                                {
                                    giaban = (bGiaban_noi_ngoai) ? decimal.Parse(r5["giaban2_"].ToString()) : (bGiaban_dot) ? decimal.Parse(r5["giaban"].ToString()) : decimal.Parse(r5["giaban_"].ToString());
                                    slthuc = Math.Min(sl, decimal.Parse(r5["tondau"].ToString()) + decimal.Parse(r5["slnhap"].ToString()) - decimal.Parse(r5["slxuat"].ToString()));
                                    if (be)
                                    {
                                        sql = "update " + xxx + "." + f2 + " set soluong=" + slthuc + ",sttt=" + decimal.Parse(r5["stt"].ToString());
                                        sql += " where id=" + id + " and stt=" + stt;
                                        sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                                        execute_data(sql);
                                    }
                                    else
                                        upd_ngtruct(mmyy, id, irec++, decimal.Parse(r5["stt"].ToString()), makho, mabd, slthuc, giaban, "");
                                    upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(r5["stt"].ToString()), makho, manguon, int.Parse(r5["nhomcc"].ToString()), mabd, r5["handung"].ToString(), r5["losx"].ToString(), slthuc, slthuc * decimal.Parse(r5["giamua"].ToString()), decimal.Parse(r5["giaban"].ToString()), decimal.Parse(r5["giamua"].ToString()));
                                    slton += slthuc;
                                    sl -= slthuc;
                                    r5["slxuat"] = decimal.Parse(r5["slxuat"].ToString()) + slthuc;
                                    r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + slthuc;
                                    if (sl == 0) break;
                                    be = false;
                                }
                                if (sl > 0)
                                {
                                    giaban = (bGiaban_noi_ngoai) ? decimal.Parse(r2["giaban2_"].ToString()) : (bGiaban_dot) ? decimal.Parse(r2["giaban"].ToString()) : decimal.Parse(r2["giaban_"].ToString());
                                    upd_ngtruct(mmyy, id, irec++, decimal.Parse(r2["sttt"].ToString()), makho, mabd, sl, giaban, "");
                                    upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                                    slton += sl;
                                    r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + sl;
                                }
                            }
                        }
                    }
                    #endregion
                    #region bhyt
                    if (slton < 0)
                    {
                        f1 = "bhytkb"; f2 = "bhytthuoc"; fie = "b.makho"; dk = "";
                        sql = " select b.*,t.manguon,t.nhomcc,t.giamua,t.handung,t.losx,c.giaban as giaban_,b.gia_bh ";
                        sql += " from " + xxx + "." + f1 + " a," + xxx + "." + f2 + " b," + xxx + ".d_theodoi t," + usr + ".d_dmbd c";
                        sql += " where a.id=b.id and b.sttt=t.id and b.mabd=c.id and " + fie + "=" + makho;
                        sql += " and b.sttt=" + sttt + " and a.nhom=" + nhom;
                        sql += dk;
                        sql += " order by a.id,b.stt";
                        tmp = get_data(sql).Tables[0];
                        foreach (DataRow r2 in tmp.Rows)
                        {
                            id = decimal.Parse(r2["id"].ToString());
                            stt = decimal.Parse(r2["stt"].ToString());
                            sl = decimal.Parse(r2["soluong"].ToString());
                            r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) - sl;
                            sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd + " and tondau+slnhap-slxuat>=" + sl;
                            r3 = getrowbyid(dtct, sql);
                            if (r3 != null)
                            {
                                upd_tonkhoct_xuat(delete, mmyy, decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                                sql = "update " + xxx + "." + f2 + " set sttt=" + decimal.Parse(r3["stt"].ToString());
                                sql += " where id=" + id + " and stt=" + stt;
                                sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                                execute_data(sql);
                                slton += sl;
                                r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + sl;
                                upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(r3["stt"].ToString()), makho, manguon, int.Parse(r3["nhomcc"].ToString()), mabd, r3["handung"].ToString(), r3["losx"].ToString(), sl, sl * decimal.Parse(r3["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r3["giamua"].ToString()));
                            }
                            else
                            {
                                upd_tonkhoct_xuat(delete, mmyy, decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                                irec = get_stt(get_data("select * from " + xxx + "." + f2 + " where id=" + id + " order by stt").Tables[0]);
                                sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd + " and tondau+slnhap-slxuat>0";
                                be = true;
                                foreach (DataRow r5 in dtct.Select(sql))
                                {
                                    giaban = decimal.Parse(r5["giaban"].ToString());
                                    slthuc = Math.Min(sl, decimal.Parse(r5["tondau"].ToString()) + decimal.Parse(r5["slnhap"].ToString()) - decimal.Parse(r5["slxuat"].ToString()));
                                    if (be)
                                    {
                                        sql = "update " + xxx + "." + f2 + " set soluong=" + slthuc + ",sttt=" + decimal.Parse(r5["stt"].ToString());
                                        sql += " where id=" + id + " and stt=" + stt;
                                        sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                                        execute_data(sql);
                                    }
                                    else
                                        upd_bhytthuoc(mmyy, id, irec++, decimal.Parse(r5["stt"].ToString()), makho, mabd, slthuc, r2["cachdung"].ToString(), giaban, decimal.Parse(r2["gia_bh"].ToString()));
                                    upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(r5["stt"].ToString()), makho, manguon, int.Parse(r5["nhomcc"].ToString()), mabd, r5["handung"].ToString(), r5["losx"].ToString(), slthuc, slthuc * decimal.Parse(r5["giamua"].ToString()), decimal.Parse(r2["giaban_"].ToString()), decimal.Parse(r5["giamua"].ToString()));
                                    slton += slthuc;
                                    sl -= slthuc;
                                    r5["slxuat"] = decimal.Parse(r5["slxuat"].ToString()) + slthuc;
                                    r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + slthuc;
                                    if (sl == 0) break;
                                    be = false;
                                }
                                if (sl > 0)
                                {
                                    giaban = decimal.Parse(r2["giaban"].ToString());
                                    upd_bhytthuoc(mmyy, id, irec++, decimal.Parse(r2["sttt"].ToString()), makho, mabd, sl, r2["cachdung"].ToString(), giaban, decimal.Parse(r2["gia_bh"].ToString()));
                                    upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban_"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                                    slton += sl;
                                    r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + sl;
                                }
                            }
                        }
                    }
                    #endregion
                    #region thucxuat
                    if (slton < 0)
                    {
                        f1 = "d_xuatsdll"; f2 = "d_thucxuat"; fie = "b.makho"; dk = " and a.loai in (1,4)";
                        sql = " select a.makp,a.loai,a.thuoc,b.*,t.manguon,t.nhomcc,t.giamua,t.handung,t.losx,c.giaban as giaban_ ";
                        sql += " from " + xxx + "." + f1 + " a," + xxx + "." + f2 + " b," + xxx + ".d_theodoi t," + usr + ".d_dmbd c";
                        sql += " where a.id=b.id and b.sttt=t.id and b.mabd=c.id and " + fie + "=" + makho;
                        sql += " and b.sttt=" + sttt + " and a.nhom=" + nhom;
                        sql += dk;
                        sql += " order by a.id,b.stt";
                        tmp = get_data(sql).Tables[0];
                        foreach (DataRow r2 in tmp.Rows)
                        {
                            id = decimal.Parse(r2["id"].ToString());
                            stt = decimal.Parse(r2["stt"].ToString());
                            sl = decimal.Parse(r2["soluong"].ToString());
                            r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) - sl;
                            sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd + " and tondau+slnhap-slxuat>=" + sl;
                            r3 = getrowbyid(dtct, sql);
                            if (r3 != null)
                            {
                                upd_tonkhoct_thucxuat(delete, mmyy, int.Parse(r2["makp"].ToString()), int.Parse(r2["loai"].ToString()), int.Parse(r2["thuoc"].ToString()), decimal.Parse(r2["sttt"].ToString()), makho, manguon, mabd, sl);
                                sql = "update " + xxx + "." + f2 + " set sttt=" + decimal.Parse(r3["stt"].ToString());
                                sql += " where id=" + id + " and stt=" + stt + " and makho=" + makho;
                                sql += " and madoituong=" + int.Parse(r2["madoituong"].ToString());
                                sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                                execute_data(sql);
                                slton += sl;
                                r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + sl;
                                upd_tonkhoct_thucxuat(insert, mmyy, int.Parse(r2["makp"].ToString()), int.Parse(r2["loai"].ToString()), int.Parse(r2["thuoc"].ToString()), decimal.Parse(r3["stt"].ToString()), makho, manguon, mabd, sl);
                            }
                            else
                            {
                                upd_tonkhoct_thucxuat(delete, mmyy, int.Parse(r2["makp"].ToString()), int.Parse(r2["loai"].ToString()), int.Parse(r2["thuoc"].ToString()), decimal.Parse(r2["sttt"].ToString()), makho, manguon, mabd, sl);
                                irec = get_stt(get_data("select * from " + xxx + "." + f2 + " where id=" + id + " order by stt").Tables[0]);
                                sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd + " and tondau+slnhap-slxuat>0";
                                be = true;
                                foreach (DataRow r5 in dtct.Select(sql))
                                {
                                    giaban = decimal.Parse(r5["giaban"].ToString());
                                    gia_bh = decimal.Parse(r5["gia_bh"].ToString());
                                    slthuc = Math.Min(sl, decimal.Parse(r5["tondau"].ToString()) + decimal.Parse(r5["slnhap"].ToString()) - decimal.Parse(r5["slxuat"].ToString()));
                                    if (be)
                                    {
                                        sql = "update " + xxx + "." + f2 + " set soluong=" + slthuc + ",sttt=" + decimal.Parse(r5["stt"].ToString());
                                        sql += " where id=" + id + " and stt=" + stt + " and makho=" + makho;
                                        sql += " and madoituong=" + int.Parse(r2["madoituong"].ToString());
                                        sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                                        execute_data(sql);
                                    }
                                    else
                                        upd_thucxuat_stt(mmyy, id, decimal.Parse(r5["stt"].ToString()), int.Parse(r2["madoituong"].ToString()), makho, mabd, slthuc, irec++, giaban, gia_bh);
                                    upd_tonkhoct_thucxuat(insert, mmyy, int.Parse(r2["makp"].ToString()), int.Parse(r2["loai"].ToString()), int.Parse(r2["thuoc"].ToString()), decimal.Parse(r5["stt"].ToString()), makho, manguon, mabd, slthuc);
                                    slton += slthuc;
                                    sl -= slthuc;
                                    r5["slxuat"] = decimal.Parse(r5["slxuat"].ToString()) + slthuc;
                                    r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + slthuc;
                                    if (sl == 0) break;
                                    be = false;
                                }
                                if (sl > 0)
                                {
                                    giaban = decimal.Parse(r2["giaban"].ToString());
                                    upd_thucxuat_stt(mmyy, id, decimal.Parse(r2["sttt"].ToString()), int.Parse(r2["madoituong"].ToString()), makho, mabd, sl, irec++, giaban, gia_bh);
                                    upd_tonkhoct_thucxuat(insert, mmyy, int.Parse(r2["makp"].ToString()), int.Parse(r2["loai"].ToString()), int.Parse(r2["thuoc"].ToString()), decimal.Parse(r2["sttt"].ToString()), makho, manguon, mabd, sl);
                                    slton += sl;
                                    r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + sl;
                                }
                            }
                        }
                    }
                    #endregion
                    #region thucbucstt
                    if (slton < 0)
                    {
                        f1 = "d_xuatsdll"; f2 = "d_thucbucstt"; fie = "b.makho"; dk = " and a.loai=2";
                        sql = " select a.makp,a.loai,a.thuoc,b.*,t.manguon,t.nhomcc,t.giamua,t.handung,t.losx,c.giaban as giaban_ ";
                        sql += " from " + xxx + "." + f1 + " a," + xxx + "." + f2 + " b," + xxx + ".d_theodoi t," + usr + ".d_dmbd c";
                        sql += " where a.id=b.id and b.sttt=t.id and b.mabd=c.id and " + fie + "=" + makho;
                        sql += " and b.sttt=" + sttt + " and a.nhom=" + nhom;
                        sql += dk;
                        sql += " order by a.id,b.stt";
                        tmp = get_data(sql).Tables[0];
                        foreach (DataRow r2 in tmp.Rows)
                        {
                            id = decimal.Parse(r2["id"].ToString());
                            stt = decimal.Parse(r2["stt"].ToString());
                            sl = decimal.Parse(r2["soluong"].ToString());
                            r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) - sl;
                            sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd + " and tondau+slnhap-slxuat>=" + sl;
                            r3 = getrowbyid(dtct, sql);
                            if (r3 != null)
                            {
                                upd_tonkhoct_thucbucstt(delete, mmyy, int.Parse(r2["makp"].ToString()), decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                                sql = "update " + xxx + "." + f2 + " set sttt=" + decimal.Parse(r3["stt"].ToString());
                                sql += " where id=" + id + " and stt=" + stt + " and makho=" + makho;
                                sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                                execute_data(sql);
                                slton += sl;
                                r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + sl;
                                upd_tonkhoct_thucbucstt(insert, mmyy, int.Parse(r2["makp"].ToString()), decimal.Parse(r3["stt"].ToString()), makho, manguon, int.Parse(r3["nhomcc"].ToString()), mabd, r3["handung"].ToString(), r3["losx"].ToString(), sl, sl * decimal.Parse(r3["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r3["giamua"].ToString()));
                            }
                            else
                            {
                                upd_tonkhoct_thucbucstt(delete, mmyy, int.Parse(r2["makp"].ToString()), decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                                irec = get_stt(get_data("select * from " + xxx + "." + f2 + " where id=" + id + " order by stt").Tables[0]);
                                sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd + " and tondau+slnhap-slxuat>0";
                                be = true;
                                foreach (DataRow r5 in dtct.Select(sql))
                                {
                                    giaban = decimal.Parse(r5["giaban"].ToString());
                                    slthuc = Math.Min(sl, decimal.Parse(r5["tondau"].ToString()) + decimal.Parse(r5["slnhap"].ToString()) - decimal.Parse(r5["slxuat"].ToString()));
                                    if (be)
                                    {
                                        sql = "update " + xxx + "." + f2 + " set soluong=" + slthuc + ",sttt=" + decimal.Parse(r5["stt"].ToString());
                                        sql += " where id=" + id + " and stt=" + stt + " and makho=" + makho;
                                        sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                                        execute_data(sql);
                                    }
                                    else
                                        upd_thucbucstt_stt(mmyy, id, decimal.Parse(r5["stt"].ToString()), makho, mabd, slthuc, irec++, giaban);
                                    upd_tonkhoct_thucbucstt(insert, mmyy, int.Parse(r2["makp"].ToString()), decimal.Parse(r5["stt"].ToString()), makho, manguon, int.Parse(r5["nhomcc"].ToString()), mabd, r5["handung"].ToString(), r5["losx"].ToString(), slthuc, slthuc * decimal.Parse(r5["giamua"].ToString()), decimal.Parse(r5["giaban"].ToString()), decimal.Parse(r5["giamua"].ToString()));
                                    slton += slthuc;
                                    sl -= slthuc;
                                    r5["slxuat"] = decimal.Parse(r5["slxuat"].ToString()) + slthuc;
                                    r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + slthuc;
                                    if (sl == 0) break;
                                    be = false;
                                }
                                if (sl > 0)
                                {
                                    giaban = decimal.Parse(r2["giaban"].ToString());
                                    upd_thucbucstt_stt(mmyy, id, decimal.Parse(r2["sttt"].ToString()), makho, mabd, sl, irec++, giaban);
                                    upd_tonkhoct_thucbucstt(insert, mmyy, int.Parse(r2["makp"].ToString()), decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                                    slton += sl;
                                    r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) + sl;
                                }
                            }
                        }
                    }
                    #endregion
                }
            }
        }

        public void upd_tonkho(int nhom, string mmyy)
        {
            if (!bMmyy(mmyy)) return;
            upd_kiemtra(mmyy, nhom);
            upd_tonkho(mmyy, nhom, 0);
            if (get_data("select a.* from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmkho b where a.makho=b.id and b.nhom=" + nhom + " and a.tondau+a.slnhap-a.slxuat<0").Tables[0].Rows.Count > 0)
                upd_xuat(nhom, mmyy, "d_xuatll", "d_xuatct", "a.khox", "", 1);
            if (get_data("select a.* from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmkho b where a.makho=b.id and b.nhom=" + nhom + " and a.tondau+a.slnhap-a.slxuat<0").Tables[0].Rows.Count > 0)
                upd_xuat(nhom, mmyy, "d_ngtrull", "d_ngtruct", "b.makho", "", 2);
            if (get_data("select a.* from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmkho b where a.makho=b.id and b.nhom=" + nhom + " and a.tondau+a.slnhap-a.slxuat<0").Tables[0].Rows.Count > 0)
                upd_xuat(nhom, mmyy, "bhytkb", "bhytthuoc", "b.makho", "", 3);
            if (get_data("select a.* from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmkho b where a.makho=b.id and b.nhom=" + nhom + " and a.tondau+a.slnhap-a.slxuat<0").Tables[0].Rows.Count > 0)
                upd_xuat(nhom, mmyy, "d_xuatsdll", "d_thucxuat", "b.makho", " and a.loai in (1,4)", 4);
            if (get_data("select a.* from " + user + mmyy + ".d_tonkhoct a," + user + ".d_dmkho b where a.makho=b.id and b.nhom=" + nhom + " and a.tondau+a.slnhap-a.slxuat<0").Tables[0].Rows.Count > 0)
                upd_xuat(nhom, mmyy, "d_xuatsdll", "d_thucbucstt", "b.makho", " and a.loai in (2)", 5);
            upd_tutruc(nhom, mmyy);
            /*
			if (bFound)
			{
				upd_kiemtra(mmyy,nhom);
				upd_tonkho(mmyy,nhom,0);
			}*/
        }

        private void upd_tutruc(int nhom, string mmyy)
        {
            if (!bMmyy(mmyy)) return;
            if (get_data("select a.* from " + user + mmyy + ".d_tutrucct a," + user + ".d_dmkho b where a.makho=b.id and b.hide=0 and b.nhom=" + nhom + " and a.tondau+a.slnhap-a.slxuat<0").Tables[0].Rows.Count == 0) return;
            upd_xuat(nhom, mmyy, "d_xuatsdll", "d_thucxuat", "b.makho", " and a.loai in (2)", 6);
        }

        private void upd_xuat(int nhom, string mmyy, string f1, string f2, string fie, string dk, int loai)
        {
            DataRow r1, r3, r4;
            bFound = false;
            DataTable dtct, dtth;
            string usr = user, xxx = usr + mmyy;
            //upd_kiemtra(mmyy,nhom);
            //upd_tonkho(mmyy,nhom,0);
            if (loai == 6)
            {
                dtth = get_data("select a.* from " + xxx + ".d_tutructh a," + usr + ".d_dmkho b where a.makho=b.id and b.nhom=" + nhom).Tables[0];
                sql = "select c.khott,c.stt as sttkho,a.stt,a.makp,a.makho,a.tondau,a.slnhap,a.slxuat,b.*,d.giaban as giaban_,d.giaban2 as giaban2_ ";
                sql += " from " + xxx + ".d_tutrucct a," + xxx + ".d_theodoi b," + usr + ".d_dmkho c," + usr + ".d_dmbd d ";
                sql += " where a.stt=b.id and a.makho=c.id and a.mabd=d.id and c.nhom=" + nhom;
                if (bNhaptruocxuat(nhom)) sql += " order by c.khott desc,a.stt";
                else sql += " order by c.khott desc,substring(b.handung,3,2) ,substring(b.handung,1,2)";
            }
            else
            {
                dtth = get_data("select a.* from " + xxx + ".d_tonkhoth a," + usr + ".d_dmkho b where a.makho=b.id and b.nhom=" + nhom).Tables[0];
                sql = "select c.khott,c.stt as sttkho,a.stt,a.makho,a.tondau,a.slnhap,a.slxuat,b.*,d.giaban as giaban_,d.giaban2 as giaban2_ ";
                sql += " from " + xxx + ".d_tonkhoct a," + xxx + ".d_theodoi b," + usr + ".d_dmkho c," + usr + ".d_dmbd d ";
                sql += " where a.stt=b.id and a.makho=c.id and a.mabd=d.id and c.nhom=" + nhom;
                if (bNhaptruocxuat(nhom)) sql += " order by c.khott desc,a.stt";
                else sql += " order by c.khott desc,substring(b.handung,3,2) ,substring(b.handung,1,2)";
            }
            dtct = get_data(sql).Tables[0];
            int makho, manguon, mabd; decimal sl;
            foreach (DataRow r in dtct.Select("tondau+slnhap-slxuat<0", "khott desc,stt"))
            {
                makho = int.Parse(r["makho"].ToString());
                manguon = int.Parse(r["manguon"].ToString());
                mabd = int.Parse(r["mabd"].ToString());
                bFound = true;
                sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd;
                sql += " and tondau+slnhap-slxuat>=0";
                if (loai == 6) sql += " and makp=" + int.Parse(r["makp"].ToString());
                r1 = getrowbyid(dtth, sql);
                if (r1 != null)
                {
                    sql = "select b.*";
                    if (loai == 1) sql += ",a.loai,a.khox,a.khon";
                    else if (loai == 4 || loai == 5 || loai == 6) sql += ",a.makp,a.loai,a.thuoc";
                    sql += " ,t.manguon,t.nhomcc,t.giamua,t.handung,t.losx ";
                    sql += " from " + xxx + "." + f1 + " a, " + xxx + "." + f2 + " b, " + xxx + ".d_theodoi t ";
                    sql += " where a.id=b.id and b.sttt=t.id and " + fie + "=" + makho;
                    sql += " and b.sttt=" + decimal.Parse(r["stt"].ToString());
                    //sql += " and b.mabd=" + mabd;
                    sql += " and a.nhom=" + nhom;
                    sql += dk;
                    if (loai == 6) sql += " and a.makp=" + int.Parse(r["makp"].ToString());
                    sql += " order by b.soluong";
                    foreach (DataRow r2 in get_data(sql).Tables[0].Rows)
                    {
                        sl = decimal.Parse(r2["soluong"].ToString());
                        sql = "makho=" + makho + " and manguon=" + manguon + " and mabd=" + mabd;
                        sql += " and tondau+slnhap-slxuat>=" + sl;
                        if (loai == 6) sql += " and makp=" + int.Parse(r2["makp"].ToString());
                        r3 = getrowbyid(dtct, sql);
                        if (r3 != null)
                        {
                            if (loai == 1) upd_tonkhoct_xuatct(delete, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r2["sttt"].ToString()), manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                            else if (loai == 2) upd_tonkhoct_xuat(delete, mmyy, decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                            else if (loai == 3) upd_tonkhoct_xuat(delete, mmyy, decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                            else if (loai == 4 || loai == 6) upd_tonkhoct_thucxuat(delete, mmyy, int.Parse(r2["makp"].ToString()), int.Parse(r2["loai"].ToString()), int.Parse(r2["thuoc"].ToString()), decimal.Parse(r2["sttt"].ToString()), makho, manguon, mabd, sl);
                            else if (loai == 5) upd_tonkhoct_thucbucstt(delete, mmyy, int.Parse(r2["makp"].ToString()), decimal.Parse(r2["sttt"].ToString()), makho, manguon, int.Parse(r2["nhomcc"].ToString()), mabd, r2["handung"].ToString(), r2["losx"].ToString(), sl, sl * decimal.Parse(r2["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r2["giamua"].ToString()));
                            //binh180309
                            int istt = get_maxstt(user + mmyy + "." + f2, r2["id"].ToString());
                            //end binh180309
                            sql = "update " + user + mmyy + "." + f2 + " set sttt=" + decimal.Parse(r3["stt"].ToString());
                            sql += ", stt=" + istt.ToString();
                            sql += " where id=" + decimal.Parse(r2["id"].ToString()) + " and stt=" + int.Parse(r2["stt"].ToString());
                            sql += " and sttt=" + decimal.Parse(r2["sttt"].ToString());
                            execute_data(sql);
                            if (decimal.Parse(r["tondau"].ToString()) + decimal.Parse(r["slnhap"].ToString()) - decimal.Parse(r["slxuat"].ToString()) >= 0) break;
                            if (loai == 1)
                            {
                                if (r2["loai"].ToString() == "VA" || r2["loai"].ToString() == "QT")
                                    upd_tonkhoct_vay(insert, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r3["stt"].ToString()), manguon, int.Parse(r3["nhomcc"].ToString()), mabd, r3["handung"].ToString(), r3["losx"].ToString(), sl, decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r3["giamua"].ToString()));
                                else
                                    upd_tonkhoct_xuatct(insert, mmyy, r2["loai"].ToString(), makho, int.Parse(r2["khon"].ToString()), decimal.Parse(r3["stt"].ToString()), manguon, int.Parse(r3["nhomcc"].ToString()), mabd, r3["handung"].ToString(), r3["losx"].ToString(), sl, sl * decimal.Parse(r3["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r3["giamua"].ToString()));
                            }
                            else if (loai == 2) upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(r3["stt"].ToString()), makho, manguon, int.Parse(r3["nhomcc"].ToString()), mabd, r3["handung"].ToString(), r3["losx"].ToString(), sl, sl * decimal.Parse(r3["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r3["giamua"].ToString()));
                            else if (loai == 3) upd_tonkhoct_xuat(insert, mmyy, decimal.Parse(r3["stt"].ToString()), makho, manguon, int.Parse(r3["nhomcc"].ToString()), mabd, r3["handung"].ToString(), r3["losx"].ToString(), sl, sl * decimal.Parse(r3["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r3["giamua"].ToString()));
                            else if (loai == 4 || loai == 6) upd_tonkhoct_thucxuat(insert, mmyy, int.Parse(r2["makp"].ToString()), int.Parse(r2["loai"].ToString()), int.Parse(r2["thuoc"].ToString()), decimal.Parse(r3["stt"].ToString()), makho, manguon, mabd, sl);
                            else if (loai == 5) upd_tonkhoct_thucbucstt(insert, mmyy, int.Parse(r2["makp"].ToString()), decimal.Parse(r3["stt"].ToString()), makho, manguon, int.Parse(r3["nhomcc"].ToString()), mabd, r3["handung"].ToString(), r3["losx"].ToString(), sl, sl * decimal.Parse(r3["giamua"].ToString()), decimal.Parse(r2["giaban"].ToString()), decimal.Parse(r3["giamua"].ToString()));
                            sql = "makho=" + int.Parse(r["makho"].ToString()) + " and stt=" + decimal.Parse(r3["stt"].ToString());
                            if (loai == 6) sql += " and makp=" + int.Parse(r["makp"].ToString());
                            r4 = getrowbyid(dtct, sql);
                            if (r4 != null) r4["slxuat"] = decimal.Parse(r4["slxuat"].ToString()) + decimal.Parse(r2["soluong"].ToString());
                            r["slxuat"] = decimal.Parse(r["slxuat"].ToString()) - decimal.Parse(r2["soluong"].ToString());
                            dtct.AcceptChanges();
                        }
                    }
                }
            }
        }

        public DataSet get_data_nam_dec(string nam, string str)
        {
            if (ds != null)
            {
                ds.Dispose();
                ds = null;
            }
            ds = new DataSet();
            int i = nam.Trim().Length;
            bool bFound = false;
            string mmyy = "";
            while (i > 0 && !bFound)
            {
                mmyy = nam.Substring(i - 5, 4);
                if (bMmyy(mmyy))
                {
                    sql = str.Replace("xxx", user + mmyy);
                    ds = get_data(sql);
                    bFound = ds.Tables[0].Rows.Count > 0;
                }
                i -= 5;
            }
            return ds;
        }

        public DataSet get_data_nam(string nam, string str)
        {
            DataSet tmp = new DataSet();
            int i = 0;
            bool be = true;
            string mmyy = "";
            while (i < nam.Trim().Length)
            {
                mmyy = nam.Substring(i, 4);
                if (bMmyy(mmyy))
                {
                    sql = str.Replace("xxx", user + mmyy);
                    if (be)
                    {
                        tmp = get_data(sql);
                        if (tmp != null && tmp.Tables.Count > 0) be = false;
                    }
                    else tmp.Merge(get_data(sql));
                }
                i += 5;
            }
            return tmp;
        }

        public string for_ngay(string ngay, string time)
        {
            return "to_date(to_char(" + ngay + ", " + time + "), " + time + ")";
        }

        public bool b1kho(string makho)
        {
            if (makho == "") return false;
            else
            {
                int i = 0;
                for (int j = 0; j < makho.Length; j++)
                    if (makho.Substring(j, 1) == ",") i++;
                return i < 2;
            }
        }

        public int get_dmcomputer()
        {
            sql = "update " + user + ".dmcomputer set computer=:m_computer where computer=:m_computer";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            con.Open();
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("m_computer", NpgsqlDbType.Varchar, 20).Value = sComputer;
            int irec = cmd.ExecuteNonQuery();
            cmd.Dispose();
            con.Close(); con.Dispose();
            if (irec == 0)
            {
                sql = "insert into " + user + ".dmcomputer(id,computer) values (" + get_id_dmcomputer + ",'" + sComputer + "')";
                execute_data(sql);
            }
            return int.Parse(get_data("select id from " + user + ".dmcomputer where computer='" + sComputer + "'").Tables[0].Rows[0][0].ToString());
        }

        public bool upd_eve_tables(int m_tableid, int m_userid, string m_command)
        {
            string ngay = Ngay_hethong_gio.Substring(0, 10);
            int icomputerid = get_dmcomputer(), m_ins = 0, m_upd = 0, m_del = 0;
            switch (m_command)
            {
                case "upd": m_upd = 1; break;
                case "del": m_del = 1; break;
                default: m_ins = 1; break;
            }
            schema = user + ".upd_eve_tables";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("m_tableid", NpgsqlDbType.Numeric).Value = m_tableid;
                cmd.Parameters.Add("m_ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                cmd.Parameters.Add("m_userid", NpgsqlDbType.Numeric).Value = m_userid;
                cmd.Parameters.Add("m_computerid", NpgsqlDbType.Numeric).Value = icomputerid;
                cmd.Parameters.Add("m_ins", NpgsqlDbType.Numeric).Value = m_ins;
                cmd.Parameters.Add("m_upd", NpgsqlDbType.Numeric).Value = m_upd;
                cmd.Parameters.Add("m_del", NpgsqlDbType.Numeric).Value = m_del;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "eve_tables");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_eve_upd_del(int m_tableid, int m_userid, string m_command, string m_noidung)
        {
            int icomputerid = get_dmcomputer();
            schema = user + ".upd_eve_upd_del";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("m_tableid", NpgsqlDbType.Numeric).Value = m_tableid;
                cmd.Parameters.Add("m_userid", NpgsqlDbType.Numeric).Value = m_userid;
                cmd.Parameters.Add("m_computerid", NpgsqlDbType.Numeric).Value = icomputerid;
                cmd.Parameters.Add("m_command", NpgsqlDbType.Varchar, 3).Value = m_command;
                cmd.Parameters.Add("m_noidung", NpgsqlDbType.Text).Value = m_noidung;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "eve_upd_del");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_eve_tables(string m_mmyy, int m_tableid, int m_userid, string m_command)
        {
            string ngay = Ngay_hethong_gio.Substring(0, 10);
            int icomputerid = get_dmcomputer(), m_ins = 0, m_upd = 0, m_del = 0;
            switch (m_command)
            {
                case "upd": m_upd = 1; break;
                case "del": m_del = 1; break;
                default: m_ins = 1; break;
            }
            schema = user + m_mmyy + ".upd_eve_tables";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("m_tableid", NpgsqlDbType.Numeric).Value = m_tableid;
                cmd.Parameters.Add("m_ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                cmd.Parameters.Add("m_userid", NpgsqlDbType.Numeric).Value = m_userid;
                cmd.Parameters.Add("m_computerid", NpgsqlDbType.Numeric).Value = icomputerid;
                cmd.Parameters.Add("m_ins", NpgsqlDbType.Numeric).Value = m_ins;
                cmd.Parameters.Add("m_upd", NpgsqlDbType.Numeric).Value = m_upd;
                cmd.Parameters.Add("m_del", NpgsqlDbType.Numeric).Value = m_del;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(m_mmyy, ex.Message, sComputer, "eve_tables");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_eve_upd_del(string m_mmyy, int m_tableid, int m_userid, string m_command, string m_noidung)
        {
            int icomputerid = get_dmcomputer();
            schema = user + m_mmyy + ".upd_eve_upd_del";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("m_tableid", NpgsqlDbType.Numeric).Value = m_tableid;
                cmd.Parameters.Add("m_userid", NpgsqlDbType.Numeric).Value = m_userid;
                cmd.Parameters.Add("m_computerid", NpgsqlDbType.Numeric).Value = icomputerid;
                cmd.Parameters.Add("m_command", NpgsqlDbType.Varchar, 3).Value = m_command;
                cmd.Parameters.Add("m_noidung", NpgsqlDbType.Text).Value = m_noidung;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(m_mmyy, ex.Message, sComputer, "eve_upd_del");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }

        private int tableid()
        {
            ds = get_data("select max(id) as id from " + user + ".dmtables");
            if (ds.Tables[0].Rows[0]["id"].ToString() == "") return 1;
            else return int.Parse(ds.Tables[0].Rows[0]["id"].ToString()) + 1;
        }

        public int tableid(string mmyy, string tables)
        {
            int ret = 1;
            ds = get_data("select * from " + user + ".dmtables where tables='" + tables + "'");
            if (ds.Tables[0].Rows.Count > 0) ret = int.Parse(ds.Tables[0].Rows[0]["id"].ToString());
            else
            {
                ret = tableid();
                string fie = "";
                DataSet lds = get_data("select * from " + user + mmyy + "." + tables + " where 1=2");
                for (int i = 0; i < lds.Tables[0].Columns.Count; i++) fie += lds.Tables[0].Columns[i].ColumnName.ToString().Trim() + "^";
                execute_data("insert into " + user + ".dmtables(id,tables,fields) values (" + ret + ",'" + tables + "','" + fie.Substring(0, fie.Length - 1) + "')");
            }
            return ret;
        }

        public string losx_sothe(string mmyy, decimal sttt)
        {
            string xxx = user + mmyy, ret = " ^ ";
            sql = "select b.losx,b.sothe from " + xxx + ".d_tutrucct a," + xxx + ".d_theodoi b where a.stt=b.id and a.stt=" + sttt;
            ds = get_data(sql);
            if (ds.Tables[0].Rows.Count > 0) ret = ds.Tables[0].Rows[0]["losx"].ToString().Trim() + "^" + ds.Tables[0].Rows[0]["sothe"].ToString().Trim();
            return ret;
        }

        public int check_process(string program)
        {
            int i = 0;
            try
            {
                Process[] processes = Process.GetProcesses();
                if (processes.Length > 1)
                    for (int n = 0; n <= processes.Length - 1; n++)
                        if (((Process)processes[n]).ProcessName.ToString().ToUpper() == program) i++;
            }
            catch { i = 1; }
            return i;
        }

        public void check_process(int so, string program)
        {
            Process[] processes = Process.GetProcesses();
            int sopro = processes.Length;
            if (sopro > so)
            {
                for (int n = 0; n <= processes.Length - 1; n++)
                    if (((Process)processes[n]).ProcessName == program)
                    {
                        ((Process)processes[n]).Kill();
                        sopro--;
                        if (sopro == so) break;
                    }
            }
        }

        //Lấy giá trị hiện tại của hệ thống ngày giờ
        private void get_current()
        {
            try
            {
                //
                DataSet lds = new DataSet();
                if (File.Exists("..//..//..//xml//date_format.xml") == false)
                {
                    DataTable ldt = new DataTable();
                    ldt.TableName = "t_date";
                    ldt.Columns.Add("sShortDate");
                    ldt.Columns.Add("sLongDate");
                    ldt.Columns.Add("sDecimal");
                    ldt.Columns.Add("sThousand");
                    ldt.Columns.Add("sNegativeSign");
                    ldt.Columns.Add("iLZero");
                    ldt.Columns.Add("sTime");
                    ldt.Columns.Add("sDate");
                    ldt.Columns.Add("sTimeFormat");
                    ldt.Columns.Add("s1159");
                    ldt.Columns.Add("s2359");
                    //
                    DataRow dr = ldt.NewRow();
                    dr[0] = " ";
                    dr[1] = " ";
                    dr[2] = " ";
                    dr[3] = " ";
                    dr[4] = " ";
                    dr[5] = " ";
                    dr[6] = " ";
                    dr[7] = " ";
                    dr[8] = " ";
                    dr[9] = " ";
                    dr[10] = " ";
                    ldt.Rows.Add(dr);
                    ldt.AcceptChanges();
                    //
                    lds.Tables.Add(ldt);
                    lds.AcceptChanges();
                    lds.WriteXml("..//..//..//xml//date_format.xml");
                    lds.Dispose();
                }
                lds.ReadXml("..//..//..//xml//date_format.xml");
                lds.Tables[0].Clear();
                //
                string path = "Control Panel//International";
                RegistryKey k = Registry.CurrentUser;//chỉ ảnh hưởng user hiện tại
                k = k.OpenSubKey(path, true);
                DataRow r = lds.Tables[0].NewRow();

                r["sShortDate"] = k.GetValue("sShortDate").ToString();//ngày kiểu shortdate
                r["sLongDate"] = k.GetValue("sLongDate").ToString();//, "dddd, MMMM dd, yyyy");//ngày kiểu longdate
                r["sDecimal"] = k.GetValue("sDecimal").ToString();//, ".");//giá trị thập phân
                r["sThousand"] = k.GetValue("sThousand").ToString();//, ",");//dấu nhóm chữ số 1,000,000
                r["sNegativeSign"] = k.GetValue("sNegativeSign").ToString();//, "-");//ký hiệu âm
                r["iLZero"] = k.GetValue("iLZero").ToString();//, "0");// 1:có '0' đứng trước 0.7; 0 ngược lại

                r["sTime"] = k.GetValue("sTime").ToString();//, ":");//dấu cách giữ hh:mm:ss
                r["sDate"] = k.GetValue("sDate").ToString();//, "/");//dấu cách giữ MM/dd/yyyy
                r["sTimeFormat"] = k.GetValue("sTimeFormat").ToString();//, "hh:mm:ss tt");//định định dạng thời gian
                r["s1159"] = k.GetValue("s1159").ToString();//, "AM");//buổi sáng
                r["s2359"] = k.GetValue("s2359").ToString();//, "PM");//buổi chiều				

                lds.Tables[0].Rows.Add(r);
                lds.AcceptChanges();
                lds.WriteXml("..//..//..//xml//date_format.xml");

                k.Flush();

                lds.Dispose();
            }
            catch
            { }
        }

        //set hệ thống ngày giờ theo quy định của chương trình
        public void setStandar()
        {
            get_current();
            try
            {
                string path = "Control Panel//International";
                RegistryKey k = Registry.CurrentUser;//chỉ ảnh hưởng user hiện tại
                k = k.OpenSubKey(path, true);
                k.SetValue("sShortDate", "MM/dd/yyyy");//ngày kiểu shortdate
                k.SetValue("sLongDate", "dddd, MMMM dd, yyyy");//ngày kiểu longdate
                k.SetValue("sDecimal", ".");//giá trị thập phân
                k.SetValue("sThousand", ",");//dấu nhóm chữ số 1,000,000
                k.SetValue("sNegativeSign", "-");//ký hiệu âm
                k.SetValue("iLZero", "0");// 1:có '0' đứng trước 0.7; 0 ngược lại

                k.SetValue("sTime", ":");//dấu cách giữ hh:mm:ss
                k.SetValue("sDate", "/");//dấu cách giữ MM/dd/yyyy
                k.SetValue("sTimeFormat", "hh:mm:ss tt");//định định dạng thời gian
                k.SetValue("s1159", "AM");//buổi sáng
                k.SetValue("s2359", "PM");//buổi chiều

                k.Flush();
            }
            catch
            { }
        }

        //trả lại ngày giờ hệ thống của máy lúc đầu.
        public void set_current()
        {
            try
            {
                string path = "Control Panel//International";
                RegistryKey k = Registry.CurrentUser;//chỉ ảnh hưởng user hiện tại
                k = k.OpenSubKey(path, true);
                //
                //
                DataSet lds = new DataSet();
                lds.ReadXml("..//..//..//xml//date_format.xml");
                foreach (DataRow r in lds.Tables[0].Rows)
                {
                    //
                    k.SetValue("sShortDate", (r["sShortDate"].ToString() != "") ? r["sShortDate"].ToString() : "MM/dd/yyyy");//ngày kiểu shortdate
                    k.SetValue("sLongDate", (r["sLongDate"].ToString() != "") ? r["sLongDate"].ToString() : "dddd, MMMM dd, yyyy");//ngày kiểu longdate
                    k.SetValue("sDecimal", (r["sDecimal"].ToString() != "") ? r["sDecimal"].ToString() : ".");//giá trị thập phân
                    k.SetValue("sThousand", (r["sThousand"].ToString() != "") ? r["sThousand"].ToString() : ",");//dấu nhóm chữ số 1,000,000
                    k.SetValue("sNegativeSign", (r["sNegativeSign"].ToString() != "") ? r["sNegativeSign"].ToString() : "-");//ký hiệu âm
                    k.SetValue("iLZero", (r["iLZero"].ToString() != "") ? r["iLZero"].ToString() : "0");// 1:có '0' đứng trước 0.7; 0 ngược lại

                    k.SetValue("sTime", (r["sTime"].ToString() != "") ? r["sTime"].ToString() : ":");//dấu cách giữ hh:mm:ss
                    k.SetValue("sDate", (r["sDate"].ToString() != "") ? r["sDate"].ToString() : "/");//dấu cách giữ MM/dd/yyyy
                    k.SetValue("sTimeFormat", (r["sTimeFormat"].ToString() != "") ? r["sTimeFormat"].ToString() : "hh:mm:ss tt");//định định dạng thời gian
                    k.SetValue("s1159", (r["s1159"].ToString() != "") ? r["s1159"].ToString() : "AM");//buổi sáng
                    k.SetValue("s2359", (r["s2359"].ToString() != "") ? r["s2359"].ToString() : "PM");//buổi chiều

                    k.Flush();
                    break;
                }
            }
            catch
            { }
        }

        public int getRandom()
        {
            System.Threading.Thread.Sleep(10);
            Random r = new Random();
            return r.Next(999);
        }

        public string getyymmdd()
        {
            return get_data("select to_char(now(),'yymmdd')").Tables[0].Rows[0][0].ToString();
        }

        public string getyymmddhhmiss()
        {
            return get_data("select to_char(now(),'yymmddhh24miss')").Tables[0].Rows[0][0].ToString();
        }

        public decimal getidyymmddhhmiss_stt_computer
        {
            get
            {
                return decimal.Parse(getyymmddhhmiss() + getRandom().ToString().PadLeft(3, '0') + iRownum.ToString().PadLeft(3, '0'));
            }
        }

        #region LICENSE
        private LinksLicense.LibLicense m_license = new LinksLicense.LibLicense();
        public bool upd_md_license(string v_computer_key, string v_license_key)
        {
            if (v_computer_key == "" || v_license_key == "") return false;
            sql = "update " + user + ".license set license_key=:v_license_key,computer='" + sComputer + "' where computer_key=:v_computer_key";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;

            cmd.Parameters.Add("v_computer_key", NpgsqlDbType.Text).Value = v_computer_key;
            cmd.Parameters.Add("v_license_key", NpgsqlDbType.Text).Value = v_license_key;

            try
            {
                con.Open();
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".license(computer_key,license_key,computer) values(:v_computer_key,:v_license_key,'" + sComputer + "')";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("v_computer_key", NpgsqlDbType.Text).Value = v_computer_key;
                    cmd.Parameters.Add("v_license_key", NpgsqlDbType.Text).Value = v_license_key;

                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (Exception ex)
            {
                upd_error(ex.Message, sComputer, "license");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool is_licensed
        {
            get
            {
                bool ar = false;
                try
                {
                    ar = f_get_md_license(m_license.f_generate_computer_key(), m_license.f_generate_license_key()).Tables[0].Rows.Count > 0;
                }
                catch
                {
                    ar = false;
                }
                return ar;
            }
        }
        public DataSet f_get_md_license(string v_computer_key, string v_license_key)
        {
            DataSet ads = null;
            try
            {
                string asql = "", aexp = "";
                asql = "select * from " + user + ".license";

                if (v_computer_key != "")
                {
                    if (aexp.Length > 0)
                    {
                        aexp += " and";
                    }
                    aexp += " computer_key=:v_computer_key";
                }
                if (v_license_key != "")
                {
                    if (aexp.Length > 0)
                    {
                        aexp += " and";
                    }
                    aexp += " license_key=:v_license_key";
                }

                if (aexp.Length > 0)
                {
                    asql += " where" + aexp;
                }
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }

                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(asql, con);
                cmd.CommandType = CommandType.Text;

                if (v_computer_key != "")
                {
                    cmd.Parameters.Add("v_computer_key", NpgsqlDbType.Text).Value = v_computer_key;
                }

                if (v_license_key != "")
                {
                    cmd.Parameters.Add("v_license_key", NpgsqlDbType.Text).Value = v_license_key;
                }

                dest = new NpgsqlDataAdapter(cmd);
                ads = new DataSet();
                dest.Fill(ads);
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            catch (NpgsqlException ex)
            {
                f_create_md_license();
                upd_error(ex.Message.ToString().Trim(), sComputer, "license");
            }
            return ads;
        }
        public void f_set_licensed(string v_password_)
        {
            try
            {
                if (v_password_ == m_license.f_generate_password_key())
                {
                    string acomputer_key = "", alicence_key = "";
                    acomputer_key = m_license.f_generate_computer_key();
                    alicence_key = m_license.f_generate_license_key();
                    if (acomputer_key != "" && alicence_key != "")
                    {
                        upd_md_license(acomputer_key, alicence_key);
                    }
                }
            }
            catch
            {
            }
        }
        public string s_computer_key
        {
            get
            {
                return m_license.f_generate_computer_key();
            }
        }
        public void f_create_md_license()
        {
            try
            {
                int n = get_data("select * from license where 1=2").Tables[0].Rows.Count;
            }
            catch
            {
                sql = "CREATE TABLE medibv.license(computer_key text, license_key text,computer text,ngayud timestamp default now(),CONSTRAINT pk_license PRIMARY KEY (computer_key) USING INDEX TABLESPACE medi_index) WITH OIDS TABLESPACE medi_data;";
                execute_data(sql);
            }
        }
        #endregion

        public bool upd_htrathuocll(decimal d_id, int d_nhom, string d_ngay, string d_mabn, decimal d_mavaovien, decimal d_maql, int d_madoituong, string d_makp, string d_mabs, int d_loaiba, string d_ghichu, int d_userid)
        {
            schema = user + mmyy(d_ngay) + ".upd_htrathuocll";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_mavaovien", NpgsqlDbType.Numeric).Value = d_mavaovien;
                cmd.Parameters.Add("d_maql", NpgsqlDbType.Numeric).Value = d_maql;
                cmd.Parameters.Add("d_madoituong", NpgsqlDbType.Numeric).Value = d_madoituong;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar, i_maxlength_makp).Value = d_makp;
                cmd.Parameters.Add("d_mabs", NpgsqlDbType.Varchar, 4).Value = d_mabs;
                cmd.Parameters.Add("d_loaiba", NpgsqlDbType.Numeric).Value = d_loaiba;
                cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy(d_ngay), ex.Message, sComputer, "d_htrathuocll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_htrathuocct(string d_mmyy, decimal d_id, decimal d_stt, decimal d_sttt, string d_ngay, int d_makho, int d_mabd, decimal d_soluong, decimal d_giaban)
        {
            schema = user + d_mmyy + ".upd_htrathuocct";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(schema, con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_sttt", NpgsqlDbType.Numeric).Value = d_sttt;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_giaban", NpgsqlDbType.Numeric).Value = d_giaban;
                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_htrathuocct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public int get_sophieu_bhyt_userid(string mmyy, string mabn, decimal mavaovien, string ngay, int madoituong, int userid, string ngay_reset)
        {
            int d_nhomkho = get_nhomkho;
            bool bTangtheonam = bSophieu_mau38_tangtheonam(d_nhomkho) || bSophieu_mau38_tangtheonam_tinhtuthang12(d_nhomkho);
            bool bTangtheothang = bSophieu_mau38_tangtheothang(d_nhomkho) || bSophieu_mau38_tangtheothang_tinhtuthangtruoc(d_nhomkho);
            string tmp_ngay_reset = "31/12/20" + mmyy.Substring(2, 2);
            if (ngay_reset != "") tmp_ngay_reset = ngay_reset;
            else
            {
                if (bTangtheonam) tmp_ngay_reset = "31/12/20" + mmyy.Substring(2, 2);
                else if (bTangtheothang) tmp_ngay_reset = "01/" + mmyy.Substring(0, 2) + "/20" + mmyy.Substring(2, 2);
                else tmp_ngay_reset = ngay;
            }
            int so = 0;
            string xxx = user + mmyy;

            DataTable dt = get_data("select so from " + xxx + ".d_sophieukb where mabn='" + mabn + "' and mavaovien=" + mavaovien + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and madoituong=" + madoituong).Tables[0];
            if (dt.Rows.Count > 0)
            {
                so = (dt.Rows[0]["so"].ToString() == "") ? 1 : int.Parse(dt.Rows[0]["so"].ToString());
                if (so == 0) so = 1;
                execute_data("update " + xxx + ".d_sophieukb set lanin=lanin+1 where mabn='" + mabn + "' and mavaovien=" + mavaovien + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and madoituong=" + madoituong);
            }
            else
            {
                //sql = "update "+xxx+".d_capsotoa set sotoa=sotoa+1 where id=-99 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "'";
                sql = "update " + ((bTangtheonam) ? user : xxx) + ".d_capsotoa set sotoa=sotoa+1 where id=-99 and to_char(ngay,'dd/mm/yyyy')='" + tmp_ngay_reset + "'";
                if (madoituong < 0) sql += " and loai=" + madoituong;
                else if (madoituong == 1) sql += " and loai=0";
                else sql += " and loai=1";
                sql += " and userid=" + userid;
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
                //
                //sql = "select sotoa from "+xxx+".d_capsotoa where id=-99 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "'";
                sql = "select sotoa from " + ((bTangtheonam) ? user : xxx) + ".d_capsotoa where id=-99 and to_char(ngay,'dd/mm/yyyy')='" + tmp_ngay_reset + "'";
                if (madoituong < 0) sql += " and loai=" + madoituong;
                else if (madoituong == 1) sql += " and loai=0";
                else sql += " and loai=1";
                sql += " and userid=" + userid;
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                dest = new NpgsqlDataAdapter(cmd);
                ds = new DataSet();
                dest.Fill(ds);
                cmd.Dispose();
                //
                con.Close(); con.Dispose();
                if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                    so = int.Parse(ds.Tables[0].Rows[0]["sotoa"].ToString());
                else so = 0;
                upd_sophieukb(mmyy, mabn, mavaovien, ngay, madoituong, so, userid);
            }
            return so;
        }

        public int get_sophieu_bhyt_userid(string tu, string den, string mabn, decimal mavaovien, string ngay, int madoituong)
        {
            int so = 0;
            DataTable dt = get_data_mmyy("select so from xxx.d_sophieukb where so<>0 and mabn='" + mabn + "' and mavaovien=" + mavaovien + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and madoituong=" + madoituong, tu, den, true).Tables[0];
            if (dt.Rows.Count > 0)
            {
                so = int.Parse(dt.Rows[0]["so"].ToString());
            }
            return so;
        }
        public void upd_sophieukb(string mmyy, string mabn, decimal mavaovien, string ngay, int madoituong, int so, int userid)
        {
            sql = "insert into " + user + mmyy + ".d_sophieukb(mabn,mavaovien,ngay,madoituong,so,lanin,userid) values ('" + mabn + "'," + mavaovien + ",to_timestamp('" + ngay + "','dd/mm/yyyy hh24:mi')," + madoituong + "," + so + ",1," + userid + ")";
            execute_data(sql);
        }

        public int get_sophieu_bhyt_userid(string mmyy, string mabn, decimal mavaovien, string ngay, int madoituong, int userid)
        {
            int so = 0;
            string str = this.user + mmyy;
            DataTable table = this.get_data(string.Concat(new object[] { "select so from ", str, ".d_sophieukb where so<>0 and mabn='", mabn, "' and mavaovien=", mavaovien, " and to_char(ngay,'dd/mm/yyyy')='", ngay, "' and madoituong=", madoituong })).Tables[0];
            if (table.Rows.Count > 0)
            {
                so = int.Parse(table.Rows[0]["so"].ToString());
                this.execute_data(string.Concat(new object[] { "update ", str, ".d_sophieukb set lanin=lanin+1 where mabn='", mabn, "' and mavaovien=", mavaovien, " and to_char(ngay,'dd/mm/yyyy')='", ngay, "' and madoituong=", madoituong }));
                return so;
            }
            int num2 = (madoituong < 0) ? madoituong : ((madoituong == 1) ? 0 : 1);
            this.sql = "update " + str + ".d_capsotoa set sotoa=sotoa+1 where id=-99 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "'";
            if (madoituong < 0)
            {
                this.sql = this.sql + " and loai=" + madoituong;
            }
            else if (madoituong == 1)
            {
                this.sql = this.sql + " and loai=0";
            }
            else
            {
                this.sql = this.sql + " and loai=1";
            }
            this.sql = this.sql + " and userid=" + userid;
            this.con = new NpgsqlConnection(this.sConn);
            this.con.Open();
            this.cmd = new NpgsqlCommand(this.sql, this.con);
            this.cmd.CommandType = CommandType.Text;
            int num3 = this.cmd.ExecuteNonQuery();
            this.cmd.Dispose();
            if (num3 == 0)
            {
                this.sql = string.Concat(new object[] { "insert into ", str, ".d_capsotoa(id,ngay,loai,userid,sotoa) values (-99,to_date('", ngay, "','dd/mm/yyyy'),", num2, ",", userid, ",1)" });
                this.cmd = new NpgsqlCommand(this.sql, this.con);
                this.cmd.CommandType = CommandType.Text;
                this.cmd.ExecuteNonQuery();
                this.cmd.Dispose();
            }
            this.sql = "select sotoa from " + str + ".d_capsotoa where id=-99 and to_char(ngay,'dd/mm/yyyy')='" + ngay + "'";
            if (madoituong < 0)
            {
                this.sql = this.sql + " and loai=" + madoituong;
            }
            else if (madoituong == 1)
            {
                this.sql = this.sql + " and loai=0";
            }
            else
            {
                this.sql = this.sql + " and loai=1";
            }
            this.sql = this.sql + " and userid=" + userid;
            this.cmd = new NpgsqlCommand(this.sql, this.con);
            this.cmd.CommandType = CommandType.Text;
            this.dest = new NpgsqlDataAdapter(this.cmd);
            this.ds = new DataSet();
            this.dest.Fill(this.ds);
            this.cmd.Dispose();
            this.con.Close();
            this.con.Dispose();
            so = int.Parse(this.ds.Tables[0].Rows[0]["sotoa"].ToString());
            this.upd_sophieukb(mmyy, mabn, mavaovien, ngay, madoituong, so, userid);
            return so;
        }
        public int get_laninkb(string mmyy, string mabn, decimal mavaovien, string ngay, int madoituong)
        {
            sql = "select lanin from " + user + mmyy + ".d_sophieukb where mabn='" + mabn + "' and mavaovien=" + mavaovien + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and madoituong=" + madoituong;
            DataTable tmp = get_data(sql).Tables[0];
            if (tmp.Rows.Count == 0) return 0;
            else return int.Parse(tmp.Rows[0]["lanin"].ToString());
        }

        public string get_ghichukb(string mmyy, string mabn, decimal mavaovien, string ngay, int madoituong)
        {
            sql = "select ghichu from " + user + mmyy + ".d_sophieukb where mabn='" + mabn + "' and mavaovien=" + mavaovien + " and to_char(ngay,'dd/mm/yyyy')='" + ngay + "' and madoituong=" + madoituong;
            DataTable tmp = get_data(sql).Tables[0];
            if (tmp.Rows.Count == 0) return "";
            else return tmp.Rows[0]["ghichu"].ToString();
        }

        public bool upd_sophieukb(string m_mmyy, string m_mabn, decimal m_mavaovien, string m_ngay, int m_madoituong, string m_ghichu)
        {
            sql = "update " + user + m_mmyy + ".d_sophieukb set ghichu=:m_ghichu where mabn=:m_mabn and mavaovien=:m_mavaovien and to_char(ngay,'dd/mm/yyyy')=:m_ngay and madoituong=:m_madoituong";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_ghichu", NpgsqlDbType.Text).Value = m_ghichu;
                cmd.Parameters.Add("m_mabn", NpgsqlDbType.Varchar).Value = m_mabn;
                cmd.Parameters.Add("m_mavaovien", NpgsqlDbType.Numeric).Value = m_mavaovien;
                cmd.Parameters.Add("m_ngay", NpgsqlDbType.Varchar).Value = m_ngay;
                cmd.Parameters.Add("m_madoituong", NpgsqlDbType.Numeric).Value = m_madoituong;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_sophieukb");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_bbkk(string mmyy, int makho, int makp, decimal sttt, int mabd, decimal slton, decimal slkk, decimal thua, decimal thieu, int userid)
        {
            string xxx = user + mmyy;
            sql = "update " + xxx + ".d_bbkk set mabd=" + mabd + ",slton=" + slton + ",slkk=" + slkk + ",thua=" + thua + ",thieu=" + thieu + ",userid=" + userid;
            sql += " where makho=" + makho + " and makp=" + makp + " and sttt=" + sttt;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + xxx + ".d_bbkk(makho,makp,sttt,mabd,slton,slkk,thua,thieu,userid) values (" + makho + "," + makp + "," + sttt + "," + mabd + "," + slton + "," + slkk + "," + thua + "," + thieu + "," + userid + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_bbkk");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_bbkk(string mmyy, int makho, int makp, decimal sttt, decimal slkk, decimal thua, decimal thieu, int userid)
        {
            string xxx = user + mmyy;
            sql = "update " + xxx + ".d_bbkk set slkk=" + slkk + ",thua=" + thua + ",thieu=" + thieu + ",userid=" + userid;
            sql += " where makho=" + makho + " and makp=" + makp + " and sttt=" + sttt;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(mmyy, ex.Message, sComputer, "d_bbkk");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmtyleban(decimal tu, decimal den, decimal tyle, int userid)
        {
            sql = "update " + user + ".dmtyleban set tyle=" + tyle + ",userid=" + userid;
            sql += " where tu=" + tu + " and den=" + den;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".dmtyleban(tu,den,tyle,userid) values (" + tu + "," + den + "," + tyle + "," + userid + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "dmtyleban");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmtyleban(decimal tu, decimal den, decimal tyle, int userid,int nhomkho)
        {
            sql = "update " + user + ".dmtyleban set tyle=" + tyle + ",userid=" + userid+",nhomkho="+nhomkho ;
            sql += " where tu=" + tu + " and den=" + den+" and nhomkho="+nhomkho ;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".dmtyleban(tu,den,tyle,userid,nhomkho) values (" + tu + "," + den + "," + tyle + "," + userid + ","+nhomkho+")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "dmtyleban");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_capid(string d_table, string m_ma, string m_yy, string m_loai, string m_computer, string m_id)
        {
            sql = "update " + user + "." + d_table + " set id=" + m_id;
            if (d_table != "capid") sql += ", ten='" + m_loai + "', computer='" + m_computer + "'";
            else sql += ", loai='" + m_loai + "', yy='" + m_yy + "'";
            sql += " where ma=" + m_ma;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    if (d_table != "capid") sql = "insert into " + user + "." + d_table + " (ma, ten, computer, id, ngayud) values (" + m_ma + ",'" + m_loai + "','" + m_computer + "'," + m_id + ",now())";
                    sql = "insert into " + user + "." + d_table + " (ma, yy, loai, id, ngayud) values (" + m_ma + ",'" + m_yy + "','" + m_loai + "'," + m_id + ",now())";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "dmtyleban");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }

        public decimal get_tyleban(decimal giamua)
        {
            decimal ret = 0;
            sql = "select tyle from " + user + ".dmtyleban where tu<=" + giamua + " and den>=" + giamua + " order by tu,den";
            DataTable tmp = get_data(sql).Tables[0];
            if (tmp.Rows.Count > 0) ret = decimal.Parse(tmp.Rows[0]["tyle"].ToString());
            else
            {
                sql = "select tyle from " + user + ".dmtyleban where den<=" + giamua + " order by tu desc";
                tmp = get_data(sql).Tables[0];
                if (tmp.Rows.Count > 0) ret = decimal.Parse(tmp.Rows[0]["tyle"].ToString());
            }
            return ret;
        }

        public decimal get_tyleban(decimal giamua,int nhom)
        {
            decimal ret = 0;
            sql = "select tyle from " + user + ".dmtyleban where tu<=" + giamua + " and den>=" + giamua + " and nhomkho="+nhom+" order by tu,den";
            DataTable tmp = get_data(sql).Tables[0];
            if (tmp.Rows.Count > 0) ret = decimal.Parse(tmp.Rows[0]["tyle"].ToString());
            else
            {
                sql = "select tyle from " + user + ".dmtyleban where den<=" + giamua + " and nhomkho=" + nhom + " order by tu desc";
                tmp = get_data(sql).Tables[0];
                if (tmp.Rows.Count > 0) ret = decimal.Parse(tmp.Rows[0]["tyle"].ToString());
            }
            return ret;
        }
        public bool upd_d_menuitem(string id, string id_menu, string id_goc, decimal stt, string ten)
        {
            sql = "update " + user + ".d_menuitem set id_menu=:id_menu,id_goc=:id_goc, stt=:stt,ten=:ten where id=:id ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                try
                {
                    con.Open();
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("id", NpgsqlDbType.Varchar).Value = id;
                    cmd.Parameters.Add("id_menu", NpgsqlDbType.Varchar).Value = id_menu;
                    cmd.Parameters.Add("id_goc", NpgsqlDbType.Varchar).Value = id_goc;
                    cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                    cmd.Parameters.Add("ten", NpgsqlDbType.Text).Value = ten;
                    int num = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    if (num == 0)
                    {
                        sql = "insert into " + user + ".d_menuitem(id,id_menu,id_goc,stt,ten) values (:id,:id_menu,:id_goc,:stt,:ten)";
                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("id", NpgsqlDbType.Varchar).Value = id;
                        cmd.Parameters.Add("id_menu", NpgsqlDbType.Varchar).Value = id_menu;
                        cmd.Parameters.Add("id_goc", NpgsqlDbType.Varchar).Value = id_goc;
                        cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                        cmd.Parameters.Add("ten", NpgsqlDbType.Text).Value = ten;
                        num = cmd.ExecuteNonQuery();
                        cmd.Dispose();
                    }
                }
                catch (NpgsqlException exception)
                {
                    upd_error(exception.Message, sComputer, "d_menuitem");
                    return false;
                }
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_ttb_menuitem(string id, string id_menu, string id_goc, decimal stt, string ten)
        {
            sql = "update " + user + ".ttb_menuitem set id_menu=:id_menu,id_goc=:id_goc, stt=:stt,ten=:ten where id=:id ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                try
                {
                    con.Open();
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("id", NpgsqlDbType.Varchar).Value = id;
                    cmd.Parameters.Add("id_menu", NpgsqlDbType.Varchar).Value = id_menu;
                    cmd.Parameters.Add("id_goc", NpgsqlDbType.Varchar).Value = id_goc;
                    cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                    cmd.Parameters.Add("ten", NpgsqlDbType.Text).Value = ten;
                    int num = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                    if (num == 0)
                    {
                        sql = "insert into " + user + ".ttb_menuitem(id,id_menu,id_goc,stt,ten) values (:id,:id_menu,:id_goc,:stt,:ten)";
                        cmd = new NpgsqlCommand(sql, con);
                        cmd.CommandType = CommandType.Text;
                        cmd.Parameters.Add("id", NpgsqlDbType.Varchar).Value = id;
                        cmd.Parameters.Add("id_menu", NpgsqlDbType.Varchar).Value = id_menu;
                        cmd.Parameters.Add("id_goc", NpgsqlDbType.Varchar).Value = id_goc;
                        cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = stt;
                        cmd.Parameters.Add("ten", NpgsqlDbType.Text).Value = ten;
                        num = cmd.ExecuteNonQuery();
                        cmd.Dispose();
                    }
                }
                catch (NpgsqlException exception)
                {
                    upd_error(exception.Message, sComputer, "ttb_menuitem");
                    return false;
                }
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool bMahoamatkhau
        {
            get
            {
                return get_data("select ten from " + user + ".d_thongso where id=-13").Tables[0].Rows.Count > 0;
            }
        }

        /// <summary>
        /// cùi bắp
        /// </summary>
        /// <param name="s"></param>
        /// <returns></returns>
        public string encode(string s)
        {
            string s1 = "";
            char c;
            byte b;
            s = s.Trim();
            for (int i = 0; i < s.Length; i++)
            {
                c = Convert.ToChar(s.Substring(i, 1).ToUpper());
                b = (byte)(c);
                s1 = s1 + Convert.ToChar((b % 2 == 0) ? b + 128 : b + 96);
            }
            return s1;
        }

        //cùi bắp
        public string decode(string s)
        {
            string s1 = "";
            char c;
            byte b;
            s = s.Trim();
            for (int i = 0; i < s.Length; i++)
            {
                c = Convert.ToChar(s.Substring(i, 1));
                b = (byte)(c);
                s1 = s1 + Convert.ToChar((b % 2 == 0) ? b - 128 : b - 96);
            }
            return s1;
        }

        public bool upd_khonghi(decimal makho, string tu, string den, string ghichu, int userid)
        {
            sql = "update " + user + ".d_khonghi set ghichu='" + ghichu + "',userid=" + userid + " where makho=" + makho + " and to_char(tu,'dd/mm/yyyy hh24:mi')='" + tu + "' and to_char(den,'dd/mm/yyyy hh24:mi')='" + den + "'";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_khonghi(makho,ngay,tu,den,ghichu,userid) values ";
                    sql += " (" + makho + ",'" + tu.Substring(0, 10) + "',to_timestamp('" + tu + "','dd/mm/yyyy hh24:mi'),to_timestamp('" + den + "','dd/mm/yyyy hh24:mi'),'" + ghichu + "'," + userid + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_khonghi");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_hcton(int d_nhom, string d_mmyy, int d_userid)
        {
            if (!bMmyy(Mmyy_sau(d_mmyy))) return false;
            sql = "update " + user + ".d_hcton set userid=:d_userid where nhom=:d_nhom and mmyy=:d_mmyy";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_hcton (nhom,mmyy,userid) values (:d_nhom,:d_mmyy,:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_hcton");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool bHcton(int d_nhom, string d_mmyy)
        {
            try
            {
                return get_data("select * from " + user + ".d_hcton where nhom=" + d_nhom + " and mmyy='" + d_mmyy + "'").Tables[0].Rows.Count > 0;
            }
            catch
            {
                sql = "create table medibv.d_hcton(nhom number(2),mmyy varchar2(4),userid number(5) default 0,ngayud date default sysdate,constraint pk_d_hcton primary key(nhom,mmyy) USING INDEX TABLESPACE medi_index)  WITH OIDS;";
                execute_data(sql);
                return false;
            }
        }

        public void kiemtra_cstt_nhap(string mmyy, int nhom)
        {
            if (!bMmyy(mmyy)) return;
            string xxx = user + mmyy;
            if (get_data("select a.* from " + xxx + ".d_tutrucct a," + user + ".d_dmkho b where a.makho=b.id and b.hide=0 and b.nhom=" + nhom + " and a.slnhap<0").Tables[0].Rows.Count > 0)
            {
                upd_kiemtra_cstt(mmyy, nhom);
                upd_tonkho(mmyy, nhom, 2);
            }
        }

        public void close()
        {
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
        }

        private int get_maxstt(string stable, string id)
        {
            int i_stt = 0;
            sql = "select max(stt) stt from " + stable + " where id=" + id;
            i_stt = int.Parse(get_data(sql).Tables[0].Rows[0]["stt"].ToString());
            return i_stt + 1;
        }

        public bool upd_dmthaull(decimal id, int nhom, int madv, string so, string ngay, string tu, string den, string ghichu, int userid)
        {
            sql = "update " + user + ".d_dmthaull set nhom=" + nhom + ",madv=" + madv + ",so=:so,ngay=to_date(:ngay,'dd/mm/yyyy'),";
            sql += "tu=to_date(:tu,'dd/mm/yyyy'),den=to_date(:den,'dd/mm/yyyy'),ghichu=:ghichu,userid=" + userid + " where id=" + id;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("so", NpgsqlDbType.Varchar, 20).Value = so;
                cmd.Parameters.Add("ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                cmd.Parameters.Add("tu", NpgsqlDbType.Varchar, 10).Value = tu;
                cmd.Parameters.Add("den", NpgsqlDbType.Varchar, 10).Value = den;
                cmd.Parameters.Add("ghichu", NpgsqlDbType.Text).Value = ghichu;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmthaull (id,nhom,madv,so,ngay,tu,den,ghichu,userid) ";
                    sql += " values (" + id + "," + nhom + "," + madv + ",:so,to_date(:ngay,'dd/mm/yyyy'),to_date(:tu,'dd/mm/yyyy'),to_date(:den,'dd/mm/yyyy'),:ghichu," + userid + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("so", NpgsqlDbType.Varchar, 20).Value = so;
                    cmd.Parameters.Add("ngay", NpgsqlDbType.Varchar, 10).Value = ngay;
                    cmd.Parameters.Add("tu", NpgsqlDbType.Varchar, 10).Value = tu;
                    cmd.Parameters.Add("den", NpgsqlDbType.Varchar, 10).Value = den;
                    cmd.Parameters.Add("ghichu", NpgsqlDbType.Text).Value = ghichu;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dmthaull");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }

        public bool upd_dmthauct(decimal id, decimal idll, int mabd, string nguyenlieu, int cl_nguyenlieu, int chatluong, decimal soluong, decimal dongia)
        {
            sql = "update " + user + ".d_dmthauct set idll=" + idll + ",mabd=" + mabd + ",nguyenlieu=:nguyenlieu,cl_nguyenlieu=" + cl_nguyenlieu;
            sql += ",chatluong=" + chatluong + ",soluong=" + soluong + ",dongia=" + dongia;
            sql += " where id=" + id;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("nguyenlieu", NpgsqlDbType.Text).Value = nguyenlieu;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_dmthauct (id,idll,mabd,nguyenlieu,cl_nguyenlieu,chatluong,soluong,dongia) ";
                    sql += " values (" + id + "," + idll + "," + mabd + ",:nguyenlieu," + cl_nguyenlieu + "," + chatluong + "," + soluong + "," + dongia + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("nguyenlieu", NpgsqlDbType.Text).Value = nguyenlieu;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_dmthauct");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool bAdmin(int userid)
        {
            ds = get_data("select admin from " + user + ".d_dlogin where id=" + userid + " and admin=1");
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }

        public bool upd_toithieu(decimal makho, decimal mabd, decimal soluong)
        {
            string xxx = user;
            sql = "update " + xxx + ".d_toithieu set soluong=" + soluong + " where makho=" + makho + " and mabd=" + mabd;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + xxx + ".d_toithieu(makho,mabd,soluong) values (" + makho + "," + mabd + "," + soluong + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_toithieu");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public int f_get_nhomkho(int makho)
        {
            try
            {
                sql = "select nhom from " + user + ".d_dmkho where hide=0 and id=" + makho;
                return int.Parse(get_data(sql).Tables[0].Rows[0]["nhom"].ToString());
            }
            catch { return 1; }
        }

        public int f_get_nhomkho(string makho)
        {
            try
            {
                sql = "select distinct nhom from " + user + ".d_dmkho where hide=0 and id in(" + makho.Trim(',') + ")";
                return int.Parse(get_data(sql).Tables[0].Rows[0]["nhom"].ToString());
            }
            catch { return 1; }
        }
        public string f_get_field_name(string mmyy, string stable, string s_alias_table)
        {
            string s_fieldname = "";
            sql = "select * from " + user + mmyy + "." + stable + " where 1=2";
            DataSet lds = get_data(sql);
            foreach (DataColumn c in lds.Tables[0].Columns)
            {
                if (s_alias_table.Trim() != "")
                    s_fieldname += s_alias_table + "." + c.ColumnName + ", ";
                else
                    s_fieldname += c.ColumnName + ", ";
            }
            return s_fieldname.Trim().Trim(',');
        }

        public string f_get_select_field(string sTable, string sField_Khongselect)
        {
            string sField = "", tmp_Field_Khong_Select = "," + sField_Khongselect.Trim().Trim(',') + ",";
            string asql = " select * from " + user + "." + sTable + " where 1=2 ";
            DataSet lds = get_data(asql);
            foreach (DataColumn r in lds.Tables[0].Columns)
            {
                if (sField_Khongselect.Trim() == "" || tmp_Field_Khong_Select.IndexOf("," + r.ColumnName + ",") < 0)
                {
                    sField += r.ColumnName + ", ";
                }
            }
            return sField.Trim().Trim(',');
        }

        public string f_get_select_field_mmyy(string mmyy, string sTable, string sField_Khongselect)
        {
            string xxx = user + mmyy;
            if (bMmyy(mmyy) == false) return "";
            string sField = "", tmp_Field_Khong_Select = "," + sField_Khongselect.Trim().Trim(',') + ",";
            string asql = " select * from " + xxx + "." + sTable + " where 1=2 ";
            DataSet lds = get_data(asql);
            foreach (DataColumn r in lds.Tables[0].Columns)
            {
                if (sField_Khongselect.Trim() == "" || tmp_Field_Khong_Select.IndexOf("," + r.ColumnName + ",") < 0)
                {
                    sField += r.ColumnName + ", ";
                }
            }
            return sField.Trim().Trim(',');
        }
        public string f_get_select_field(string sTable, string sField_Khongselect, string s_alias_table)
        {
            string sField = "", tmp_Field_Khong_Select = "," + sField_Khongselect.Trim().Trim(',') + ",";
            string asql = " select * from " + user + "." + sTable + " where 1=2 ";
            DataSet lds = get_data(asql);
            foreach (DataColumn r in lds.Tables[0].Columns)
            {
                if (sField_Khongselect.Trim() == "" || tmp_Field_Khong_Select.IndexOf("," + r.ColumnName + ",") < 0)
                {
                    if (s_alias_table.Trim() != "")
                        sField += s_alias_table + "." + r.ColumnName + ", ";
                    else
                        sField += r.ColumnName + ", ";
                }
            }
            return sField.Trim().Trim(',');
        }

        public string f_get_diung(string s_mabn)
        {
            string s_mahc = "";
            string s_tenhc = "";
            sql = "select mahc from " + user + ".diungthuoc where mabn='" + s_mabn + "'";
            DataSet lds = get_data(sql);
            foreach (DataRow r in lds.Tables[0].Rows)
            {
                s_mahc += r["mahc"].ToString();
            }
            if (s_mahc.Trim().Trim('+') != "")
            {
                s_mahc = s_mahc.Trim().Trim('+');
                s_mahc = s_mahc.Replace("+", "','");
                sql = "select ma, ten from " + user + ".d_dmhoatchat where ma in('" + s_mahc + "')";
                lds = get_data(sql);
                foreach (DataRow r in lds.Tables[0].Rows)
                {
                    s_tenhc += r["ten"].ToString() + ", ";
                }
            }
            else s_tenhc = "";
            return s_tenhc;
        }

        public decimal get_id_bhyt_maubaocao()
        {
            decimal i_id;
            try
            {
                sql = "select nvl(max(id),0) as id from " + user + ".bhyt_maubaocao";
                i_id = decimal.Parse(get_data(sql).Tables[0].Rows[0]["id"].ToString()) + 1;
            }
            catch { i_id = 1; }
            return i_id;
        }

        public void upd_bhyt_mabaocao(decimal id, string maloai, string tenloai, string tenmau, string filereport, int iused, int istt, int i_loai, int i_tonghop)
        {
            int i_rec = 0;
            cmd.Dispose();
            con.Close();
            sql = "update " + user + ".bhyt_maubaocao set tenloai=:tenloai, ten=:tenmau, filereport=:filereport, stt=:stt,loai=:i_loai,tonghop=:i_tonghop ";
            sql += " where id=:id";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            con.Open();
            cmd = new NpgsqlCommand(sql, con);
            cmd.CommandType = CommandType.Text;
            cmd.Parameters.Add("tenloai", NpgsqlDbType.Text).Value = tenloai;
            cmd.Parameters.Add("tenmau", NpgsqlDbType.Text).Value = tenmau;
            cmd.Parameters.Add("filereport", NpgsqlDbType.Varchar, 64).Value = filereport;
            cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = istt;
            cmd.Parameters.Add("i_loai", NpgsqlDbType.Numeric).Value = i_loai;
            cmd.Parameters.Add("i_tonghop", NpgsqlDbType.Numeric).Value = i_tonghop;
            cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;

            i_rec = cmd.ExecuteNonQuery();
            if (i_rec <= 0)
            {
                sql = "insert into " + user + ".bhyt_maubaocao(id,maloai,tenloai,ten,filereport,stt,loai,tonghop) values (:id,:maloai,:tenloai,:tenmau,:filereport,:stt,:i_loai,:i_tonghop)";
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                try
                {
                    con.Open();
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("id", NpgsqlDbType.Numeric).Value = id;
                    cmd.Parameters.Add("maloai", NpgsqlDbType.Varchar, 64).Value = maloai;
                    cmd.Parameters.Add("tenloai", NpgsqlDbType.Text).Value = tenloai;
                    cmd.Parameters.Add("tenmau", NpgsqlDbType.Text).Value = tenmau;
                    cmd.Parameters.Add("filereport", NpgsqlDbType.Varchar, 64).Value = filereport;
                    cmd.Parameters.Add("stt", NpgsqlDbType.Numeric).Value = istt;
                    cmd.Parameters.Add("i_loai", NpgsqlDbType.Numeric).Value = i_loai;
                    cmd.Parameters.Add("i_tonghop", NpgsqlDbType.Numeric).Value = i_tonghop;

                    cmd.ExecuteNonQuery();
                }
                catch { }
                finally
                {
                    cmd.Dispose();
                    con.Close();
                }
            }
        }

        #region duocbv_linh
        public void upd_thongso(int m_id, string m_ten)
        {
            sql = "update " + user + ".thongso set ten=:m_ten where id=" + m_id;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_ten", NpgsqlDbType.Varchar, 254).Value = m_ten;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".thongso(id,ten) values (:m_id,:m_ten)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("m_id", NpgsqlDbType.Numeric).Value = m_id;
                    cmd.Parameters.Add("m_ten", NpgsqlDbType.Varchar, 254).Value = m_ten;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch
            {
            }
            finally
            {
                con.Close(); con.Dispose();
            }
        }

        public int NhomTTB
        {
            get
            {
                try
                {
                    DataSet tmp = new DataSet();
                    tmp = get_data("select ten from " + user + ".thongso where id=" + (int)id_thongso.ID_NhomKhoTTB);
                    if (tmp.Tables[0].Rows.Count == 0) return -1;
                    else return int.Parse(tmp.Tables[0].Rows[0][0].ToString());
                }
                catch
                {
                    return -1;
                }
            }
        }
        public enum id_thongso
        {
            ID_NhomKhoTTB = -99999
        }
        public bool upd_anhxa(int m_ma_medisoft, int m_ma_benhvien, string m_loai)
        {
            string strsql = "insert into " + user + ".anhxa (ma_medisoft,ma_benhvien,loai) values (:m_ma_medisoft,:m_ma_benhvien,:m_loai)";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                if (con.State == ConnectionState.Closed) con.Open();
                cmd = new NpgsqlCommand(strsql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_ma_medisoft", NpgsqlDbType.Numeric).Value = m_ma_medisoft;
                cmd.Parameters.Add("m_ma_benhvien", NpgsqlDbType.Numeric).Value = m_ma_benhvien;
                cmd.Parameters.Add("m_loai", NpgsqlDbType.Varchar, 50).Value = m_loai;
                cmd.ExecuteNonQuery();
            }
            catch
            {
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();
            }
            return true;
        }
        public bool upd_bieu101(decimal m_id, int m_ma, string m_ngay, Decimal m_sotien, int m_userid)
        {
            sql = "update " + user + ".bieu_101 set ngay=to_date(:m_ngay,'dd/mm/yyyy'),sotien=sotien+:m_sotien,";
            sql += "userid=:m_userid where id=:m_id and ma=:m_ma";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("m_ngay", NpgsqlDbType.Varchar).Value = m_ngay.Substring(0, 10);
                cmd.Parameters.Add("m_sotien", NpgsqlDbType.Numeric).Value = m_sotien;
                cmd.Parameters.Add("m_userid", NpgsqlDbType.Numeric).Value = m_userid;
                cmd.Parameters.Add("m_id", NpgsqlDbType.Numeric).Value = m_id;
                cmd.Parameters.Add("m_ma", NpgsqlDbType.Numeric).Value = m_ma;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".bieu_101(id,ma,ngay,sotien,userid) values ";
                    sql += "(:m_id,:m_ma,to_date(:m_ngay,'dd/mm/yyyy'),:m_sotien,:m_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("m_id", NpgsqlDbType.Numeric).Value = m_id;
                    cmd.Parameters.Add("m_ma", NpgsqlDbType.Numeric).Value = m_ma;
                    cmd.Parameters.Add("m_ngay", NpgsqlDbType.Varchar).Value = m_ngay.Substring(0, 10);
                    cmd.Parameters.Add("m_sotien", NpgsqlDbType.Numeric).Value = m_sotien;
                    cmd.Parameters.Add("m_userid", NpgsqlDbType.Numeric).Value = m_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "bieu_101");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        #endregion

        public bool bLaygiamua_khi_giabh_0_giabh_nho_giamua
        {
            //medisoft E22 
            get
            {
                try
                {
                    DataSet ds = get_data("select ten from " + user + ".thongso where id=1045");
                    return int.Parse(ds.Tables[0].Rows[0][0].ToString()) == 1;
                }
                catch { return true; }
            }
        }

        public bool upd_taosolieu_duoc(int d_nhom, string d_mmyy, int d_userid)
        {
            //luu lai ngay tao so lieu thang moi
            string ngaytaosolieu = ngayhienhanh_server.Substring(0, 10);
            sql = "update " + user + ".d_taosolieu set userid=:d_userid where nhom=:d_nhom and mmyy=:d_mmyy";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_taosolieu (nhom,mmyy,userid, ngayud) values (:d_nhom,:d_mmyy,:d_userid,to_date('" + ngaytaosolieu + "','dd/mm/yyyy'))";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    //cmd.Parameters.Add("d_ngayud", NpgsqlDbType.Varchar, 10).Value = ngayhienhanh_server.Substring(0, 10);
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_taosolieu");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public string get_ngaytao_solieu_thangmoi(string d_mmyy, int d_nhom)
        {
            string s_ngay = "";
            sql = "select to_char(ngayud,'dd/mm/yyyy') ngay from " + user + ".d_taosolieu where nhom=" + d_nhom + " and  mmyy='" + d_mmyy + "'";
            DataSet lds = get_data(sql);
            if (lds == null || lds.Tables.Count <= 0 || lds.Tables[0].Rows.Count == 0) s_ngay = "";
            else s_ngay = lds.Tables[0].Rows[0]["ngay"].ToString();
            if (s_ngay == "")
            {
                upd_taosolieu_duoc(d_nhom, d_mmyy, 0);
                s_ngay = ngayhienhanh_server.Substring(0, 10);
            }
            return s_ngay;
        }
        public string f_get_khudt(int userid)
        {
            try
            {
                ds = get_data("select khu from " + user + ".d_dlogin where id=" + userid);
                return ds.Tables[0].Rows[0]["khu"].ToString();
            }
            catch { return ""; }
        }
        #region hien danh muc loai thuoc
        /// <summary>
        /// Phương thức cập nhật danh mục loại thuốc. bệnh viện yêu cầu bà rịa
        /// </summary>
        /// <param name="d_id"></param>
        /// <param name="d_ten"></param>
        /// <returns></returns>
        public bool upd_dmloaithuoc(decimal d_id, string d_ten)
        {

            sql = "update " + user + ".d_dmloaithuoc set ten=:d_ten where id=" + d_id;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                int i_row = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (i_row == 0)
                {
                    sql = "insert into " + user + ".d_dmloaithuoc(id,ten) values(" + d_id + ",:d_ten)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.ExecuteNonQuery();
                }
            }
            catch (Exception er)
            {
                upd_error(er.Message, sComputer, "d_dmloaithuoc");
                return false;
            }
            finally
            {
                con.Close();
                cmd.Dispose();
            }
            return true;
        }
        /// <summary>
        /// Phương thức sử dụng để cập nhật thuốc sử dụng cho trẻ em, nguồn gốc thuốc, số tt byt của thuốc, loại thuốc
        /// </summary>
        /// <param name="d_id"></param>
        /// <param name="d_sdte"></param>
        /// <param name="d_nguongoc"></param>
        /// <param name="d_sttbyt"></param>
        /// <param name="d_idloaithuoc"></param>
        /// <returns></returns>
        public bool upd_dmbd(decimal d_id, int d_sdte, string d_nguongoc, string d_sttbyt, decimal d_idloaithuoc)
        {
            sql = "update " + user + ".d_dmbd set sdte=" + d_sdte + ",nguongoc=:d_nguongoc,sttbyt='" + d_sttbyt + "',idloaithuoc=" + d_idloaithuoc + " where id=" + d_id;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_nguongoc", NpgsqlDbType.Text).Value = d_nguongoc;
                int i_row = cmd.ExecuteNonQuery();
            }
            catch (Exception er)
            {
                upd_error(er.Message, sComputer, "d_dmbd");
                return false;
            }
            finally
            {
                con.Close();
                cmd.Dispose();
            }
            return true;
        }

        public int f_quyet_duyet_mau38(int d_nhomkho, int d_userid)
        {
            int i_quyen = 0;
            //i_quyen = 0 : duyet CLS+Thuoc
            //i_quyen = 1 : duyet Thuoc
            //i_quyen = 2 : duyet Thuoc
            sql = "select cls38, thuoc38 from " + user + ".d_dlogin where id=" + d_userid + " and nhomkho=" + d_nhomkho;
            DataSet lds = get_data(sql);
            if (lds == null | lds.Tables.Count <= 0 || lds.Tables[0].Rows.Count <= 0) i_quyen = 0;
            else
            {
                if (lds.Tables[0].Rows[0]["cls38"].ToString() == "1" && lds.Tables[0].Rows[0]["thuoc38"].ToString() == "1") i_quyen = 0;
                else if (lds.Tables[0].Rows[0]["cls38"].ToString() == "0" && lds.Tables[0].Rows[0]["thuoc38"].ToString() == "1") i_quyen = 1;
                else if (lds.Tables[0].Rows[0]["cls38"].ToString() == "1" && lds.Tables[0].Rows[0]["thuoc38"].ToString() == "0") i_quyen = 2;
            }
            return i_quyen;
        }

        public void f_capnhat_tonkhoct(string d_mmyy, int d_nhomkho)
        {

            string s_user = user;
            string v_user = s_user + d_mmyy;

            string sql2 = " select y.* from ( ";
            sql2 += " select makho,mabd,sttt,sum(nhap) slnhap,sum(xuat) slxuat from ( ";
            //sql2 += " select b.makho,b.mabd,b.sttt,sum(decode(a.loai,3,b.soluong,0)) nhap,sum(decode(a.loai,3,0,b.soluong)) xuat  ";
            sql2 += " select b.makho,b.mabd,b.sttt,sum((case when a.loai=3 then b.soluong else 0 end)) nhap,sum((case when a.loai=3 then 0 else b.soluong end)) xuat  ";
            sql2 += " from " + v_user + ".d_xuatsdll a," + v_user + ".d_thucxuat b," + s_user + ".d_dmbd c where a.id=b.id and b.mabd=c.id and a.loai in(1,4,3) and c.nhom=" + d_nhomkho;
            sql2 += " group by b.makho,b.mabd,b.sttt ";
            sql2 += " union all ";
            sql2 += " select b.makho,b.mabd,b.sttt,0 nhap,sum(b.soluong) xuat  ";
            sql2 += " from " + v_user + ".d_xuatsdll a," + v_user + ".d_thucbucstt b," + s_user + ".d_dmbd c where a.id=b.id and b.mabd=c.id and a.loai in(2)  and c.nhom=" + d_nhomkho + " group by b.makho,b.mabd,b.sttt ";
            sql2 += " union all ";
            sql2 += " select b.makho,b.mabd,b.sttt,0 nhap,sum(b.soluong) xuat ";
            sql2 += " from " + v_user + ".bhytkb a," + v_user + ".bhytthuoc b," + s_user + ".d_dmbd c where a.id=b.id and b.mabd=c.id  and c.nhom=" + d_nhomkho + " group by b.makho,b.mabd,b.sttt ";
            sql2 += " union all ";
            sql2 += " select b.makho,b.mabd,b.sttt,0 nhap,sum(b.soluong) xuat ";
            sql2 += " from " + v_user + ".d_ngtrull a," + v_user + ".d_ngtruct b," + s_user + ".d_dmbd c where a.id=b.id and b.mabd=c.id  and c.nhom=" + d_nhomkho + "  group by b.makho,b.mabd,b.sttt ";
            sql2 += " union all ";
            sql2 += " select a.khox makho,b.mabd,b.sttt,0 nhap,sum(b.soluong) xuat  ";
            sql2 += " from " + v_user + ".d_xuatll a," + v_user + ".d_xuatct b," + s_user + ".d_dmbd c where a.id=b.id and b.mabd=c.id and a.loai in('XK','CK','BS','XC')  and c.nhom=" + d_nhomkho + "   group by a.khox,b.mabd,b.sttt ";
            sql2 += " union all  ";
            sql2 += " select a.khon makho,b.mabd,b.sttt,sum(b.soluong) nhap,0 xuat  ";
            sql2 += "  from " + v_user + ".d_xuatll a," + v_user + ".d_xuatct b," + s_user + ".d_dmbd c where a.id=b.id and b.mabd=c.id and a.loai in('CK','TH','HT','NC')   and c.nhom=" + d_nhomkho + "  group by a.khon,b.mabd,b.sttt ";
            sql2 += " union all  ";
            sql2 += " select b.makho,b.mabd,b.stttchuyen as sttt,sum(b.soluong) nhap,0 xuat  ";

            sql2 += "  from " + v_user + ".d_chuyenll a," + v_user + ".d_chuyenct b," + s_user + ".d_dmbd c where a.id=b.id and b.mabd=c.id  and c.nhom=" + d_nhomkho + "  group by b.makho,b.mabd,b.stttchuyen ";
            sql2 += " union all  ";
            sql2 += " select b.makho,b.mabd,b.sttt,0 nhap,sum(b.soluong) xuat  ";

            sql2 += "  from " + v_user + ".d_chuyenll a," + v_user + ".d_chuyenct b," + s_user + ".d_dmbd c where a.id=b.id and b.mabd=c.id  and c.nhom=" + d_nhomkho + "  group by b.makho,b.mabd,b.sttt ";
            sql2 += " union all  ";
            sql2 += " select a.makho,b.mabd,c.stt sttt,sum(b.soluong) nhap,0 xuat ";
            sql2 += " from " + v_user + ".d_nhapll a," + v_user + ".d_nhapct b," + v_user + ".d_tonkhoct c," + s_user + ".d_dmbd d where a.id=b.id and b.id=c.idn and b.stt=c.sttn and b.mabd=d.id  and d.nhom=" + d_nhomkho + "  group by a.makho,b.mabd,c.stt ";
            sql2 += " ) x group by makho,mabd,sttt ) y," + v_user + ".d_tonkhoct z where y.makho=z.makho and y.mabd=z.mabd and y.sttt=z.stt and (y.slnhap<>z.slnhap or y.slxuat<>z.slxuat) ";

            DataSet ds2 = get_data(sql2);

            foreach (DataRow r in ds2.Tables[0].Rows)
            {
                string mabd = r["mabd"].ToString();
                string makho = r["makho"].ToString();
                string sttt = r["sttt"].ToString();
                string slnhap = r["slnhap"].ToString();
                string slxuat = r["slxuat"].ToString();

                sql = " update " + v_user + ".d_tonkhoct set slnhap = " + slnhap + ", slxuat= " + slxuat + " where mabd= " + mabd + " and makho= " + makho + " and stt= " + sttt;
                execute_data(sql);
            }
        }
        #endregion
        #region hien 06-06-2011
        /// <summary>
        /// Phương thước dùng để thay đổi kiểu dữ liệu của column
        /// </summary>
        /// <param name="schema_name"></param>
        /// <param name="table_name"></param>
        /// <param name="column_name"></param>
        /// <param name="type_data"></param>
        public void alterColumn(string schema_name, string table_name, string column_name, string type_data)
        {
            sql = "alter table " + schema_name + "." + table_name + " alter column " + column_name + " type " + type_data;
            execute_data(sql);
        }
        public bool bCompareTypedataColumn(string schema_name, string table_name, string column_name, string length_typedata)
        {
            sql = "select numeric_precision_radix as length_column from information_schema.columns where table_schema='" + schema_name + "' and table_name='" + table_name + "' and column_name='" + column_name + "'";
            try
            {
                return get_data(sql).Tables[0].Rows[0]["length_column"].ToString().Trim() == length_typedata;
            }
            catch
            {
                return false;
            }
        }
        public int i_Chinhanh_hientai
        {
            //A30: lay id chi nhanh hien tai
            get
            {
                try
                {
                    string s_ip_local = Maincode("Ip");
                    string s_database_local = Maincode("Database");
                    DataSet dsChinhanh = get_data(" select id from " + userid +
                        ".dmchinhanh where ip='" + s_ip_local + "' and lower(database_local)='" + s_database_local + "' and port='" + Maincode("Post") + "'");
                    if (dsChinhanh.Tables[0].Rows.Count == 0)
                    {
                        DataSet dstmp = get_data("select ten from " + user + ".thongso where id=999");
                        return int.Parse(dstmp.Tables[0].Rows[0][0].ToString());
                    }
                    else
                    {
                        return int.Parse(dsChinhanh.Tables[0].Rows[0][0].ToString());
                    }
                }
                catch { return 0; }
            }
        }

        public int i_Chinhanh_hientai_Trungtam
        {
            //A30: lay id chi nhanh hien tai
            get
            {
                try
                {
                    string s_ip_local = Maincode("Ip");
                    string s_database_local = User_database.ToLower();
                    DataSet dsChinhanh = get_data(" select id from " + userid +
                        ".dmchinhanh where ip='" + s_ip_local + "' and lower(database_local)='" + s_database_local + "' and port='" + Maincode("Post") + "' and trungtam=1");

                    return int.Parse(dsChinhanh.Tables[0].Rows[0][0].ToString());
                }
                catch { return -1; }
            }
        }
        /// <summary>
        /// Hien them option:c2000 xml : d_thongso
        /// Thuộc tính sử dụng cho việc lưu các danh mục được khai báo thêm lên server trung tâm. Sử dụng cho các bênh viện có nhiều server
        /// </summary>
        public bool bDanhmuc_luu_server
        {
            //C43: Danh mục lưu server trung tâm
            get
            {
                try
                {
                    DataSet ds11 = new DataSet();
                    ds11.ReadXml("..//..//..//xml//d_thongso.xml");
                    return ds11.Tables[0].Rows[0]["c2000"].ToString() == "1";
                }
                catch
                {
                    return false;
                }
            }
        }
        /// <summary>
        /// phương thức chuyển kết nối tới máy server trung tâm.
        /// Nếu giá trị truyền vào true chương trình sẽ thực hiện chuyển sang cầu nối sang server trung tam
        /// </summary>
        /// <param name="chuyen"></param>
        public void ChuyenCauNoiQuaServerTrungtam(bool chuyen)
        {
            if (chuyen)
            {
                sConn = sConn_server;
            }
            else
            {
                if (Maincode("Con") != "") sConn = Maincode("Con");
                if (Maincode("User") != "") userid = Maincode("User");
                if (Maincode("UserID") != "") owner = Maincode("UserID");
                if (Maincode("Password") != "") password = Maincode("Password");
                if (Maincode("Database") != "") database = Maincode("Database");
                if (Maincode("xxxxx") == "*****") password = decode(xxxxx).ToLower();
                sConn = "Server=" + Maincode("Ip") + ";Port=" + Maincode("Post") + ";User Id=" + owner + ";Password=" + password + ";Database=" + database + ";Encoding=UNICODE;Pooling=true;";
            }
        }
        public bool bChinhanh_Servertrugtam
        {
            get
            {
                try
                {
                    DataSet ds11 = get_data("select trungtam from " + user + ".dmchinhanh where id=" + this.i_Chinhanh_hientai);
                    return ds11.Tables[0].Rows[0][0].ToString() == "1";
                }
                catch
                {
                    return false;
                }
            }
        }
        public bool bQuanly_Theo_Chinhanh
        {
            //A14.2
            get
            {
                try
                {
                    DataSet ds11 = get_data("select ten from " + user + ".thongso where id=998");
                    return ds11.Tables[0].Rows[0][0].ToString() == "1";
                }
                catch { return false; }
            }
        }
        /// <summary>
        /// Phương thức dùng để cập nhật lên data trung tâm
        /// </summary>
        /// <param name="schema"></param>
        /// <param name="table"></param>
        /// <param name="keys"></param>
        public void upd_data(string schema, string table, string keys)
        {
            string _userid = "medibv", _owner = "medisoft", _password = "links1920", _database = "medisoft";
            //if (MaincodeServer("Con") != "") sConn_server = MaincodeServer("Con");
            //if (MaincodeServer("User") != "") _userid = MaincodeServer("User");
            if (MaincodeServer("UserID") != "") _owner = MaincodeServer("UserID");
            if (MaincodeServer("Password") != "") _password = MaincodeServer("Password");
            if (MaincodeServer("Database") != "") _database = MaincodeServer("Database");
            if (MaincodeServer("xxxxx") == "*****") _password = decode(xxxxx).ToLower();

            string fields = getColumns_name(schema, table, false);
            // tao table tam
            sql = "create table " + schema + "." + table + "_tmp as select * from " + schema + "." + table + " where 1=0";
            execute_data(sql);
            // insert into vao table tam
            sql = " insert into " + schema + "." + table + "_tmp" + "(" + fields + ") " +
                 " select " + fields +
                 " from dblink('dbname=" + _database + " port=" + MaincodeServer("Post") + " host=" + MaincodeServer("Ip") + " user=" + _owner + " password=" + _password + "', 'select " + fields + " from " + schema + "." + table + "') " +
                 " AS tmp(" + getColumns_name(schema, table, true) + ");";
            execute_data(sql);
            // xoa du lieu thua
            sql = "delete from " + schema + "." + table + "_tmp where " + keys + " in( select " + keys + " from " + schema + "." + table + ")";
            execute_data(sql);
            // insert into vao table chinh
            sql = "insert into " + schema + "." + table + "(" + fields + ") select " + fields + " from " + schema + "." + table + "_tmp";
            execute_data(sql);
            // drop table tam
            sql = "drop table " + schema + "." + table + "_tmp";
            execute_data(sql);
        }
        /// <summary>
        /// Phương thức dùng để cập nhật data lên server trung tâm. 
        /// </summary>
        /// <param name="schema"></param>
        /// <param name="table"></param>
        public void send_data(string schema, string table)
        {

        }
        private string getColumns_name(string _schema, string _table, bool data_type)
        {
            string sql1 = "select lower(column_name) column_name,data_type,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns where table_schema='" + _schema + "' and table_name='" + _table + "'";
            string agument = "";
            string length_data = "";
            foreach (DataRow row in get_data(sql1).Tables[0].Rows)
            {
                length_data = "";
                if (agument == "")
                {
                    agument = row["column_name"].ToString().Trim();
                    if (data_type)
                    {
                        length_data = row["data_type"].ToString().Trim();
                        // xu ly  trong truong hop khong la date
                        if (row["character_maximum_length"].ToString().Trim() != "" || row["numeric_precision"].ToString().Trim() != "")
                        {
                            length_data += "(" + row["character_maximum_length"].ToString().Trim() + row["numeric_precision"].ToString().Trim();
                            // xu ly kieu so thuc
                            if (row["numeric_scale"].ToString().Trim() != "")
                            {
                                length_data += "," + row["numeric_scale"].ToString().Trim();
                            }
                            length_data += ")";
                        }
                        agument += " " + length_data;
                    }
                }
                else
                {
                    agument += "," + row["column_name"].ToString().Trim();
                    if (data_type)
                    {
                        length_data = row["data_type"].ToString().Trim();
                        // xu ly  trong truong hop khong la date
                        if (row["character_maximum_length"].ToString().Trim() != "" || row["numeric_precision"].ToString().Trim() != "")
                        {
                            length_data += "(" + row["character_maximum_length"].ToString().Trim() + row["numeric_precision"].ToString().Trim();
                            // xu ly kieu so thuc
                            if (row["numeric_scale"].ToString().Trim() != "")
                            {
                                length_data += "," + row["numeric_scale"].ToString().Trim();
                            }
                            length_data += ")";
                        }
                        agument += " " + length_data;
                    }
                }
            }
            return agument;
        }
        public bool upd_d_dutrungay(int d_nhom, string d_mmyy, string d_ngay, int d_mabd, decimal d_k1, decimal d_tc, decimal d_xuat10
            , decimal d_xuat30, decimal d_slgoiy, decimal d_l1, decimal d_d1, decimal d_l2, decimal d_d2, int d_dutru, int d_daduyet,
            string d_nhacc, string d_donvi, int d_lan, int d_manguon, int d_idchinhanh)
        {
            try
            {
                //sql = "update "+userid+".d_dutrungay set ngay=to_date(d_ngay,'dd/mm/yyyy'), k1=d_k1,tc=d_tc,xuat10=d_xuat10,xuat30=d_xuat30,slgoiy=d_slgoiy,l1=d_l1,d1=d_d1,l2=d_l2,d2=d_d2,dutru=d_dutru,daduyet=d_daduyet,nhacc=d_nhacc,donvi=d_donvi where mmyy=d_mmyy and mabd=d_mabd and nhom=d_nhom and manguon=d_manguon and lan=d_lan;";
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(userid + ".upd_dutrungay");
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar, 4).Value = d_mmyy;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_k1", NpgsqlDbType.Numeric).Value = d_k1;
                cmd.Parameters.Add("d_tc", NpgsqlDbType.Numeric).Value = d_tc;
                cmd.Parameters.Add("d_xuat10", NpgsqlDbType.Numeric).Value = d_xuat10;
                cmd.Parameters.Add("d_xuat30", NpgsqlDbType.Numeric).Value = d_xuat30;
                cmd.Parameters.Add("d_slgoiy", NpgsqlDbType.Numeric).Value = d_slgoiy;
                cmd.Parameters.Add("d_l1", NpgsqlDbType.Numeric).Value = d_l1;
                cmd.Parameters.Add("d_d1", NpgsqlDbType.Numeric).Value = d_d1;
                cmd.Parameters.Add("d_l2", NpgsqlDbType.Numeric).Value = d_l2;
                cmd.Parameters.Add("d_d2", NpgsqlDbType.Numeric).Value = d_d2;
                cmd.Parameters.Add("d_dutru", NpgsqlDbType.Numeric).Value = d_dutru;
                cmd.Parameters.Add("d_daduyet", NpgsqlDbType.Numeric).Value = d_daduyet;
                cmd.Parameters.Add("d_nhacc", NpgsqlDbType.Text).Value = d_nhacc;
                cmd.Parameters.Add("d_donvi", NpgsqlDbType.Text).Value = d_donvi;
                cmd.Parameters.Add("d_lan", NpgsqlDbType.Numeric).Value = d_lan;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_idchinhanh", NpgsqlDbType.Numeric).Value = d_idchinhanh;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_dutrungay");
                return false;
            }
            finally
            {
                con.Close();
                con.Dispose();
                cmd.Dispose();
            }
        }

        public bool upd_d_dutrungay(int d_nhom, string d_mmyy, string d_ngay, int d_mabd, decimal d_k1, decimal d_tc, decimal d_xuat10
            , decimal d_xuat30, decimal d_slgoiy, decimal d_l1, decimal d_d1, decimal d_l2, decimal d_d2, int d_dutru, int d_daduyet,
            string d_nhacc, string d_donvi, int d_lan, int d_manguon, int d_idchinhanh, string dblink)
        {
            try
            {
                sql = "update " + user + ".d_dutrungay@" + dblink + " set ngay=to_date('" + d_ngay + "','dd/mm/yyyy'), k1=" + d_k1 + ",tc=" + d_tc + ",xuat10=" + d_xuat10 + ",xuat30=" + d_xuat30 + ",slgoiy=" + d_slgoiy + ",l1=" + d_l1 + ",d1=" + d_d1 + ",l2=" + d_l2 + ",d2=" + d_d2 + ",dutru=" + d_dutru + ",daduyet=" + d_daduyet + ",nhacc=:d_nhacc,donvi=:d_donvi where mmyy='" + d_mmyy + "' and mabd='" + d_mabd + "' and nhom=" + d_nhom + " and manguon='" + d_manguon + "' and lan=" + d_lan + " and idchinhanh=" + d_idchinhanh;
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;

                cmd.Parameters.Add("d_nhacc", NpgsqlDbType.Text).Value = d_nhacc;
                cmd.Parameters.Add("d_donvi", NpgsqlDbType.Text).Value = d_donvi;
                int i = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (i == 0)
                {
                    sql = "insert into " + user + ".d_dutrungay@" + dblink + "(nhom,mmyy,ngay,mabd,k1,tc,xuat10,xuat30,slgoiy,l1,d1,l2,d2,dutru,daduyet,nhacc,donvi,manguon,lan,idchinhanh) values (" + d_nhom + ",'" + d_mmyy + "',to_date('" + d_ngay + "','dd/mm/yyyy')," + d_mabd + "," + d_k1 + "," + d_tc + "," + d_xuat10 + "," + d_xuat30 + "," + d_slgoiy + "," + d_l1 + "," + d_d1 + "," + d_l2 + "," + d_d2 + "," + d_dutru + "," + d_daduyet + ",:d_nhacc,:d_donvi,'" + d_manguon + "'," + d_lan + "," + d_idchinhanh + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;

                    cmd.Parameters.Add("d_nhacc", NpgsqlDbType.Text).Value = d_nhacc;
                    cmd.Parameters.Add("d_donvi", NpgsqlDbType.Text).Value = d_donvi;
                    cmd.ExecuteNonQuery();
                }
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_dutrungay");
                return false;
            }
            finally
            {
                con.Close();
                con.Dispose();
                cmd.Dispose();
            }
        }
        public string getDBLink()
        {
            sql = "select database from " + user + ".dmchinhanh where trungtam=1";
            try
            {
                return get_data(sql).Tables[0].Rows[0]["database"].ToString();
            }
            catch
            {
                return null;
            }
        }
        public string getDBLink(int i_cn)
        {
            sql = "select database from " + user + ".dmchinhanh where id=" + i_cn + "";
            try
            {
                return get_data(sql).Tables[0].Rows[0]["database"].ToString();
            }
            catch
            {
                return null;
            }
        }
        public bool upd_d_dutru_duyet(int d_lan, string d_mmyy, int d_userid, int d_nhom, string field, int d_idchinhanh, int d_done)
        {
            try
            {
                sql = "update " + user + ".d_dutrungay_duyet set done=" + d_done + "  where mmyy='" + d_mmyy + "' and lan=" + d_lan + " and nhom=" + d_nhom + " and " + field + "=" + d_idchinhanh;
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                int i_row = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (i_row == 0)
                {
                    sql = "insert into " + user + ".d_dutrungay_duyet(lan,mmyy,userid,nhom," + field + ",done) values (" + d_lan + ",'" + d_mmyy + "'," + d_userid + "," + d_nhom + "," + d_idchinhanh + "," + d_done + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.ExecuteNonQuery();
                }
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_dutrungay_duyet");
                return false;
            }
            finally
            {
                con.Close();
                con.Dispose();
                cmd.Dispose();
            }

        }
        public bool upd_d_dutru_duyet(int d_lan, string d_mmyy, int d_userid, int d_nhom, string field, int d_idchinhanh, int d_done, string dblinks)
        {
            try
            {
                sql = "update " + user + ".d_dutrungay_duyet@" + dblinks + " set done=" + d_done + "  where mmyy='" + d_mmyy + "' and lan=" + d_lan + " and nhom=" + d_nhom + " and " + field + "=" + d_idchinhanh;
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                int i_row = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (i_row == 0)
                {
                    sql = "insert into " + user + ".d_dutrungay_duyet@" + dblinks + "(lan,mmyy,userid,nhom," + field + ",done) values (" + d_lan + ",'" + d_mmyy + "'," + d_userid + "," + d_nhom + "," + d_idchinhanh + "," + d_done + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.ExecuteNonQuery();
                }
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_dutrungay_duyet");
                return false;
            }
            finally
            {
                con.Close();
                con.Dispose();
                cmd.Dispose();
            }

        }
        #endregion

        //Tu:03/07/2011 thêm vào d_phatthuoc
        public bool upd_d_phatthuoc(decimal d_id, int d_loai, int d_stt, int d_mabd, decimal d_sttt_phat, decimal d_soluong
            , string d_mabn, string d_ngayphat, int d_userid)
        {
            sql = "update " + user + ".d_phatthuoc set loai=:d_loai,mabd=:d_mabd,sttt_phat=:d_sttt_phat, ";
            sql += "soluong=:d_soluong,mabn=:d_mabn,ngayphat=to_date(:d_ngayphat,'dd/mm/yyyy'),userid=:d_userid ";
            sql += " where id=:d_id and stt=:d_stt";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_sttt_phat", NpgsqlDbType.Numeric).Value = d_sttt_phat;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                cmd.Parameters.Add("d_ngayphat", NpgsqlDbType.Varchar).Value = d_ngayphat;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_phatthuoc (id,loai,stt,mabd,sttt_phat,soluong,mabn,ngayphat,userid) ";
                    sql += "values (:d_id,:d_loai,:d_stt,:d_mabd,:d_sttt_phat,:d_soluong,:d_mabn,to_date(:d_ngayphat,'dd/mm/yyyy'),:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_sttt_phat", NpgsqlDbType.Numeric).Value = d_sttt_phat;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_mabn", NpgsqlDbType.Varchar).Value = d_mabn;
                    cmd.Parameters.Add("d_ngayphat", NpgsqlDbType.Varchar).Value = d_ngayphat;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_phatthuoc");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_d_duyetdutrukholl(decimal d_id, decimal d_phieu, string d_ngay, int d_userid)
        {
            sql = "update " + user + ".d_duyetdutrukholl set phieu=:d_phieu,ngay=to_date(:d_ngay,'dd/mm/yyyy')";
            sql += ",userid=:d_userid ";
            sql += " where id=:d_id ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar).Value = d_ngay;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_duyetdutrukholl (id,phieu,ngay,userid) ";
                    sql += "values (:d_id,:d_phieu,to_date(:d_ngay,'dd/mm/yyyy'),:d_userid)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar).Value = d_ngay;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_duyetdutrukholl");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_d_duyetdutrukhoct(decimal d_id, int d_stt, int d_mabd, decimal d_soluong, decimal d_sldutru)
        {
            sql = "update " + user + ".d_duyetdutrukhoct set mabd=:d_mabd,soluong=:d_soluong,sldutru=:d_sldutru";
            sql += " where id=:d_id and stt=:d_stt ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_sldutru", NpgsqlDbType.Numeric).Value = d_sldutru;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_duyetdutrukhoct (id,stt,mabd,soluong,sldutru) ";
                    sql += "values (:d_id,:d_stt,:d_mabd,:d_soluong,:d_sldutru)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_sldutru", NpgsqlDbType.Numeric).Value = d_sldutru;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_duyetdutrukhoct");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_d_theodoiduyetdutru(decimal d_id, decimal d_id_dutru, int d_makho, int d_id_chinhanh, int d_done)
        {
            sql = "update " + user + ".d_theodoiduyetdutru set id_dutru=:d_id_dutru,makho=:d_makho,id_chinhanh=:d_id_chinhanh,";
            sql += "done=:d_done where id=:d_id ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_id_dutru", NpgsqlDbType.Numeric).Value = d_id_dutru;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_id_chinhanh", NpgsqlDbType.Numeric).Value = d_id_chinhanh;
                cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_theodoiduyetdutru (id,id_dutru,makho,id_chinhanh,done) ";
                    sql += "values (:d_id,:d_id_dutru,:d_makho,:d_id_chinhanh,:d_done)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_id_dutru", NpgsqlDbType.Numeric).Value = d_id_dutru;
                    cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                    cmd.Parameters.Add("d_id_chinhanh", NpgsqlDbType.Numeric).Value = d_id_chinhanh;
                    cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_theodoiduyetdutru");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_d_kehoachdathang(decimal d_id, string d_ngay, decimal d_phieu, int d_userid, int d_mua, int d_manguon)
        {
            sql = "update " + user + ".d_kehoachdathang set ngay=to_date(:d_ngay,'dd/mm/yyyy'),phieu=:d_phieu";
            sql += ",userid=:d_userid,mua=:d_mua,manguon=:d_manguon where id=:d_id ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar).Value = d_ngay;
                cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.Parameters.Add("d_mua", NpgsqlDbType.Numeric).Value = d_mua;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_kehoachdathang (id,ngay,phieu,userid,mua,manguon) ";
                    sql += "values (:d_id,to_date(:d_ngay,'dd/mm/yyyy'),:d_phieu,:d_userid,:d_mua,:d_manguon)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar).Value = d_ngay;
                    cmd.Parameters.Add("d_phieu", NpgsqlDbType.Numeric).Value = d_phieu;
                    cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                    cmd.Parameters.Add("d_mua", NpgsqlDbType.Numeric).Value = d_mua;
                    cmd.Parameters.Add("d_manguon", NpgsqlDbType.Numeric).Value = d_manguon;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_kehoachdathang");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_d_kehoachdathangct(decimal d_id, int d_stt, int d_mabd, decimal d_soluong, decimal d_slthucte
            , decimal d_giamua, decimal d_vat)
        {
            sql = "update " + user + ".d_kehoachdathangct set mabd=:d_mabd,soluong=:d_soluong";
            sql += ",slthucte=:d_slthucte,giamua=:d_giamua,vat=:d_vat where id=:d_id and stt=:d_stt ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_slthucte", NpgsqlDbType.Numeric).Value = d_slthucte;
                cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_kehoachdathangct (id,stt,mabd,soluong,slthucte,giamua,vat) ";
                    sql += "values (:d_id,:d_stt,:d_mabd,:d_soluong,:d_slthucte,:d_giamua,:d_vat)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                    cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                    cmd.Parameters.Add("d_slthucte", NpgsqlDbType.Numeric).Value = d_slthucte;
                    cmd.Parameters.Add("d_giamua", NpgsqlDbType.Numeric).Value = d_giamua;
                    cmd.Parameters.Add("d_vat", NpgsqlDbType.Numeric).Value = d_vat;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_kehoachdathangct");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        public bool upd_d_kehoachdathangtheodoi(decimal d_id, decimal d_id_duyetdutrukho)
        {
            sql = "update " + user + ".d_kehoachdathangtheodoi set id_duyetdutrukho=:d_id_duyetdutrukho where id=:d_id ";
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_id_duyetdutrukho", NpgsqlDbType.Numeric).Value = d_id_duyetdutrukho;
                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".d_kehoachdathangtheodoi (id,id_duyetdutrukho) ";
                    sql += "values (:d_id,:d_id_duyetdutrukho)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_id_duyetdutrukho", NpgsqlDbType.Numeric).Value = d_id_duyetdutrukho;
                    irec = cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "d_kehoachdathangtheodoi");
                return false;
            }
            finally
            {
                con.Close(); con.Dispose();
            }
            return true;
        }
        //end Tu

        public string f_getten_chinhanh(int i_cn)
        {
            string s_tencn = "";
            sql = "select * from " + user + ".dmchinhanh where id>0 and id=" + i_cn;
            DataSet lds = get_data(sql);
            if (lds == null || lds.Tables.Count <= 0 || lds.Tables[0].Rows.Count <= 0)
                s_tencn = "";
            else s_tencn = lds.Tables[0].Rows[0]["ten"].ToString();
            return s_tencn;
        }
        //linh
        public void updrec_thuocbhytll(DataTable dt, decimal id, string ngay, string mabn, decimal maql, string hoten, string namsinh, string sothe, string chandoan,
            string maicd, string tenpk, string tenbs, string ghichu, string makp, string mabs, decimal songay, decimal ngaynghi, string ngaynghi_tungay, int songayhen)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["ngay"] = ngay;
                nrow["mabn"] = mabn;
                nrow["maql"] = maql;
                nrow["hoten"] = hoten;
                nrow["namsinh"] = namsinh;
                nrow["sothe"] = sothe;
                nrow["tenkp"] = tenpk;
                nrow["tenbs"] = tenbs;
                nrow["chandoan"] = chandoan;
                nrow["maicd"] = maicd;
                nrow["ghichu"] = ghichu;
                nrow["makp"] = makp;
                nrow["mabs"] = mabs;
                nrow["songay"] = songay;
                nrow["ngaynghi"] = ngaynghi;
                nrow["ngaynghi_tungay"] = ngaynghi_tungay;
                nrow["songayhen"] = songayhen;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["ngay"] = ngay;
                dr[0]["mabn"] = mabn;
                dr[0]["maql"] = maql;
                dr[0]["hoten"] = hoten;
                dr[0]["namsinh"] = namsinh;
                dr[0]["sothe"] = sothe;
                dr[0]["tenkp"] = tenpk;
                dr[0]["tenbs"] = tenbs;
                dr[0]["chandoan"] = chandoan;
                dr[0]["maicd"] = maicd;
                dr[0]["ghichu"] = ghichu;
                dr[0]["makp"] = makp;
                dr[0]["mabs"] = mabs;
                dr[0]["songay"] = songay;
                dr[0]["ngaynghi"] = ngaynghi;
                dr[0]["ngaynghi_tungay"] = ngaynghi_tungay;
                dr[0]["songayhen"] = songayhen;
            }
        }

        //linh them so toa
        public void updrec_thuocbhytll(DataTable dt, decimal id, string ngay, string mabn, decimal maql, string hoten, string namsinh, string sothe, string chandoan,
            string maicd, string tenpk, string tenbs, string ghichu, string makp, string mabs,
            decimal songay, decimal ngaynghi, string ngaynghi_tungay, int songayhen, decimal i_SoToa)
        {
            string exp = "id=" + id;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["id"] = id;
                nrow["ngay"] = ngay;
                nrow["mabn"] = mabn;
                nrow["maql"] = maql;
                nrow["hoten"] = hoten;
                nrow["namsinh"] = namsinh;
                nrow["sothe"] = sothe;
                nrow["tenkp"] = tenpk;
                nrow["tenbs"] = tenbs;
                nrow["chandoan"] = chandoan;
                nrow["maicd"] = maicd;
                nrow["ghichu"] = ghichu;
                nrow["makp"] = makp;
                nrow["mabs"] = mabs;
                nrow["songay"] = songay;
                nrow["ngaynghi"] = ngaynghi;
                nrow["ngaynghi_tungay"] = ngaynghi_tungay;
                nrow["songayhen"] = songayhen;
                nrow["sotoa"] = i_SoToa;
                dt.Rows.Add(nrow);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                dr[0]["ngay"] = ngay;
                dr[0]["mabn"] = mabn;
                dr[0]["maql"] = maql;
                dr[0]["hoten"] = hoten;
                dr[0]["namsinh"] = namsinh;
                dr[0]["sothe"] = sothe;
                dr[0]["tenkp"] = tenpk;
                dr[0]["tenbs"] = tenbs;
                dr[0]["chandoan"] = chandoan;
                dr[0]["maicd"] = maicd;
                dr[0]["ghichu"] = ghichu;
                dr[0]["makp"] = makp;
                dr[0]["mabs"] = mabs;
                dr[0]["songay"] = songay;
                dr[0]["ngaynghi"] = ngaynghi;
                dr[0]["ngaynghi_tungay"] = ngaynghi_tungay;
                dr[0]["songayhen"] = songayhen;
                dr[0]["sotoa"] = i_SoToa;
            }
        }

        #region Hien_190711
        public bool upd_dutrukholl(decimal d_id, int d_nhom, decimal d_sophieu, string d_ngay, string d_makho, int d_done, int d_userid)
        {
            bool ok = false;
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".upd_d_dutrukholl");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Numeric).Value = d_sophieu;
                //cmd.Parameters.Add("d_mmyy", NpgsqlDbType.Varchar).Value = d_mmyy;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar).Value = d_ngay;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Varchar).Value = d_makho;
                //cmd.Parameters.Add("d_idduyet", NpgsqlDbType.Numeric).Value = d_idduyet;
                cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_dutrukholl");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();
            }
        }

        public bool upd_dutrucsttll(decimal d_id, int d_nhom, string d_sophieu, string d_ngay, int d_makho, string d_nhomkp, int d_matutruc, int d_makp, int d_done, int d_userid)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".upd_d_dutrucsttll");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric, 22).Value = d_id;
                cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric, 2).Value = d_nhom;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Varchar, 12).Value = d_sophieu;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 10).Value = d_ngay;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric, 5).Value = d_makho;
                cmd.Parameters.Add("d_nhomkp", NpgsqlDbType.Varchar).Value = d_nhomkp;
                cmd.Parameters.Add("d_matutruc", NpgsqlDbType.Numeric, 7).Value = d_matutruc;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric, 7).Value = d_makp;
                cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric, 1).Value = d_done;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric, 7).Value = d_userid;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_dutrucsttll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();
            }
        }

        public bool upd_dutrukhoct(decimal d_id, int d_stt, int d_mabd, decimal d_slton, decimal d_xuat10, decimal d_xuat30, decimal d_slgoiy,
            decimal d_dutru, string d_donvi, string d_nhacc, string d_manguon, string d_lydo)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".upd_d_dutrukhoct");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_dmbd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slton", NpgsqlDbType.Numeric).Value = d_slton;
                cmd.Parameters.Add("d_xuat10", NpgsqlDbType.Numeric).Value = d_xuat10;
                cmd.Parameters.Add("d_xuat30", NpgsqlDbType.Numeric).Value = d_xuat30;
                cmd.Parameters.Add("d_slgoiy", NpgsqlDbType.Numeric).Value = d_slgoiy;
                cmd.Parameters.Add("d_dutru", NpgsqlDbType.Numeric).Value = d_dutru;
                cmd.Parameters.Add("d_donvi", NpgsqlDbType.Varchar).Value = d_donvi;
                cmd.Parameters.Add("d_nhacc", NpgsqlDbType.Varchar).Value = d_nhacc;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Varchar).Value = d_manguon;
                cmd.Parameters.Add("d_lydo", NpgsqlDbType.Varchar).Value = d_lydo;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_dutrukhoct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }

        public bool upd_dutrucsttct(decimal d_id, int d_stt, int d_mabd, decimal d_slton, decimal d_csduyet, decimal d_soluong, string d_donvi, string d_nhacc, string d_manguon, string d_lydo)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".upd_d_dutrucsttct");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_dmbd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_slton", NpgsqlDbType.Numeric).Value = d_slton;
                cmd.Parameters.Add("d_csduyet", NpgsqlDbType.Numeric).Value = d_csduyet;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_donvi", NpgsqlDbType.Varchar).Value = d_donvi;
                cmd.Parameters.Add("d_nhacc", NpgsqlDbType.Varchar).Value = d_nhacc;
                cmd.Parameters.Add("d_manguon", NpgsqlDbType.Varchar).Value = d_manguon;
                cmd.Parameters.Add("d_lydo", NpgsqlDbType.Varchar).Value = d_lydo;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_dutrukhoct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }
        /// <summary>
        /// phương thức xóa số lượng dự trù. d_dutrukholl, d_dutrukhoct;
        /// </summary>
        /// <param name="d_id"></param>
        /// <param name="d_sophieu"></param>
        public void del_d_dutrukho(decimal d_id, decimal d_sophieu)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".del_d_dutrukho");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Numeric).Value = d_sophieu;

                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "del_dutrukho");
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }
        public void del_d_dutrucstt(decimal d_id, decimal d_sophieu, string s_ngay)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".del_d_dutrucstt");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Numeric).Value = d_sophieu;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar).Value = s_ngay;

                cmd.ExecuteNonQuery();
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "del_dutrukho");
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }
        /// <summary>
        /// Lưu table d_đuyetutrukholl
        /// </summary>
        /// <param name="d_id"></param>
        /// <param name="d_sophieu"></param>
        /// <param name="d_ngay"></param>
        /// <param name="d_userid"></param>
        /// <returns></returns>
        public bool upd_duyetdutrukholl(decimal d_id, decimal d_sophieu, string d_ngay, int d_userid)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".upd_d_duyetdutrukholl");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Numeric).Value = d_sophieu;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar).Value = d_ngay;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_duyetdutrukholl");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }
        /// <summary>
        /// Lưu table d_đuyetutrucsttll
        /// </summary>
        /// <param name="d_id"></param>
        /// <param name="d_sophieu"></param>
        /// <param name="d_ngay"></param>
        /// <param name="d_userid"></param>
        /// <returns></returns>
        public bool upd_duyetdutrucsttll(decimal d_id, decimal d_sophieu, string d_ngay, int d_userid)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".upd_d_duyetdutrucsttll");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Numeric).Value = d_sophieu;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar).Value = d_ngay;
                cmd.Parameters.Add("d_userid", NpgsqlDbType.Numeric).Value = d_userid;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_duyetdutrucsttll");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }
        /// <summary>
        /// d_theodoiduyetdutru function
        /// </summary>
        /// <param name="d_id"></param>
        /// <param name="d_iddutru"></param>
        /// <param name="d_makho"></param>
        /// <param name="d_idchinhanh"></param>
        /// <param name="d_done"></param>
        /// <returns></returns>
        public bool upd_d_theodoiduyetdutru_cn(decimal d_id, decimal d_iddutru, int d_makho, int d_idchinhanh, int d_done)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".upd_d_theodoiduyetdutru");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_iddutru", NpgsqlDbType.Numeric).Value = d_iddutru;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_idchinhanh", NpgsqlDbType.Numeric).Value = d_idchinhanh;
                cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_theodoiduyetdutru");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }

        /// <summary>
        /// d_theodoiduyetdutrucstt function
        /// </summary>
        /// <param name="d_id"></param>
        /// <param name="d_iddutru"></param>
        /// <param name="d_makho"></param>
        /// <param name="d_idchinhanh"></param>
        /// <param name="d_done"></param>
        /// <returns></returns>
        public bool upd_d_theodoiduyetdutrucstt(decimal d_id, decimal d_iddutru, int d_makho, int d_makp, int d_done)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".upd_d_theodoiduyetdutrucstt");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_iddutru", NpgsqlDbType.Numeric).Value = d_iddutru;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Numeric).Value = d_makp;
                cmd.Parameters.Add("d_done", NpgsqlDbType.Numeric).Value = d_done;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_theodoiduyetdutrucstt");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }

        public bool upd_d_duyetdutrukhoct(decimal d_id, int d_stt, decimal d_mabd, decimal d_soluong, decimal d_sldutru)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".upd_d_duyetdutrukhoct");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_sldutru", NpgsqlDbType.Numeric).Value = d_sldutru;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_theodoiduyetdutru");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }
        public bool upd_d_duyetdutrucsttct(decimal d_id, int d_stt, decimal d_mabd, decimal d_soluong, decimal d_sldutru)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".upd_d_duyetdutrucsttct");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                cmd.Parameters.Add("d_mabd", NpgsqlDbType.Numeric).Value = d_mabd;
                cmd.Parameters.Add("d_soluong", NpgsqlDbType.Numeric).Value = d_soluong;
                cmd.Parameters.Add("d_sldutru", NpgsqlDbType.Numeric).Value = d_sldutru;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "d_duyetdutruccsttct");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }
        public bool huy_duyetdutrukho(decimal d_id, decimal d_iddutru, int d_makho, decimal d_sophieu)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".huy_duyetdutrukho");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_iddutru", NpgsqlDbType.Numeric).Value = d_iddutru;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Numeric).Value = d_sophieu;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "func_huyduyetdutrukho");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }
        public bool huy_duyetdutrucstt(decimal d_id, decimal d_iddutru, int d_makho, decimal d_sophieu, string d_makp)
        {
            try
            {

                if (con != null)
                {
                    con.Dispose();
                }
                con = new NpgsqlConnection(sConn);
                cmd = new NpgsqlCommand(userid + ".huy_duyetdutrucstt");
                con.Open();
                cmd.Connection = con;
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                cmd.Parameters.Add("d_iddutru", NpgsqlDbType.Numeric).Value = d_iddutru;
                cmd.Parameters.Add("d_makho", NpgsqlDbType.Numeric).Value = d_makho;
                cmd.Parameters.Add("d_sophieu", NpgsqlDbType.Numeric).Value = d_sophieu;
                cmd.Parameters.Add("d_makp", NpgsqlDbType.Varchar).Value = d_makp;
                cmd.ExecuteNonQuery();
                return true;
            }
            catch (NpgsqlException er)
            {
                upd_error(er.Message, sComputer, "func_huyduyetdutrucstt");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close();
                con.Dispose();

            }
        }
        public int bPhieudachuyen(decimal d_id, decimal d_sophieu)
        {
            try
            {
                return int.Parse(get_data("select done from " + userid + ".d_dutrukholl where id=" + d_id + " and sophieu=" + d_sophieu).Tables[0].Rows[0]["done"].ToString());
            }
            catch
            {
                return 0;
            }
        }
        public int bPhieudachuyencstt(decimal d_id, decimal d_sophieu)
        {
            try
            {
                return int.Parse(get_data("select done from " + userid + ".d_dutrucsttll where id=" + d_id + " and sophieu=" + d_sophieu).Tables[0].Rows[0]["done"].ToString());
            }
            catch
            {
                return 0;
            }
        }
        public string TenChiNhanhHienTai
        {
            get
            {
                try
                {
                    sql = "select ten from " + userid + ".dmchinhanh where id=" + i_Chinhanh_hientai;
                    return get_data(sql).Tables[0].Rows[0]["ten"].ToString();
                }
                catch
                {
                    return "Không xác định";
                }
            }
        }
        #endregion
        #region Hien lay ton kho theo ngay
        /// <summary>
        /// thực hiện lấy số lượng nhập tính đến ngày được truyền vào. 
        /// </summary>
        /// <param name="dset">dữ liệu sẽ được thay đổi trực tiếp của biến truyền vào(ref)</param>
        /// <param name="dtphanloai"> báo cáo theo loại </param>
        /// <param name="dtdmkho"></param>
        /// <param name="d_mmyy"></param>
        /// <param name="s_tungay"></param>
        /// <param name="i_nhom"></param>
        /// <param name="_bGiaban"></param>
        /// <param name="bGiabandot"></param>
        /// <param name="bGiachuaVAT"></param>
        /// <param name="bNhacc"></param>
        /// <param name="s_kho"></param>
        /// <param name="s_manhom"></param>
        /// <param name="s_maduocbv"></param>
        /// <param name="i_manguon"></param>
        /// <param name="s_khott"></param>
        public void get_nhap_denngay(ref DataSet dset, DataTable dtphanloai, DataTable dtdmkho, string d_mmyy, string s_tungay, int i_nhom, bool _bGiaban, bool bGiabandot, bool bGiachuaVAT, bool bNhacc,
            string s_kho, string s_manhom, string s_maduocbv, int i_manguon, string s_khott)
        {
            int i_dongiale = d_dongia_le(i_nhom);
            string asql = "";
            string xxx = user + d_mmyy;

            #region nhap moi + tai nhap
            sql = "select ";
            //if (i_tt == 1) sql += " a.makho,";
            sql += " a.makho,";
            if (_bGiaban)
            {
                if (bGiabandot) sql += "b.giaban,";
                else sql += "c.giaban,";
            }
            else sql += "0 as giaban,";
            if (bGiachuaVAT)
            {
                sql += "0 as loai,b.mabd,trunc(b.dongia," + i_dongiale + ") as dongia,a.manguon,";
                sql += "sum(b.soluong) as soluong,sum(b.soluong*b.dongia+b.cuocvc+b.chaythu) as sotien ";
            }
            else
            {
                sql += "0 as loai,b.mabd,trunc(b.giamua," + i_dongiale + ") as dongia,a.manguon,";
                sql += "sum(b.soluong) as soluong,sum(b.sotien+b.sotien*b.vat/100+b.cuocvc+b.chaythu) as sotien ";
            }
            if (bNhacc) sql += ", a.madv as manhacc, ncc.ten as tennhacc ";
            else sql += ", 0 as manhacc, null as tennhacc ";
            sql += ",b.vat ";
            //
            sql += "from " + xxx + ".d_nhapll a," + xxx + ".d_nhapct b," + user + ".d_dmbd c ";
            if (bNhacc) sql += ", " + user + ".d_dmnx ncc";
            sql += " where a.id=b.id and b.mabd=c.id and a.nhom=" + i_nhom + "  and b.soluong>0";
            sql += " and to_date(to_char(a.ngaysp,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy')";
            if (s_kho != "") sql += " and a.makho in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
            if (s_manhom != "") sql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
            if (s_maduocbv != "") sql += " and c.nhombo in (" + s_maduocbv.Trim().Trim(',') + ")";
            if (i_manguon != -1) sql += " and a.manguon=" + i_manguon;
            sql += " group by ";
            sql += "a.makho,";
            if (_bGiaban)
            {
                if (bGiabandot) sql += "b.giaban,";
                else sql += "c.giaban,";
            }
            if (bGiachuaVAT)
            {
                sql += "b.mabd,trunc(b.dongia," + i_dongiale + "),a.manguon";
            }
            else
            {
                sql += "b.mabd,trunc(b.giamua," + i_dongiale + "),a.manguon";
            }
            if (bNhacc) sql += ", a.madv, ncc.ten";
            sql += ", b.vat ";
            #endregion nhap moi + tai nhap

            if (s_khott == "")
            {
                #region khong la kho trung tam

                #region lay so lieu nhap do chuyen kho
                sql += " union all select ";
                sql += "a.khon as makho,";
                if (_bGiaban)
                {
                    if (bGiabandot) sql += "b.giaban,";
                    else sql += "c.giaban,";
                }
                else sql += "0 as giaban,";
                if (bGiachuaVAT)
                {
                    sql += "0 as loai,b.mabd,trunc(d.gianovat," + i_dongiale + ") as dongia, d.manguon,";
                    sql += "sum(b.soluong) as soluong,sum(b.soluong*d.gianovat) as sotien ";
                }
                else
                {
                    sql += "0 as loai,b.mabd,trunc(d.giamua," + i_dongiale + ") as dongia, d.manguon,";
                    sql += "sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien ";
                }
                if (bNhacc) sql += ", d.nhomcc as manhacc, ncc.ten as tennhacc ";
                else sql += ", 0 as manhacc, null as tennhacc ";
                sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end as vat ";
                //
                sql += "from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b, " + user + ".d_dmbd c," + xxx + ".d_theodoi d ";
                if (bNhacc) sql += ", " + user + ".d_dmnx ncc";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=d.id and a.nhom=" + i_nhom + " and a.loai in ('CK') and b.soluong>0";
                sql += " and to_date(to_char(a.ngay,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy')";
                if (bNhacc) sql += " and d.nhomcc=ncc.id ";
                if (s_kho != "") sql += " and a.khon in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
                if (s_kho != "") sql += " and a.khox not in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
                if (s_manhom != "") sql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
                if (s_maduocbv != "") sql += " and c.nhombo in (" + s_maduocbv.Trim().Trim(',') + ")";
                if (i_manguon != -1) sql += " and d.manguon=" + i_manguon;

                sql += " group by ";
                sql += "a.khon,";
                if (_bGiaban)
                {
                    if (bGiabandot) sql += "b.giaban,";
                    else sql += "c.giaban,";
                }
                if (bGiachuaVAT)
                {
                    sql += "b.mabd,trunc(d.gianovat," + i_dongiale + "),d.manguon ";
                }
                else
                {
                    sql += "b.mabd,trunc(d.giamua," + i_dongiale + "),d.manguon ";
                }
                if (bNhacc) sql += ", d.nhomcc, ncc.ten";
                sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end ";
                #endregion lay so lieu nhap do chuyen kho

                #region lay so lieu thu hoi co so tu truc + hoan tra tu truc
                asql = "  select ";
                asql += "a.khon as makho,";
                if (_bGiaban)
                {
                    if (bGiabandot) asql += "b.giaban,";
                    else asql += "c.giaban,";
                }
                else asql += "0 as giaban,";
                if (bGiachuaVAT)
                {
                    asql += "0 as loai,b.mabd,trunc(d.gianovat," + i_dongiale + ") as dongia, d.manguon,";
                    asql += "sum(b.soluong) as soluong,sum(b.soluong*d.gianovat) as sotien ";
                }
                else
                {
                    asql += "0 as loai,b.mabd,trunc(d.giamua," + i_dongiale + ") as dongia, d.manguon,";
                    asql += "sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien ";
                }
                if (bNhacc) asql += ", d.nhomcc as manhacc, ncc.ten as tennhacc ";
                else asql += ", 0 as manhacc, null as tennhacc ";
                asql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end as vat ";
                asql += "from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b, " + user + ".d_dmbd c," + xxx + ".d_theodoi d ";
                if (bNhacc) asql += ", " + user + ".d_dmnx ncc";
                asql += " where a.id=b.id and b.mabd=c.id and b.sttt=d.id and a.nhom=" + i_nhom + " and a.loai in ('HT','TH') and b.soluong>0";
                if (bNhacc) asql += " and d.nhomcc=ncc.id ";
                asql += " and to_date(to_char(a.ngay,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy')";
                if (s_kho != "") asql += " and a.khon in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
                if (s_manhom != "") asql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
                if (s_maduocbv != "") asql += " and c.nhombo in (" + s_maduocbv.Trim().Trim(',') + ")";
                if (i_manguon != -1) asql += " and d.manguon=" + i_manguon;

                asql += " group by ";
                asql += "a.khon,";
                if (_bGiaban)
                {
                    if (bGiabandot) asql += "b.giaban,";
                    else asql += "c.giaban,";
                }
                if (bGiachuaVAT)
                {
                    asql += "b.mabd,trunc(d.gianovat," + i_dongiale + "),d.manguon ";
                }
                else
                {
                    asql += "b.mabd,trunc(d.giamua," + i_dongiale + "),d.manguon ";
                }
                if (bNhacc) asql += ", d.nhomcc, ncc.ten";
                asql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end ";
                f_Get_Hoantra_Thuhoi_CSTT(ref dset, dtphanloai, dtdmkho, get_data(asql), "tondau", "sttondau", i_manguon);
                #endregion lay so lieu thu hoi co so tu truc + hoan tra tu truc
                //}
                #endregion  khong la kho trung tam
            }
            else
            {
                #region kho trung tam

                #region lay so lieu do nhap chuyen kho
                sql += " union all select ";
                sql += "a.khon as makho,";
                if (_bGiaban)
                {
                    if (bGiabandot) sql += "b.giaban,";
                    else sql += "c.giaban,";
                }
                else sql += "0 as giaban,";
                if (bGiachuaVAT)
                {
                    sql += "1 as loai,b.mabd,trunc(d.gianovat," + i_dongiale + ") as dongia, d.manguon,";
                    sql += "sum(b.soluong) as soluong,sum(b.soluong*d.gianovat) as sotien ";
                }
                else
                {
                    sql += "1 as loai,b.mabd,trunc(d.giamua," + i_dongiale + ") as dongia, d.manguon,";
                    sql += "sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien ";
                }
                if (bNhacc) sql += ", d.nhomcc as manhacc, ncc.ten as tennhacc ";
                else sql += ", 0 as manhacc, null as tennhacc ";
                sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end as vat ";

                sql += "from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b, " + user + ".d_dmbd c," + xxx + ".d_theodoi d ";
                if (bNhacc) sql += ", " + user + ".d_dmnx ncc";
                sql += " where a.id=b.id and b.mabd=c.id and b.sttt=d.id and a.nhom=" + i_nhom + " and a.loai in ('CK') and b.soluong>0";
                sql += " and to_date(to_char(a.ngay,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy')";
                if (bNhacc) sql += " and d.nhomcc=ncc.id ";
                if (s_kho != "") sql += " and a.khon in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
                if (s_kho != "") sql += " and a.khox not in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
                if (s_manhom != "") sql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
                if (s_maduocbv != "") sql += " and c.nhombo in (" + s_maduocbv.Trim().Trim(',') + ")";
                if (i_manguon != -1) sql += " and d.manguon=" + i_manguon;
                //sql += " and a.khox not in (" + s_khott.Substring(0, s_khott.Length - 1) + ")";
                sql += " group by ";
                sql += "a.khon,";
                if (_bGiaban)
                {
                    if (bGiabandot) sql += "b.giaban,";
                    else sql += "c.giaban,";
                }
                if (bGiachuaVAT)
                {
                    sql += "b.mabd,trunc(d.gianovat," + i_dongiale + "),d.manguon ";
                }
                else
                {
                    sql += "b.mabd,trunc(d.giamua," + i_dongiale + "),d.manguon ";
                }
                if (bNhacc) sql += ", d.nhomcc, ncc.ten";
                sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end";
                #endregion lay so lieu do nhap chuyen kho

                #region lay so lieu thu hoi co so tu truc + hoan tra tu truc
                asql = "  select ";
                asql += "a.khon as makho,";
                if (_bGiaban)
                {
                    if (bGiabandot) asql += "b.giaban,";
                    else asql += "c.giaban,";
                }
                else asql += "0 as giaban,";
                if (bNhacc)
                {
                    asql += "1 as loai,b.mabd,trunc(d.gianovat," + i_dongiale + ") as dongia, d.manguon,";
                    asql += "sum(b.soluong) as soluong,sum(b.soluong*d.gianovat) as sotien ";
                }
                else
                {
                    asql += "1 as loai,b.mabd,trunc(d.giamua," + i_dongiale + ") as dongia, d.manguon,";
                    asql += "sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien ";
                }
                if (bNhacc) asql += ", d.nhomcc as manhacc, ncc.ten as tennhacc ";
                else asql += ", 0 as manhacc, null as tennhacc ";
                asql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end as vat ";
                asql += "from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b, " + user + ".d_dmbd c," + xxx + ".d_theodoi d ";
                if (bNhacc) asql += ", " + user + ".d_dmnx ncc";
                asql += " where a.id=b.id and b.mabd=c.id and b.sttt=d.id and a.nhom=" + i_nhom + " and a.loai in ('TH','HT') and b.soluong>0";
                if (bNhacc) asql += " and d.nhomcc=ncc.id ";
                if (s_kho != "") asql += " and a.khon in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
                if (s_manhom != "") asql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
                if (s_maduocbv != "") asql += " and c.nhombo in (" + s_maduocbv.Trim().Trim(',') + ")";
                if (i_manguon != -1) asql += " and d.manguon=" + i_manguon;
                asql += " and to_date(to_char(a.ngay,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy') ";

                asql += " group by ";
                asql += "a.khon,";
                if (_bGiaban)
                {
                    if (bGiabandot) asql += "b.giaban,";
                    else asql += "c.giaban,";
                }
                if (bGiachuaVAT)
                {
                    asql += "b.mabd,trunc(d.gianovat," + i_dongiale + "),d.manguon ";
                }
                else
                {
                    asql += "b.mabd,trunc(d.giamua," + i_dongiale + "),d.manguon ";
                }
                if (bNhacc) asql += ", d.nhomcc, ncc.ten ";
                asql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end";

                f_Get_Hoantra_Thuhoi_CSTT(ref dset, dtphanloai, dtdmkho, get_data(asql), "tondau", "sttondau", i_manguon);

                #endregion lay so lieu thu hoi co so tu truc + hoan tra tu truc
                #endregion  kho trung tam
            }

            #region insert item
            //
            string f1 = "tondau", f2 = "sttondau";
            foreach (DataRow r in get_data(sql).Tables[0].Rows)
            {
                DataRow r3 = getrowbyid(dtphanloai, "id=" + int.Parse(r["mabd"].ToString()));
                if (r3 != null)
                {
                    string exp = "mabd=" + int.Parse(r["mabd"].ToString());
                    exp += " and dongia=" + decimal.Parse(r["dongia"].ToString());
                    if (i_manguon != -1) exp += " and manguon=" + i_manguon;
                    // if (i_tt == 1) exp += " and idnn=" + int.Parse(r["makho"].ToString());
                    DataRow r1 = getrowbyid(ds.Tables[0], exp);
                    if (r1 == null)
                    {
                        DataRow r2 = dset.Tables[0].NewRow();
                        r2["manhom"] = r3["manhom"].ToString();
                        r2["tennhom"] = r3["tennhom"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r3["ma"].ToString();
                        r2["ten"] = r3["ten"].ToString().Trim() + " " + r3["hamluong"].ToString();
                        r2["tenhc"] = r3["tenhc"].ToString();
                        // else r2["tenhc"] = "";
                        r2["manhacc"] = r["manhacc"].ToString();
                        r2["tennhacc"] = r["tennhacc"].ToString();
                        r2["noingoai"] = "";
                        r2["dang"] = r3["dang"].ToString();
                        r2["tondau"] = 0;
                        r2["sttondau"] = 0;
                        r2["slxuat"] = 0;
                        r2["stxuat"] = 0;
                        r2["sl_tra"] = 0;
                        r2["st_tra"] = 0;
                        r2["dongia"] = r["dongia"].ToString();
                        r2["giaban"] = r["giaban"].ToString();
                        r2["sttt"] = 0;
                        r2["manguon"] = r["manguon"].ToString();
                        r2["stt"] = (r3["tt"].ToString().Trim() == "") ? "0" : r3["tt"].ToString();
                        //if (i_tt == 0)
                        //{
                        //    r2["idnn"] = r3["idnn"].ToString();
                        //    r2["noingoai"] = r3["noingoai"].ToString();
                        //}
                        //else if (i_tt == 1)
                        {
                            DataRow r4 = getrowbyid(dtdmkho, "id=" + int.Parse(r["makho"].ToString()));
                            if (r4 != null)
                            {
                                r2["idnn"] = r["makho"].ToString();
                                r2["noingoai"] = r4["ten"].ToString();
                            }
                        }
                        r2["slxuat_ck"] = "0";
                        r2["stxuat_ck"] = "0";
                        r2["slnhap_ck"] = "0";
                        r2["stnhap_ck"] = "0";
                        r2["slnhap"] = "0";
                        r2["stnhap"] = "0";
                        r2["sl_th"] = "0";
                        r2["st_th"] = "0";
                        r2[f1] = r["soluong"].ToString();
                        r2[f2] = r["sotien"].ToString();
                        r2["vat"] = r["vat"].ToString();
                        dset.Tables[0].Rows.Add(r2);
                    }
                    else
                    {
                        DataRow[] dr = dset.Tables[0].Select(exp);
                        dr[0][f1] = decimal.Parse(dr[0][f1].ToString()) + decimal.Parse(r["soluong"].ToString());
                        dr[0][f2] = decimal.Parse(dr[0][f2].ToString()) + decimal.Parse(r["sotien"].ToString());
                    }
                }
            }
            dset.AcceptChanges();
            #endregion insert item
        }
        private void f_Get_Hoantra_Thuhoi_CSTT(ref DataSet ds1, DataTable dt, DataTable dtdmkho, DataSet ads, string field_sl, string field_st, int i_manguon)
        {
            foreach (DataRow r in ads.Tables[0].Rows)
            {

                string exp = "mabd=" + int.Parse(r["mabd"].ToString());
                exp += " and dongia=" + decimal.Parse(r["dongia"].ToString());
                if (i_manguon != -1) exp += " and manguon=" + i_manguon;
                exp += " and idnn=" + int.Parse(r["makho"].ToString());
                DataRow r1 = getrowbyid(ds1.Tables[0], exp);
                if (r1 == null)
                {
                    DataRow r3 = getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
                    if (r3 != null)
                    {
                        DataRow r2 = ds.Tables[0].NewRow();
                        r2["manhom"] = r3["manhom"].ToString();
                        r2["tennhom"] = r3["tennhom"].ToString();
                        r2["mabd"] = r["mabd"].ToString();
                        r2["ma"] = r3["ma"].ToString();
                        r2["ten"] = r3["ten"].ToString().Trim() + " " + r3["hamluong"].ToString();
                        r2["tenhc"] = r3["tenhc"].ToString();
                        // else r2["tenhc"] = "";
                        r2["manhacc"] = r["manhacc"].ToString();
                        r2["tennhacc"] = r["tennhacc"].ToString();
                        r2["noingoai"] = "";
                        r2["dang"] = r3["dang"].ToString();
                        r2["tondau"] = 0;
                        r2["sttondau"] = 0;
                        r2["slnhap"] = 0;
                        r2["stnhap"] = 0;
                        r2["slxuat"] = 0;
                        r2["stxuat"] = 0;
                        r2["sl_tra"] = 0;
                        r2["st_tra"] = 0;

                        r2[field_sl] = decimal.Parse(r["soluong"].ToString());
                        r2[field_st] = decimal.Parse(r["sotien"].ToString());

                        r2["dongia"] = r["dongia"].ToString();
                        r2["giaban"] = r["giaban"].ToString();
                        r2["sttt"] = 0;
                        r2["manguon"] = r["manguon"].ToString();
                        r2["stt"] = (r3["tt"].ToString().Trim() == "") ? "0" : r3["tt"].ToString();
                        //if (i_tt == 0)
                        //{
                        //    r2["idnn"] = r3["idnn"].ToString();
                        //    r2["noingoai"] = r3["noingoai"].ToString();
                        //}
                        //else if (i_tt == 1)
                        //{
                        DataRow r4 = getrowbyid(dtdmkho, "id=" + int.Parse(r["makho"].ToString()));
                        if (r4 != null)
                        {
                            r2["idnn"] = r["makho"].ToString();
                            r2["noingoai"] = r4["ten"].ToString();
                        }
                        //}
                        r2["slxuat_ck"] = "0";
                        r2["stxuat_ck"] = "0";
                        r2["slnhap_ck"] = "0";
                        r2["stnhap_ck"] = "0";
                        r2["vat"] = r["vat"].ToString();
                        ds1.Tables[0].Rows.Add(r2);
                    }
                }
                else
                {
                    DataRow[] dr = ds1.Tables[0].Select(exp);
                    if (dr != null)
                    {

                        dr[0][field_sl] = decimal.Parse(dr[0][field_sl].ToString()) + decimal.Parse(r["soluong"].ToString());
                        dr[0][field_st] = decimal.Parse(dr[0][field_st].ToString()) + decimal.Parse(r["sotien"].ToString());

                    }
                }
            }
            ds1.AcceptChanges();
        }
        // xuat
        //private void get_xuat_denngay(string d_mmyy, string s_tungay,bool bgiaban,bool bgiabandot,bool bGiachuaVAT,bool bNhacc,
        //    string s_kho,string s_manhom,string s_maduocbv,int i_manguon,int i_tt)
        //{
        //   string xxx = user + d_mmyy;
        //   int i_dongiale = d_dongia_le(i_nhom);
        //    sql = "select ";
        //    //if (i_tt == 1) sql += "b.makho,";
        //    sql += "b.makho,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    else sql += "0 as giaban,";
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + ") as dongia, d.manguon,";
        //        sql += "sum(b.soluong) as soluong,sum(b.soluong*d.gianovat) as sotien ";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + ") as dongia, d.manguon,";
        //        sql += "sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien ";
        //    }
        //    //
        //    if (bNhacc) sql += ", d.nhomcc as manhacc, ncc.ten as tennhacc ";
        //    else sql += ", 0 as manhacc, null as tennhacc ";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end as vat ";
        //    //
        //    sql += "from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucxuat b," + user + ".d_dmbd c," + xxx + ".d_theodoi d ";
        //    if (bNhacc) sql += ", " + user + ".d_dmnx ncc";
        //    sql += " where a.id=b.id and b.mabd=c.id and b.sttt=d.id and a.loai in(1,4) and a.nhom=" + i_nhom;
        //    if (bNhacc) sql += " and d.nhomcc=ncc.id ";
        //    sql += " and to_date(to_char(a.ngay,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy') ";
        //    if (s_kho != "") sql += " and b.makho in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
        //    if (s_manhom != "") sql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
        //    if (s_maduocbv != "") sql += " and c.nhombo in (" + s_maduocbv.Trim().Trim(',') + ")";
        //    if (i_manguon != -1) sql += " and d.manguon=" + i_manguon;
        //    sql += " and b.soluong>0";
        //    // 
        //    sql += " group by ";
        //    if (i_tt == 1) sql += " b.makho,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + "),d.manguon";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + "),d.manguon";
        //    }
        //    if (bNhacc) sql += ", d.nhomcc, ncc.ten";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end ";
        //    //xu ly tren d_thucbucstt: bu tu truc
        //    sql += " union all select ";
        //    if (i_tt == 1) sql += "b.makho,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    else sql += "0 as giaban,";
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + ") as dongia, d.manguon,";
        //        sql += "sum(b.soluong) as soluong,sum(b.soluong*d.gianovat) as sotien ";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + ") as dongia, d.manguon,";
        //        sql += "sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien ";
        //    }
        //    //
        //    //
        //    if (bNhacc) sql += ", d.nhomcc as manhacc, ncc.ten as tennhacc ";
        //    else sql += ", 0 as manhacc, null as tennhacc ";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end as vat ";
        //    //
        //    sql += "from " + xxx + ".d_xuatsdll a," + xxx + ".d_thucbucstt b," + user + ".d_dmbd c," + xxx + ".d_theodoi d ";
        //    if (bNhacc) sql += ", " + user + ".d_dmnx ncc";
        //    sql += " where a.id=b.id and b.mabd=c.id and b.sttt=d.id and a.loai in(2) and a.nhom=" + i_nhom;
        //    if (bNhacc) sql += " and d.nhomcc=ncc.id ";
        //    sql += " and to_date(to_char(a.ngay,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy') ";
        //    if (s_kho != "") sql += " and b.makho in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
        //    if (s_manhom != "") sql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
        //    if (s_maduocbv != "") sql += " and c.nhombo in (" + s_maduocbv.Trim().Trim(',') + ")";
        //    if (i_manguon != -1) sql += " and d.manguon=" + i_manguon;
        //    sql += " and b.soluong>0";
        //    // 
        //    sql += " group by ";
        //    if (i_tt == 1) sql += " b.makho,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + "),d.manguon";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + "),d.manguon";
        //    }
        //    if (bNhacc) sql += ", d.nhomcc, ncc.ten";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end ";
        //    //xuat CK, BS, XK
        //    sql += " union all select ";
        //    if (i_tt == 1) sql += "a.khox makho,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    else sql += "0 as giaban,";
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + ") as dongia, d.manguon,";
        //        sql += "sum(b.soluong) as soluong,sum(b.soluong*d.gianovat) as sotien ";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + ") as dongia, d.manguon,";
        //        sql += "sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien ";
        //    }
        //    //
        //    //
        //    if (bNhacc) sql += ", d.nhomcc as manhacc, ncc.ten as tennhacc ";
        //    else sql += ", 0 as manhacc, null as tennhacc ";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end as vat ";
        //    //
        //    sql += " from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b," + user + ".d_dmbd c," + xxx + ".d_theodoi d ";
        //    if (bNhacc) sql += ", " + user + ".d_dmnx ncc";
        //    sql += " where a.id=b.id and b.mabd=c.id and b.sttt=d.id and a.nhom=" + i_nhom;
        //    if (bNhacc) sql += " and d.nhomcc=ncc.id ";
        //    sql += " and to_date(to_char(a.ngay,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy') ";
        //    sql += " and a.loai in ('BS','XK')";
        //    if (s_kho != "") sql += " and a.khox in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
        //    if (s_manhom != "") sql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
        //    if (i_manguon != -1) sql += " and d.manguon=" + i_manguon;
        //    sql += " and b.soluong>0";

        //    sql += " group by ";
        //    if (i_tt == 1) sql += " a.khox,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + "),d.manguon";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + "),d.manguon";
        //    }
        //    if (bNhacc) sql += ", d.nhomcc, ncc.ten";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end ";
        //    //BHYT
        //    sql += " union all select ";
        //    if (i_tt == 1) sql += "b.makho,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    else sql += "0 as giaban,";
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + ") as dongia, d.manguon,";
        //        sql += "sum(b.soluong) as soluong,sum(b.soluong*d.gianovat) as sotien ";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + ") as dongia, d.manguon,";
        //        sql += "sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien ";
        //    }
        //    if (bNhacc) sql += ", d.nhomcc as manhacc, ncc.ten as tennhacc ";
        //    else sql += ", 0 as manhacc, null as tennhacc ";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end as vat ";
        //    sql += "from " + xxx + ".bhytkb a," + xxx + ".bhytthuoc b," + user + ".d_dmbd c," + xxx + ".d_theodoi d ";
        //    if (bNhacc) sql += ", " + user + ".d_dmnx ncc";
        //    sql += " where a.id=b.id and b.mabd=c.id and b.sttt=d.id and a.nhom=" + i_nhom;
        //    sql += " and to_date(to_char(a.ngay,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy')";
        //    if (bNhacc) sql += " and d.nhomcc=ncc.id ";
        //    if (s_kho != "") sql += " and b.makho in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
        //    if (s_manhom != "") sql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
        //    if (s_maduocbv != "") sql += " and c.nhombo in (" + s_maduocbv.Trim().Trim(',') + ")";
        //    if (i_manguon != -1) sql += " and d.manguon=" + i_manguon;
        //    sql += " and b.soluong>0";

        //    sql += " group by ";
        //    if (i_tt == 1) sql += " b.makho,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + "),d.manguon";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + "),d.manguon";
        //    }
        //    if (bNhacc) sql += ", d.nhomcc, ncc.ten";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end";
        //    //ngoaitru
        //    //BHYT
        //    sql += " union all select ";
        //    if (i_tt == 1) sql += "b.makho,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    else sql += "0 as giaban,";
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + ") as dongia, d.manguon,";
        //        sql += "sum(b.soluong) as soluong,sum(b.soluong*d.gianovat) as sotien ";
        //    }
        //    // 
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + ") as dongia, d.manguon,";
        //        sql += "sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien ";
        //    }
        //    if (bNhacc) sql += ", d.nhomcc as manhacc, ncc.ten as tennhacc ";
        //    else sql += ", 0 as manhacc, null as tennhacc ";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end as vat ";
        //    sql += "from " + xxx + ".d_ngtrull a," + xxx + ".d_ngtruct b," + user + ".d_dmbd c," + xxx + ".d_theodoi d ";
        //    if (bNhacc) sql += ", " + user + ".d_dmnx ncc";
        //    sql += " where a.id=b.id and b.mabd=c.id and b.sttt=d.id and a.nhom=" + i_nhom;
        //    sql += " and to_date(to_char(a.ngay,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy') ";
        //    if (bNhacc) sql += " and d.nhomcc=ncc.id ";
        //    if (s_kho != "") sql += " and b.makho in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
        //    if (s_manhom != "") sql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
        //    if (s_maduocbv != "") sql += " and c.nhombo in (" + s_maduocbv.Trim().Trim(',') + ")";
        //    if (i_manguon != -1) sql += " and d.manguon=" + i_manguon;
        //    sql += " and b.soluong>0";
        //    // 

        //    sql += " group by ";
        //    if (i_tt == 1) sql += " b.makho,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + "),d.manguon";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + "),d.manguon";
        //    }
        //    if (bNhacc) sql += ", d.nhomcc, ncc.ten";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end ";
        //    foreach (DataRow r in d.get_data(sql).Tables[0].Rows)
        //    {
        //        exp = "mabd=" + int.Parse(r["mabd"].ToString());
        //        exp += " and dongia=" + decimal.Parse(r["dongia"].ToString());
        //        if (i_manguon != -1) exp += " and manguon=" + i_manguon;
        //        if (i_tt == 1) exp += " and idnn=" + int.Parse(r["makho"].ToString());
        //        r1 = d.getrowbyid(ds.Tables[0], exp);
        //        if (r1 == null)
        //        {
        //            r3 = d.getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
        //            if (r3 != null)
        //            {
        //                r2 = ds.Tables[0].NewRow();
        //                r2["manhom"] = r3["manhom"].ToString();
        //                r2["tennhom"] = r3["tennhom"].ToString();
        //                r2["mabd"] = r["mabd"].ToString();
        //                r2["ma"] = r3["ma"].ToString();
        //                r2["ten"] = r3["ten"].ToString().Trim() + " " + r3["hamluong"].ToString();
        //                if (i_tt == 0) r2["tenhc"] = r3["tenhc"].ToString();
        //                else r2["tenhc"] = "";
        //                r2["manhacc"] = r["manhacc"].ToString();
        //                r2["tennhacc"] = r["tennhacc"].ToString();
        //                r2["noingoai"] = "";
        //                r2["dang"] = r3["dang"].ToString();
        //                r2["tondau"] = Convert.ToDecimal(r["soluong"].ToString()) * (-1);
        //                r2["sttondau"] = Convert.ToDecimal(r["sotien"].ToString()) * (-1);
        //                r2["slnhap"] = 0;
        //                r2["stnhap"] = 0;
        //                r2["slnhap_ck"] = 0;
        //                r2["stnhap_ck"] = 0;
        //                r2["slxuat_ck"] = 0;
        //                r2["stxuat_ck"] = 0;
        //                r2["sl_tra"] = 0;
        //                r2["st_tra"] = 0;
        //                r2["slxuat"] = 0;
        //                r2["stxuat"] = 0;
        //                r2["sl_th"] = 0;
        //                r2["st_th"] = 0;
        //                r2["slxuat"] = 0;
        //                r2["stxuat"] = 0;
        //                r2["dongia"] = r["dongia"].ToString();
        //                r2["giaban"] = r["giaban"].ToString();
        //                r2["sttt"] = 0;
        //                r2["manguon"] = r["manguon"].ToString();
        //                r2["stt"] = (r3["tt"].ToString().Trim() == "") ? "0" : r3["tt"].ToString();
        //                r2["noingoai"] = "";
        //                if (i_tt == 0)
        //                {
        //                    r2["idnn"] = r3["idnn"].ToString();
        //                    r2["noingoai"] = r3["noingoai"].ToString();
        //                }
        //                else if (i_tt == 1)
        //                {
        //                    r4 = d.getrowbyid(dtdmkho, "id=" + int.Parse(r["makho"].ToString()));
        //                    if (r4 != null)
        //                    {
        //                        r2["idnn"] = r["makho"].ToString();
        //                        r2["noingoai"] = r4["ten"].ToString();
        //                    }
        //                }
        //                r2["vat"] = r["vat"].ToString();
        //                ds.Tables[0].Rows.Add(r2);
        //            }
        //        }
        //        else
        //        {
        //            DataRow[] dr = ds.Tables[0].Select(exp);
        //            dr[0]["tondau"] = decimal.Parse(dr[0]["tondau"].ToString()) - decimal.Parse(r["soluong"].ToString());
        //            dr[0]["sttondau"] = decimal.Parse(dr[0]["sttondau"].ToString()) - decimal.Parse(r["sotien"].ToString());
        //        }
        //    }
        //    sql = "select ";
        //    if (i_tt == 1) sql += "a.khox makho,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    else sql += "0 as giaban,";
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + ") as dongia,d.manguon,sum(b.soluong) as soluong,sum(b.soluong*d.gianovat) as sotien ";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + ") as dongia,d.manguon,sum(b.soluong) as soluong,sum(b.soluong*d.giamua) as sotien ";
        //    }
        //    if (bNhacc) sql += ", d.nhomcc as manhacc, ncc.ten as tennhacc ";
        //    else sql += ", 0 as manhacc, null as tennhacc ";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end as vat ";

        //    sql += "from " + xxx + ".d_xuatll a," + xxx + ".d_xuatct b," + user + ".d_dmbd c," + xxx + ".d_theodoi d ";
        //    if (bNhacc) sql += ", " + user + ".d_dmnx ncc";
        //    sql += " where a.id=b.id and b.mabd=c.id and b.sttt=d.id and a.nhom=" + i_nhom + " and a.loai in ('CK')";
        //    if (bNhacc) sql += " and d.nhomcc=ncc.id ";
        //    sql += " and to_date(to_char(a.ngay,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date('" + s_tungay + "','dd/mm/yyyy') ";
        //    if (s_kho != "") sql += " and a.khox in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
        //    if (s_kho != "") sql += " and a.khon not in (" + s_kho.Substring(0, s_kho.Length - 1) + ")";
        //    if (s_manhom != "") sql += " and c.manhom in (" + s_manhom.Substring(0, s_manhom.Length - 1) + ")";
        //    if (s_maduocbv != "") sql += " and c.nhombo in (" + s_maduocbv.Trim().Trim(',') + ")";
        //    if (i_manguon != -1) sql += " and d.manguon=" + i_manguon;
        //    sql += " and b.soluong>0";

        //    sql += " group by ";
        //    if (i_tt == 1) sql += "a.khox,";
        //    if (bgiaban)
        //    {
        //        if (bgiabandot) sql += "b.giaban,";
        //        else sql += "c.giaban,";
        //    }
        //    if (bGiachuaVAT)
        //    {
        //        sql += "b.mabd,trunc(d.gianovat," + i_dongiale + "),d.manguon";
        //    }
        //    else
        //    {
        //        sql += "b.mabd,trunc(d.giamua," + i_dongiale + "),d.manguon";
        //    }
        //    if (bNhacc) sql += ", d.nhomcc, ncc.ten";
        //    sql += ",case when d.gianovat=0 then 0 else (round(d.giamua/d.gianovat,2)-1)*100 end";
        //    foreach (DataRow r in d.get_data(sql).Tables[0].Rows)
        //    {
        //        exp = "mabd=" + int.Parse(r["mabd"].ToString());
        //        exp += " and dongia=" + decimal.Parse(r["dongia"].ToString());
        //        if (i_manguon != -1) exp += " and manguon=" + i_manguon;
        //        if (i_tt == 1) exp += " and idnn=" + int.Parse(r["makho"].ToString());
        //        r1 = d.getrowbyid(ds.Tables[0], exp);
        //        if (r1 == null)
        //        {
        //            r3 = d.getrowbyid(dt, "id=" + int.Parse(r["mabd"].ToString()));
        //            if (r3 != null)
        //            {
        //                r2 = ds.Tables[0].NewRow();
        //                r2["manhom"] = r3["manhom"].ToString();
        //                r2["tennhom"] = r3["tennhom"].ToString();
        //                r2["mabd"] = r["mabd"].ToString();
        //                r2["ma"] = r3["ma"].ToString();
        //                r2["ten"] = r3["ten"].ToString().Trim() + " " + r3["hamluong"].ToString();
        //                if (i_tt == 0) r2["tenhc"] = r3["tenhc"].ToString();
        //                else r2["tenhc"] = "";
        //                r2["manhacc"] = r["manhacc"].ToString();
        //                r2["tennhacc"] = r["tennhacc"].ToString();
        //                r2["noingoai"] = "";
        //                r2["dang"] = r3["dang"].ToString();
        //                r2["tondau"] = Convert.ToDecimal(r["soluong"].ToString()) * (-1);
        //                r2["sttondau"] = Convert.ToDecimal(r["sotien"].ToString()) * (-1);
        //                r2["slnhap"] = 0;
        //                r2["stnhap"] = 0;
        //                r2["slnhap_ck"] = 0;
        //                r2["stnhap_ck"] = 0;
        //                r2["slxuat"] = 0;
        //                r2["stxuat"] = 0;
        //                r2["slxuat_ck"] = 0;
        //                r2["stxuat_ck"] = 0;
        //                r2["sl_tra"] = 0;
        //                r2["st_tra"] = 0;

        //                r2["dongia"] = r["dongia"].ToString();
        //                r2["giaban"] = r["giaban"].ToString();
        //                r2["sttt"] = 0;
        //                r2["manguon"] = r["manguon"].ToString();
        //                r2["stt"] = (r3["tt"].ToString().Trim() == "") ? "0" : r3["tt"].ToString();
        //                if (i_tt == 0)
        //                {
        //                    r2["idnn"] = r3["idnn"].ToString();
        //                    r2["noingoai"] = r3["noingoai"].ToString();
        //                }
        //                else if (i_tt == 1)
        //                {
        //                    r4 = d.getrowbyid(dtdmkho, "id=" + int.Parse(r["makho"].ToString()));
        //                    if (r4 != null)
        //                    {
        //                        r2["idnn"] = r["makho"].ToString();
        //                        r2["noingoai"] = r4["ten"].ToString();
        //                    }
        //                }
        //                r2["vat"] = r["vat"].ToString();
        //                ds.Tables[0].Rows.Add(r2);
        //            }
        //        }
        //        else
        //        {
        //            DataRow[] dr = ds.Tables[0].Select(exp);

        //            dr[0]["tondau"] = decimal.Parse(dr[0]["tondau"].ToString()) - decimal.Parse(r["soluong"].ToString());
        //            dr[0]["sttondau"] = decimal.Parse(dr[0]["sttondau"].ToString()) - decimal.Parse(r["sotien"].ToString());
        //        }
        //    }
        //    ds.AcceptChanges();
        //}
        #endregion
        //linh
        /// <summary>
        /// Tên USer để connect database: medisoft 
        /// </summary>
        public string User_database
        {
            get { return owner; }
        }
        public string Password_database
        {
            get { return password; }
        }
        public int IDTrungTam
        {
            get
            {
                string s_sql = "select id from " + user + ".dmchinhanh where trungtam=1";
                DataSet dstmp = get_data(s_sql);
                if (dstmp == null) { return -1; }
                else
                {
                    try
                    {
                        return int.Parse(dstmp.Tables[0].Rows[0][0].ToString());
                    }
                    catch { return -1; }
                }
            }
        }
        public string DBLinkTrungTam
        {
            get
            {
                string s_sql = "select database from " + user + ".dmchinhanh where trungtam=1";
                DataSet dstmp = get_data(s_sql);
                if (dstmp == null) { return ""; }
                else
                {
                    try
                    {
                        return dstmp.Tables[0].Rows[0][0].ToString();
                    }
                    catch { return ""; }
                }
            }
        }
        public bool upd_dausinhton(string d_mmyy, decimal d_id, decimal d_idkhoa, decimal d_iddutru, string d_ngay, string d_mabs, string d_manv,
            decimal d_mach, decimal d_nhietdo, string d_huyetap, decimal d_nhiptho, int d_cannang, string d_phong, string d_giuong,
            string d_ghichu, string d_mabn, decimal d_maql, decimal d_mavaovien, string s_makp,int i_userid)
        {
            string s_sql = "update " + userid + d_mmyy + ".d_dausinhton set idkhoa=" + d_idkhoa.ToString() + ",iddutru=" + d_iddutru.ToString() + ",ngay=" +
                "to_timestamp(:d_ngay,'dd/mm/yyyy hh24:mi'),mabs='" + d_mabs + "',manv='" + d_manv + "',mach=" + d_mach.ToString() + ",nhietdo=" + d_nhietdo.ToString() + "," +
                "huyetap='" + d_huyetap + "',nhiptho=" + d_nhiptho.ToString() + ",cannang=" + d_cannang.ToString() + ",phong='" + d_phong + "',giuong='" + d_giuong + "'," +
                "ghichu=:d_ghichu,maql=" + d_maql.ToString() + ",mavaovien=" + d_mavaovien.ToString() + ",mabn='" + d_mabn + "',makp='" + s_makp + "',userid="+i_userid+" where id=" + d_id.ToString();
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(s_sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 16).Value = d_ngay == "" ? null : d_ngay;
                cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                int i = cmd.ExecuteNonQuery();
                if (i == 0)
                {
                    s_sql = "insert into " + userid + d_mmyy + ".d_dausinhton(id,idkhoa,iddutru,ngay,mabs,manv,mach,nhietdo,huyetap,nhiptho,cannang,phong," +
                        "giuong,ghichu,mabn,maql,mavaovien,makp,userid) values (" + d_id.ToString() + "," + d_idkhoa.ToString() + "," + d_iddutru.ToString() + "," +
                        "to_timestamp(:d_ngay,'dd/mm/yyyy hh24:mi'),'" + d_mabs + "','" + d_manv + "'," + d_mach.ToString() + "," + d_nhietdo.ToString() + "," +
                        "'" + d_huyetap + "'," + d_nhiptho.ToString() + "," + d_cannang.ToString() + ",'" + d_phong + "','" + d_giuong + "',:d_ghichu," +
                        "'" + d_mabn + "'," + d_maql.ToString() + "," + d_mavaovien.ToString() + ",'" + s_makp + "',"+i_userid+")";
                    cmd.Dispose();
                    cmd = new NpgsqlCommand(s_sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_ngay", NpgsqlDbType.Varchar, 16).Value = d_ngay == "" ? null : d_ngay;
                    cmd.Parameters.Add("d_ghichu", NpgsqlDbType.Text).Value = d_ghichu;
                    cmd.ExecuteNonQuery();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(d_mmyy, ex.Message, sComputer, "d_dausinhton");
                return false;
            }
            finally
            {
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            return true;
        }
        public DataTable get_tutrucct_sttt(string mmyy, int makp, string makho, string manguon, int tutruc, int nhom)
        {
            int sole = d_soluong_le(nhom);
            upd_tontutruc(mmyy, nhom, makp);
            sql = "select a.stt,d.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,b.dang,c.ten||' ['||round(b.bhyt,0)||']' as tenkho,";
            sql += "trunc(a.tondau+a.slnhap-a.slxuat," + sole + ") as soluong,b.id,a.makho,b.bhyt,b.mahc,x.manguon,1 as tutruc,b.id as mabd,";
            sql += "b.manhom,b.madoituong,b.choduyet from " + user + mmyy + ".d_tutrucct a," + user + mmyy + ".d_theodoi x," + user + ".d_dmbd b," + user + ".d_dmkho c," +
                user + ".d_dmnguon d where a.stt=x.id and a.mabd=b.id and a.makho=c.id and a.manguon=d.id and a.makp=" + makp;
            if (makho != "") sql += " and a.makho in (" + makho.Substring(0, makho.Length - 1) + ")";
            if (manguon != "") sql += " and x.manguon in (" + manguon.Substring(0, manguon.Length - 1) + ")";
            sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            return tmp;
        }
        public void updrec_mavach_tutruc(string tt, DataTable dt, decimal stt, string doituong, int mabd, string ma, string ten, string tenhc,
            string dang, string tenkho, decimal soluong, int madoituong, int makho, string cachdung, string mahc, int manguon,
            int tutruc, decimal idvpkhoa, decimal solan, decimal lan, decimal sttt, DataTable dtton, int mabdcu)
        {
            string exp = "stt=" + stt;
            DataRow r = getrowbyid(dt, exp);
            if (r == null)
            {
                DataRow nrow = dt.NewRow();
                nrow["stt"] = stt;
                nrow["doituong"] = doituong;
                nrow["mabd"] = mabd;
                nrow["ma"] = ma;
                nrow["ten"] = ten;
                nrow["tenhc"] = tenhc;
                nrow["dang"] = dang;
                nrow["tenkho"] = tenkho;
                nrow["soluong"] = soluong;
                nrow["madoituong"] = madoituong;
                nrow["makho"] = makho;
                nrow["cachdung"] = cachdung;
                nrow["mahc"] = mahc;
                nrow["manguon"] = manguon;
                nrow["tutruc"] = tutruc;
                nrow["idvpkhoa"] = idvpkhoa;
                nrow["solan"] = solan;
                nrow["lan"] = lan;
                nrow["sttt"] = sttt;
                dt.Rows.Add(nrow);
                if (dtton != null && idvpkhoa == 0) updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, soluong, tt);
            }
            else
            {
                DataRow[] dr = dt.Select(exp);
                if (dtton != null && idvpkhoa == 0)
                {
                    if (mabdcu == 0 || mabdcu == mabd)
                    {
                        decimal sl = decimal.Parse(dr[0]["soluong"].ToString());
                        updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, sl, "+");
                    }
                    updrec_tonkho_tutruc_nguon(dtton, makho, manguon, mabd, tutruc, soluong, "-");
                }
                dr[0]["doituong"] = doituong;
                dr[0]["mabd"] = mabd;
                dr[0]["ma"] = ma;
                dr[0]["ten"] = ten;
                dr[0]["tenhc"] = tenhc;
                dr[0]["dang"] = dang;
                dr[0]["tenkho"] = tenkho;
                dr[0]["soluong"] = soluong;
                dr[0]["madoituong"] = madoituong;
                dr[0]["makho"] = makho;
                dr[0]["cachdung"] = cachdung;
                dr[0]["mahc"] = mahc;
                dr[0]["manguon"] = manguon;
                dr[0]["tutruc"] = tutruc;
                dr[0]["idvpkhoa"] = idvpkhoa;
                dr[0]["solan"] = solan;
                dr[0]["lan"] = lan;
                dr[0]["sttt"] = sttt;
            }
        }
        //end linh
        public bool get_paid_thuocbhyt(string d_ngay, decimal d_id)
        {
            //binh 130811 -- them ham kiem tra xem toa thuoc da thanh toan chua? chua thanh toan moi duoc sua ben cap toa medisoft (toa duyet tu dong)
            string sxxx = user + mmyy(d_ngay);
            ds = get_data("select b.sobienlai from " + sxxx + ".d_thuocbhytll a inner join " + sxxx + ".bhytkb b on a.id=b.id where a.id=" + d_id);
            if (ds.Tables[0].Rows.Count == 0) return false;
            else return ds.Tables[0].Rows[0]["sobienlai"].ToString().Trim() != "0";
        }
        //thuy 02012013

        //linh 02012013
        internal string PathXML = "..//..//..//xml";
        const string key = "Toancau@Medisoft.vn/03031952#0903937066.";

        internal string Key
        {
            get { return key; }
        }
        /// <summary>
        /// Dịch ngược mật khẩu
        /// </summary>
        /// <param name="values">Chuỗi đã bị mã hoá</param>
        /// <returns></returns>
        internal string DeCode(string values, string s_key)
        {
            string val = "";
            val = DeCrypt(values, s_key);
            return val;
        }

        string DeCrypt(string values, string s_key)
        {
            byte[] keyArray;
            byte[] toEncryptArray = Convert.FromBase64String(values);
            MD5CryptoServiceProvider hashmd5 = new MD5CryptoServiceProvider();
            keyArray = hashmd5.ComputeHash(UTF8Encoding.UTF8.GetBytes(s_key));
            TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();
            tdes.Key = keyArray;
            tdes.Mode = CipherMode.ECB;
            tdes.Padding = PaddingMode.PKCS7;
            ICryptoTransform cTransform = tdes.CreateDecryptor();
            byte[] resultArray = cTransform.TransformFinalBlock(toEncryptArray, 0, toEncryptArray.Length);
            return UTF8Encoding.UTF8.GetString(resultArray);
        }

        /// <summary>
        /// Mã hoá mật khẩu
        /// </summary>
        /// <param name="values">Chuỗi cần được mã hoá</param>
        /// <returns></returns>
        internal string EnCode(string values)
        {
            string val = "";
            val = EnCrypt(values);
            return val;
        }

        string EnCrypt(string values)
        {
            byte[] keyArray;
            byte[] toEncryptArray = UTF8Encoding.UTF8.GetBytes(values);
            MD5CryptoServiceProvider hashmd5 = new MD5CryptoServiceProvider();
            keyArray = hashmd5.ComputeHash(UTF8Encoding.UTF8.GetBytes(Key));
            TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();
            tdes.Key = keyArray;
            tdes.Mode = CipherMode.ECB;
            tdes.Padding = PaddingMode.PKCS7;
            ICryptoTransform cTransform = tdes.CreateEncryptor();
            byte[] resultArray = cTransform.TransformFinalBlock(toEncryptArray, 0, toEncryptArray.Length);
            return Convert.ToBase64String(resultArray, 0, resultArray.Length);
        }

        public string f_get_connection(int aIDChiNhanh)
        {
            string asql = "select * from medibv.dmchinhanh where id=" + aIDChiNhanh;
            DataSet lds = get_data(asql);
            string _sConn = "";
            foreach (DataRow row in lds.Tables[0].Rows)//??
            {

                _sConn = "Server=192.168.1.14;Port=5432;User Id=medisoft;Password=links1920;Database=medisoft;Encoding=UNICODE;Pooling=true;";
                string s_ip = row["ip"].ToString();
                string s_database = row["database_local"].ToString();
                string s_port = row["port"].ToString();
                _sConn = "Server=" + s_ip + ";Port=" + s_port + ";User Id=" + User_database + ";Password=" + Password_database + ";Database=" + s_database + ";Encoding=UNICODE;Pooling=true;";
                break;
            }
            return _sConn;
        }

        public string f_get_connection(string aIPAddress, string aPort, string aDatabase)
        {
            string _sConn = "Server=" + aIPAddress + ";Port=" + aPort + ";User Id=" + User_database + ";Password=" + Password_database + ";Database=" + aDatabase + ";Encoding=UNICODE;Pooling=true;";
            return _sConn;

        }

        public void execute_data(string _sconn, string sql)
        {
            try
            {
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                con = new NpgsqlConnection(_sconn);
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "?");
            }
        }

        public DataSet get_data(string _sConn, string asql)
        {
            DataSet ds1 = new DataSet();
            try
            {
                if (ds1 != null)
                {
                    ds1.Dispose();
                    ds1 = null;
                }
                if (con != null)
                {
                    con.Close(); con.Dispose();
                }
                ds1 = new DataSet();
                con = new NpgsqlConnection(_sConn);
                con.Open();
                cmd = new NpgsqlCommand(asql, con);
                cmd.CommandType = CommandType.Text;
                dest = new NpgsqlDataAdapter(cmd);
                dest.Fill(ds1);
                cmd.Dispose();
                con.Close(); con.Dispose();
            }
            catch (NpgsqlException ex)
            {
                upd_error(asql + "-" + ex.Message.ToString().Trim(), sComputer, "?");
            }
            return ds1;
        }

        public DataTable get_tonkhoth_chinhanhkhac(int aChinhanh, string mmyy, int makho)
        {
            //string _scon = f_get_connection(aChinhanh);
            string s_dblink_cnkhac = getDBLink(aChinhanh);
            if (s_dblink_cnkhac.Trim().Trim('@') != "") s_dblink_cnkhac = "@" + s_dblink_cnkhac.Trim().Trim('@');
            //
            sql = "select rownum as stt,c.ten as tennguon,b.ma,trim(b.ten)||' '||b.hamluong as ten,b.tenhc,";
            sql += "b.dang,d.ten as tenhang,a.tondau+a.slnhap-a.slxuat-case when a.slyeucau>0 then a.slyeucau else 0 end as soluong,b.id,";
            sql += " a.manguon,a.makho,b.mahc,b.donvi,e.ten as tennuoc, f.ten as dungluc ";
            sql += " from " + user + mmyy + ".d_tonkhoth" + s_dblink_cnkhac + " a," + user + ".d_dmbd" + s_dblink_cnkhac + " b," + user + ".d_dmnguon" + s_dblink_cnkhac + " c," + user + ".d_dmhang" + s_dblink_cnkhac + " d," + user + ".d_dmnuoc" + s_dblink_cnkhac + " e," + user + ".d_dmthoidiemdung" + s_dblink_cnkhac + " f ";
            sql += " where a.mabd=b.id and a.manguon=c.id and b.mahang=d.id and b.manuoc=e.id and b.mathoidiemdung=f.id(+) and a.makho=" + makho;
            if (bSort_mabd) sql += " order by b.ma";
            else sql += " order by b.ten";
            DataTable tmp = get_data(sql).Tables[0];
            return tmp;
        }
        public void Tao_view(string mmyy)
        {
            //Thuy tao view benhanpk 14.11.2012
            string s_sql = " CREATE OR REPLACE VIEW " + userid + ".vi_benhanpk AS ";
            s_sql += " SELECT benhanpk.mabn, benhanpk.mavaovien, benhanpk.maql, benhanpk.makp, benhanpk.ngay, benhanpk.madoituong, benhanpk.chandoan,";
            s_sql += " benhanpk.maicd, benhanpk.ttlucrv, benhanpk.mabs, benhanpk.userid ";
            s_sql += " FROM " + userid + mmyy + ".benhanpk";
            if (bMmyy(Mmyy_truoc(mmyy)))
            {
                s_sql += " UNION ALL ";
                s_sql += " SELECT benhanpk.mabn, benhanpk.mavaovien, benhanpk.maql, benhanpk.makp, benhanpk.ngay, benhanpk.madoituong, benhanpk.chandoan,";
                s_sql += " benhanpk.maicd, benhanpk.ttlucrv, benhanpk.mabs, benhanpk.userid ";
                s_sql += " FROM " + userid + Mmyy_truoc(mmyy) + ".benhanpk ";
            }
            if (bMmyy(Mmyy_sau(mmyy)))
            {
                s_sql += " UNION ALL ";
                s_sql += " SELECT benhanpk.mabn, benhanpk.mavaovien, benhanpk.maql, benhanpk.makp, benhanpk.ngay, benhanpk.madoituong, benhanpk.chandoan,";
                s_sql += " benhanpk.maicd, benhanpk.ttlucrv, benhanpk.mabs, benhanpk.userid ";
                s_sql += " FROM " + userid + Mmyy_sau(mmyy) + ".benhanpk ";
            }
            s_sql += " ; ALTER TABLE " + userid + ".vi_benhanpk OWNER TO  " + owner + ";\n";
            //Tạo view benhancc
            s_sql += " CREATE OR REPLACE VIEW " + userid + ".vi_benhancc AS ";
            s_sql += " SELECT benhancc.mabn, benhancc.mavaovien, benhancc.maql, benhancc.makp, benhancc.ngay, benhancc.madoituong, benhancc.chandoan,";
            s_sql += " benhancc.maicd, benhancc.ttlucrv, benhancc.mabs, benhancc.userid ";
            s_sql += " FROM " + userid + mmyy + ".benhancc ";
            if (bMmyy(Mmyy_truoc(mmyy)))
            {
                s_sql += " UNION ALL ";
                s_sql += " SELECT benhancc.mabn, benhancc.mavaovien, benhancc.maql, benhancc.makp, benhancc.ngay, benhancc.madoituong, benhancc.chandoan,";
                s_sql += " benhancc.maicd, benhancc.ttlucrv, benhancc.mabs, benhancc.userid ";
                s_sql += " FROM " + userid + Mmyy_truoc(mmyy) + ".benhancc ";
            }
            if (bMmyy(Mmyy_sau(mmyy)))
            {
                s_sql += " UNION ALL ";
                s_sql += " SELECT benhancc.mabn, benhancc.mavaovien, benhancc.maql, benhancc.makp, benhancc.ngay, benhancc.madoituong, benhancc.chandoan,";
                s_sql += " benhancc.maicd, benhancc.ttlucrv, benhancc.mabs, benhancc.userid ";
                s_sql += " FROM " + userid + Mmyy_sau(mmyy) + ".benhancc";
            }
            s_sql += " ; ALTER TABLE " + userid + ".vi_benhancc OWNER TO  " + owner + ";\n";
            s_sql = s_sql.Trim('\n');
            s_sql = s_sql.Trim(';');
            foreach (string query in s_sql.Split(';'))
            {
                string s_tmp = query.Trim('\n');
                if (s_tmp != "")
                {
                    execute_data(s_tmp);
                }
            }
        }
        public bool upd_loaiphieu(decimal d_id, string d_ten, int d_loai, int d_nhom, decimal d_stt, int d_buoi, bool d_themmoi)
        {
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            try
            {
                con = new NpgsqlConnection(sConn);
                con.Open();
                if (d_themmoi == false)
                {                    
                    sql = "update " + user + ".d_loaiphieu set ten=:d_ten,loai=:d_loai,nhom=:d_nhom,stt=:d_stt,buoi=:d_buoi where id=:d_id";                    
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_buoi", NpgsqlDbType.Numeric).Value = d_buoi;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
                if (d_themmoi)
                {
                    sql = "insert into " + user + ".d_loaiphieu (id,ten,loai,nhom,stt,buoi)";
                    sql += " values (:d_id,:d_ten,:d_loai,:d_nhom,:d_stt,:d_buoi)";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.Parameters.Add("d_id", NpgsqlDbType.Numeric).Value = d_id;
                    cmd.Parameters.Add("d_ten", NpgsqlDbType.Text).Value = d_ten;
                    cmd.Parameters.Add("d_loai", NpgsqlDbType.Numeric).Value = d_loai;
                    cmd.Parameters.Add("d_nhom", NpgsqlDbType.Numeric).Value = d_nhom;
                    cmd.Parameters.Add("d_stt", NpgsqlDbType.Numeric).Value = d_stt;
                    cmd.Parameters.Add("d_buoi", NpgsqlDbType.Numeric).Value = d_buoi;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message.ToString().Trim(), sComputer, "d_loaiphieu");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }
        public string fields(string table, string dk)
        {
            string ret = "";
            DataTable dt = get_data("select * from " + table + " where " + dk).Tables[0];
            if (dt.Rows.Count > 0) for (int i = 0; i < dt.Columns.Count; i++) ret += dt.Rows[0][i].ToString().Trim() + "^";
            return (ret != "") ? ret.Substring(0, ret.Length - 1) : ret;
        }
        public bool bDmtyleban_vattuyte(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=1017 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString() == "1";
        }



        /// <summary>
        /// Cap nhat ty le gia ban vay tu y te
        /// </summary>
        /// <param name="tu"></param>
        /// <param name="den"></param>
        /// <param name="tyle"></param>
        /// <param name="userid"></param>
        /// <param name="nhomkho"></param>
        /// <param name="d_vattuyte">1: vat tu y te; 0: thuoc</param>
        /// <returns></returns>
        public bool upd_dmtyleban(decimal tu, decimal den, decimal tyle, int userid, int nhomkho, int d_vattuyte)
        {
            sql = "update " + user + ".dmtyleban set tyle=" + tyle + ",userid=" + userid + ",nhomkho=" + nhomkho;
            sql += " where tu=" + tu + " and den=" + den + " and vattuyte=" + d_vattuyte;
            if (con != null)
            {
                con.Close(); con.Dispose();
            }
            con = new NpgsqlConnection(sConn);
            try
            {
                con.Open();
                cmd = new NpgsqlCommand(sql, con);
                cmd.CommandType = CommandType.Text;
                int irec = cmd.ExecuteNonQuery();
                cmd.Dispose();
                if (irec == 0)
                {
                    sql = "insert into " + user + ".dmtyleban(tu,den,tyle,userid,nhomkho, vattuyte) values (" + tu + "," + den + "," + tyle + "," + userid + "," + nhomkho + "," + d_vattuyte + ")";
                    cmd = new NpgsqlCommand(sql, con);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                    cmd.Dispose();
                }
            }
            catch (NpgsqlException ex)
            {
                upd_error(ex.Message, sComputer, "dmtyleban");
                return false;
            }
            finally
            {

                con.Close(); con.Dispose();
            }
            return true;
        }


        public decimal get_tyleban(decimal giamua, int nhom, bool bvattuyte)
        {
            decimal ret = 0;
            sql = "select tyle from " + user + ".dmtyleban where tu<=" + giamua + " and den>=" + giamua + " and nhomkho=" + nhom + " and vattuyte =" + (bvattuyte ? "1" : "0") + " order by tu,den";
            DataTable tmp = get_data(sql).Tables[0];
            if (tmp.Rows.Count > 0) ret = decimal.Parse(tmp.Rows[0]["tyle"].ToString());
            else
            {
                sql = "select tyle from " + user + ".dmtyleban where den<=" + giamua + " and nhomkho=" + nhom + " and vattuyte =" + (bvattuyte ? "1" : "0") + " order by tu desc";
                tmp = get_data(sql).Tables[0];
                if (tmp.Rows.Count > 0) ret = decimal.Parse(tmp.Rows[0]["tyle"].ToString());
            }
            return ret;
        }
        /// <summary>
        /// True: user thuong cam xuat excel
        /// </summary>
        /// <param name="d_nhom"></param>
        /// <returns></returns>
        public bool bUserthuong_CamxuatExcel_E11(int d_nhom)
        {
            ds = get_data("select ten from " + user + ".d_thongso where id=5011 and nhom=" + d_nhom);
            if (ds.Tables[0].Rows.Count == 0) return false;
            return ds.Tables[0].Rows[0][0].ToString().Trim() == "1";
        }
    }
}
  
