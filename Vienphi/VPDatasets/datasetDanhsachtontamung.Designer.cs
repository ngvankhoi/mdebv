//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Vienphi.VPDatasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("datasetDanhsachtontamung")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class datasetDanhsachtontamung : global::System.Data.DataSet {
        
        private TAMUNGDataTable tableTAMUNG;
        
        private THANGNAMDataTable tableTHANGNAM;
        
        private global::System.Data.DataRelation relationTHANGNAM_TAMUNG;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public datasetDanhsachtontamung() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected datasetDanhsachtontamung(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TAMUNG"] != null)) {
                    base.Tables.Add(new TAMUNGDataTable(ds.Tables["TAMUNG"]));
                }
                if ((ds.Tables["THANGNAM"] != null)) {
                    base.Tables.Add(new THANGNAMDataTable(ds.Tables["THANGNAM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TAMUNGDataTable TAMUNG {
            get {
                return this.tableTAMUNG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public THANGNAMDataTable THANGNAM {
            get {
                return this.tableTHANGNAM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            datasetDanhsachtontamung cln = ((datasetDanhsachtontamung)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TAMUNG"] != null)) {
                    base.Tables.Add(new TAMUNGDataTable(ds.Tables["TAMUNG"]));
                }
                if ((ds.Tables["THANGNAM"] != null)) {
                    base.Tables.Add(new THANGNAMDataTable(ds.Tables["THANGNAM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTAMUNG = ((TAMUNGDataTable)(base.Tables["TAMUNG"]));
            if ((initTable == true)) {
                if ((this.tableTAMUNG != null)) {
                    this.tableTAMUNG.InitVars();
                }
            }
            this.tableTHANGNAM = ((THANGNAMDataTable)(base.Tables["THANGNAM"]));
            if ((initTable == true)) {
                if ((this.tableTHANGNAM != null)) {
                    this.tableTHANGNAM.InitVars();
                }
            }
            this.relationTHANGNAM_TAMUNG = this.Relations["THANGNAM_TAMUNG"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "datasetDanhsachtontamung";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/datasetDanhsachtontamung.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTAMUNG = new TAMUNGDataTable();
            base.Tables.Add(this.tableTAMUNG);
            this.tableTHANGNAM = new THANGNAMDataTable();
            base.Tables.Add(this.tableTHANGNAM);
            this.relationTHANGNAM_TAMUNG = new global::System.Data.DataRelation("THANGNAM_TAMUNG", new global::System.Data.DataColumn[] {
                        this.tableTHANGNAM.thangColumn,
                        this.tableTHANGNAM.namColumn}, new global::System.Data.DataColumn[] {
                        this.tableTAMUNG.thangColumn,
                        this.tableTAMUNG.namColumn}, false);
            this.Relations.Add(this.relationTHANGNAM_TAMUNG);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTAMUNG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTHANGNAM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            datasetDanhsachtontamung ds = new datasetDanhsachtontamung();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TAMUNGRowChangeEventHandler(object sender, TAMUNGRowChangeEvent e);
        
        public delegate void THANGNAMRowChangeEventHandler(object sender, THANGNAMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TAMUNGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmaql;
            
            private global::System.Data.DataColumn columnmabn;
            
            private global::System.Data.DataColumn columnhoten;
            
            private global::System.Data.DataColumn columnngaynhapvien;
            
            private global::System.Data.DataColumn columndatamung;
            
            private global::System.Data.DataColumn columntiendichvu;
            
            private global::System.Data.DataColumn columntienvienphi;
            
            private global::System.Data.DataColumn columndahoanlai;
            
            private global::System.Data.DataColumn columnxuatvien;
            
            private global::System.Data.DataColumn columnngayxuatvien;
            
            private global::System.Data.DataColumn columnthang;
            
            private global::System.Data.DataColumn columnnam;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGDataTable() {
                this.TableName = "TAMUNG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAMUNGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TAMUNGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maqlColumn {
                get {
                    return this.columnmaql;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mabnColumn {
                get {
                    return this.columnmabn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hotenColumn {
                get {
                    return this.columnhoten;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ngaynhapvienColumn {
                get {
                    return this.columnngaynhapvien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datamungColumn {
                get {
                    return this.columndatamung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tiendichvuColumn {
                get {
                    return this.columntiendichvu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tienvienphiColumn {
                get {
                    return this.columntienvienphi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dahoanlaiColumn {
                get {
                    return this.columndahoanlai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn xuatvienColumn {
                get {
                    return this.columnxuatvien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ngayxuatvienColumn {
                get {
                    return this.columnngayxuatvien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn thangColumn {
                get {
                    return this.columnthang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namColumn {
                get {
                    return this.columnnam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow this[int index] {
                get {
                    return ((TAMUNGRow)(this.Rows[index]));
                }
            }
            
            public event TAMUNGRowChangeEventHandler TAMUNGRowChanging;
            
            public event TAMUNGRowChangeEventHandler TAMUNGRowChanged;
            
            public event TAMUNGRowChangeEventHandler TAMUNGRowDeleting;
            
            public event TAMUNGRowChangeEventHandler TAMUNGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTAMUNGRow(TAMUNGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow AddTAMUNGRow(decimal maql, string mabn, string hoten, System.DateTime ngaynhapvien, decimal datamung, decimal tiendichvu, decimal tienvienphi, decimal dahoanlai, decimal xuatvien, System.DateTime ngayxuatvien, int thang, int nam) {
                TAMUNGRow rowTAMUNGRow = ((TAMUNGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        maql,
                        mabn,
                        hoten,
                        ngaynhapvien,
                        datamung,
                        tiendichvu,
                        tienvienphi,
                        dahoanlai,
                        xuatvien,
                        ngayxuatvien,
                        thang,
                        nam};
                rowTAMUNGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTAMUNGRow);
                return rowTAMUNGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow FindBymaql(decimal maql) {
                return ((TAMUNGRow)(this.Rows.Find(new object[] {
                            maql})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TAMUNGDataTable cln = ((TAMUNGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TAMUNGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmaql = base.Columns["maql"];
                this.columnmabn = base.Columns["mabn"];
                this.columnhoten = base.Columns["hoten"];
                this.columnngaynhapvien = base.Columns["ngaynhapvien"];
                this.columndatamung = base.Columns["datamung"];
                this.columntiendichvu = base.Columns["tiendichvu"];
                this.columntienvienphi = base.Columns["tienvienphi"];
                this.columndahoanlai = base.Columns["dahoanlai"];
                this.columnxuatvien = base.Columns["xuatvien"];
                this.columnngayxuatvien = base.Columns["ngayxuatvien"];
                this.columnthang = base.Columns["thang"];
                this.columnnam = base.Columns["nam"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmaql = new global::System.Data.DataColumn("maql", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaql);
                this.columnmabn = new global::System.Data.DataColumn("mabn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmabn);
                this.columnhoten = new global::System.Data.DataColumn("hoten", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhoten);
                this.columnngaynhapvien = new global::System.Data.DataColumn("ngaynhapvien", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnngaynhapvien);
                this.columndatamung = new global::System.Data.DataColumn("datamung", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatamung);
                this.columntiendichvu = new global::System.Data.DataColumn("tiendichvu", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntiendichvu);
                this.columntienvienphi = new global::System.Data.DataColumn("tienvienphi", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntienvienphi);
                this.columndahoanlai = new global::System.Data.DataColumn("dahoanlai", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndahoanlai);
                this.columnxuatvien = new global::System.Data.DataColumn("xuatvien", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxuatvien);
                this.columnngayxuatvien = new global::System.Data.DataColumn("ngayxuatvien", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnngayxuatvien);
                this.columnthang = new global::System.Data.DataColumn("thang", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthang);
                this.columnnam = new global::System.Data.DataColumn("nam", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnam);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnmaql}, true));
                this.columnmaql.AllowDBNull = false;
                this.columnmaql.ReadOnly = true;
                this.columnmaql.Unique = true;
                this.columnmabn.ReadOnly = true;
                this.columnmabn.MaxLength = 10;
                this.columnhoten.ReadOnly = true;
                this.columnhoten.MaxLength = 100;
                this.columnngaynhapvien.ReadOnly = true;
                this.columndatamung.ReadOnly = true;
                this.columntiendichvu.ReadOnly = true;
                this.columntienvienphi.ReadOnly = true;
                this.columndahoanlai.ReadOnly = true;
                this.columnxuatvien.ReadOnly = true;
                this.columnngayxuatvien.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow NewTAMUNGRow() {
                return ((TAMUNGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TAMUNGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TAMUNGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TAMUNGRowChanged != null)) {
                    this.TAMUNGRowChanged(this, new TAMUNGRowChangeEvent(((TAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TAMUNGRowChanging != null)) {
                    this.TAMUNGRowChanging(this, new TAMUNGRowChangeEvent(((TAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TAMUNGRowDeleted != null)) {
                    this.TAMUNGRowDeleted(this, new TAMUNGRowChangeEvent(((TAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TAMUNGRowDeleting != null)) {
                    this.TAMUNGRowDeleting(this, new TAMUNGRowChangeEvent(((TAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTAMUNGRow(TAMUNGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                datasetDanhsachtontamung ds = new datasetDanhsachtontamung();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TAMUNGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class THANGNAMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnthang;
            
            private global::System.Data.DataColumn columnnam;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMDataTable() {
                this.TableName = "THANGNAM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THANGNAMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected THANGNAMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn thangColumn {
                get {
                    return this.columnthang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namColumn {
                get {
                    return this.columnnam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow this[int index] {
                get {
                    return ((THANGNAMRow)(this.Rows[index]));
                }
            }
            
            public event THANGNAMRowChangeEventHandler THANGNAMRowChanging;
            
            public event THANGNAMRowChangeEventHandler THANGNAMRowChanged;
            
            public event THANGNAMRowChangeEventHandler THANGNAMRowDeleting;
            
            public event THANGNAMRowChangeEventHandler THANGNAMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTHANGNAMRow(THANGNAMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow AddTHANGNAMRow(int thang, int nam) {
                THANGNAMRow rowTHANGNAMRow = ((THANGNAMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        thang,
                        nam};
                rowTHANGNAMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTHANGNAMRow);
                return rowTHANGNAMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow FindBythangnam(int thang, int nam) {
                return ((THANGNAMRow)(this.Rows.Find(new object[] {
                            thang,
                            nam})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                THANGNAMDataTable cln = ((THANGNAMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new THANGNAMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnthang = base.Columns["thang"];
                this.columnnam = base.Columns["nam"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnthang = new global::System.Data.DataColumn("thang", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthang);
                this.columnnam = new global::System.Data.DataColumn("nam", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnam);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnthang,
                                this.columnnam}, true));
                this.columnthang.AllowDBNull = false;
                this.columnnam.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow NewTHANGNAMRow() {
                return ((THANGNAMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new THANGNAMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(THANGNAMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.THANGNAMRowChanged != null)) {
                    this.THANGNAMRowChanged(this, new THANGNAMRowChangeEvent(((THANGNAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.THANGNAMRowChanging != null)) {
                    this.THANGNAMRowChanging(this, new THANGNAMRowChangeEvent(((THANGNAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.THANGNAMRowDeleted != null)) {
                    this.THANGNAMRowDeleted(this, new THANGNAMRowChangeEvent(((THANGNAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.THANGNAMRowDeleting != null)) {
                    this.THANGNAMRowDeleting(this, new THANGNAMRowChangeEvent(((THANGNAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTHANGNAMRow(THANGNAMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                datasetDanhsachtontamung ds = new datasetDanhsachtontamung();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "THANGNAMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TAMUNGRow : global::System.Data.DataRow {
            
            private TAMUNGDataTable tableTAMUNG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAMUNGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTAMUNG = ((TAMUNGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal maql {
                get {
                    return ((decimal)(this[this.tableTAMUNG.maqlColumn]));
                }
                set {
                    this[this.tableTAMUNG.maqlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mabn {
                get {
                    try {
                        return ((string)(this[this.tableTAMUNG.mabnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mabn\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.mabnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hoten {
                get {
                    try {
                        return ((string)(this[this.tableTAMUNG.hotenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hoten\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.hotenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ngaynhapvien {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTAMUNG.ngaynhapvienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ngaynhapvien\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.ngaynhapvienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal datamung {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMUNG.datamungColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datamung\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.datamungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tiendichvu {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMUNG.tiendichvuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tiendichvu\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.tiendichvuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tienvienphi {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMUNG.tienvienphiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tienvienphi\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.tienvienphiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dahoanlai {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMUNG.dahoanlaiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dahoanlai\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.dahoanlaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal xuatvien {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMUNG.xuatvienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xuatvien\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.xuatvienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ngayxuatvien {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTAMUNG.ngayxuatvienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ngayxuatvien\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.ngayxuatvienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int thang {
                get {
                    try {
                        return ((int)(this[this.tableTAMUNG.thangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'thang\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.thangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nam {
                get {
                    try {
                        return ((int)(this[this.tableTAMUNG.namColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nam\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.namColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow THANGNAMRowParent {
                get {
                    return ((THANGNAMRow)(this.GetParentRow(this.Table.ParentRelations["THANGNAM_TAMUNG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["THANGNAM_TAMUNG"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmabnNull() {
                return this.IsNull(this.tableTAMUNG.mabnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmabnNull() {
                this[this.tableTAMUNG.mabnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshotenNull() {
                return this.IsNull(this.tableTAMUNG.hotenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethotenNull() {
                this[this.tableTAMUNG.hotenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsngaynhapvienNull() {
                return this.IsNull(this.tableTAMUNG.ngaynhapvienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetngaynhapvienNull() {
                this[this.tableTAMUNG.ngaynhapvienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatamungNull() {
                return this.IsNull(this.tableTAMUNG.datamungColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatamungNull() {
                this[this.tableTAMUNG.datamungColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstiendichvuNull() {
                return this.IsNull(this.tableTAMUNG.tiendichvuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettiendichvuNull() {
                this[this.tableTAMUNG.tiendichvuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstienvienphiNull() {
                return this.IsNull(this.tableTAMUNG.tienvienphiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettienvienphiNull() {
                this[this.tableTAMUNG.tienvienphiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdahoanlaiNull() {
                return this.IsNull(this.tableTAMUNG.dahoanlaiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdahoanlaiNull() {
                this[this.tableTAMUNG.dahoanlaiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxuatvienNull() {
                return this.IsNull(this.tableTAMUNG.xuatvienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxuatvienNull() {
                this[this.tableTAMUNG.xuatvienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsngayxuatvienNull() {
                return this.IsNull(this.tableTAMUNG.ngayxuatvienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetngayxuatvienNull() {
                this[this.tableTAMUNG.ngayxuatvienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsthangNull() {
                return this.IsNull(this.tableTAMUNG.thangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetthangNull() {
                this[this.tableTAMUNG.thangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnamNull() {
                return this.IsNull(this.tableTAMUNG.namColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnamNull() {
                this[this.tableTAMUNG.namColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class THANGNAMRow : global::System.Data.DataRow {
            
            private THANGNAMDataTable tableTHANGNAM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THANGNAMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTHANGNAM = ((THANGNAMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int thang {
                get {
                    return ((int)(this[this.tableTHANGNAM.thangColumn]));
                }
                set {
                    this[this.tableTHANGNAM.thangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nam {
                get {
                    return ((int)(this[this.tableTHANGNAM.namColumn]));
                }
                set {
                    this[this.tableTHANGNAM.namColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow[] GetTAMUNGRows() {
                if ((this.Table.ChildRelations["THANGNAM_TAMUNG"] == null)) {
                    return new TAMUNGRow[0];
                }
                else {
                    return ((TAMUNGRow[])(base.GetChildRows(this.Table.ChildRelations["THANGNAM_TAMUNG"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TAMUNGRowChangeEvent : global::System.EventArgs {
            
            private TAMUNGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRowChangeEvent(TAMUNGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class THANGNAMRowChangeEvent : global::System.EventArgs {
            
            private THANGNAMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRowChangeEvent(THANGNAMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591