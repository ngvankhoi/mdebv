//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Vienphi.VPDatasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("datasetDanhsachtontamung")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class datasetDanhsachtontamung : global::System.Data.DataSet {
        
        private TAMUNGDataTable tableTAMUNG;
        
        private THANGNAMDataTable tableTHANGNAM;
        
        private CHITIETTAMUNGDataTable tableCHITIETTAMUNG;
        
        private global::System.Data.DataRelation relationTHANGNAM_TAMUNG;
        
        private global::System.Data.DataRelation relationTAMUNG_CHITIETTAMUNG;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public datasetDanhsachtontamung() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected datasetDanhsachtontamung(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TAMUNG"] != null)) {
                    base.Tables.Add(new TAMUNGDataTable(ds.Tables["TAMUNG"]));
                }
                if ((ds.Tables["THANGNAM"] != null)) {
                    base.Tables.Add(new THANGNAMDataTable(ds.Tables["THANGNAM"]));
                }
                if ((ds.Tables["CHITIETTAMUNG"] != null)) {
                    base.Tables.Add(new CHITIETTAMUNGDataTable(ds.Tables["CHITIETTAMUNG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TAMUNGDataTable TAMUNG {
            get {
                return this.tableTAMUNG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public THANGNAMDataTable THANGNAM {
            get {
                return this.tableTHANGNAM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHITIETTAMUNGDataTable CHITIETTAMUNG {
            get {
                return this.tableCHITIETTAMUNG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            datasetDanhsachtontamung cln = ((datasetDanhsachtontamung)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TAMUNG"] != null)) {
                    base.Tables.Add(new TAMUNGDataTable(ds.Tables["TAMUNG"]));
                }
                if ((ds.Tables["THANGNAM"] != null)) {
                    base.Tables.Add(new THANGNAMDataTable(ds.Tables["THANGNAM"]));
                }
                if ((ds.Tables["CHITIETTAMUNG"] != null)) {
                    base.Tables.Add(new CHITIETTAMUNGDataTable(ds.Tables["CHITIETTAMUNG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTAMUNG = ((TAMUNGDataTable)(base.Tables["TAMUNG"]));
            if ((initTable == true)) {
                if ((this.tableTAMUNG != null)) {
                    this.tableTAMUNG.InitVars();
                }
            }
            this.tableTHANGNAM = ((THANGNAMDataTable)(base.Tables["THANGNAM"]));
            if ((initTable == true)) {
                if ((this.tableTHANGNAM != null)) {
                    this.tableTHANGNAM.InitVars();
                }
            }
            this.tableCHITIETTAMUNG = ((CHITIETTAMUNGDataTable)(base.Tables["CHITIETTAMUNG"]));
            if ((initTable == true)) {
                if ((this.tableCHITIETTAMUNG != null)) {
                    this.tableCHITIETTAMUNG.InitVars();
                }
            }
            this.relationTHANGNAM_TAMUNG = this.Relations["THANGNAM_TAMUNG"];
            this.relationTAMUNG_CHITIETTAMUNG = this.Relations["TAMUNG_CHITIETTAMUNG"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "datasetDanhsachtontamung";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/datasetDanhsachtontamung.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTAMUNG = new TAMUNGDataTable();
            base.Tables.Add(this.tableTAMUNG);
            this.tableTHANGNAM = new THANGNAMDataTable();
            base.Tables.Add(this.tableTHANGNAM);
            this.tableCHITIETTAMUNG = new CHITIETTAMUNGDataTable();
            base.Tables.Add(this.tableCHITIETTAMUNG);
            this.relationTHANGNAM_TAMUNG = new global::System.Data.DataRelation("THANGNAM_TAMUNG", new global::System.Data.DataColumn[] {
                        this.tableTHANGNAM.thangColumn,
                        this.tableTHANGNAM.namColumn}, new global::System.Data.DataColumn[] {
                        this.tableTAMUNG.thangColumn,
                        this.tableTAMUNG.namColumn}, false);
            this.Relations.Add(this.relationTHANGNAM_TAMUNG);
            this.relationTAMUNG_CHITIETTAMUNG = new global::System.Data.DataRelation("TAMUNG_CHITIETTAMUNG", new global::System.Data.DataColumn[] {
                        this.tableTAMUNG.maqlColumn}, new global::System.Data.DataColumn[] {
                        this.tableCHITIETTAMUNG.maqlColumn}, false);
            this.Relations.Add(this.relationTAMUNG_CHITIETTAMUNG);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTAMUNG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTHANGNAM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCHITIETTAMUNG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            datasetDanhsachtontamung ds = new datasetDanhsachtontamung();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TAMUNGRowChangeEventHandler(object sender, TAMUNGRowChangeEvent e);
        
        public delegate void THANGNAMRowChangeEventHandler(object sender, THANGNAMRowChangeEvent e);
        
        public delegate void CHITIETTAMUNGRowChangeEventHandler(object sender, CHITIETTAMUNGRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TAMUNGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmaql;
            
            private global::System.Data.DataColumn columnmabn;
            
            private global::System.Data.DataColumn columnhoten;
            
            private global::System.Data.DataColumn columnngaynhapvien;
            
            private global::System.Data.DataColumn columntientamung;
            
            private global::System.Data.DataColumn columnsolandong;
            
            private global::System.Data.DataColumn columntienhoantra;
            
            private global::System.Data.DataColumn columntienvienphi;
            
            private global::System.Data.DataColumn columnhoantatca;
            
            private global::System.Data.DataColumn columnngayravien;
            
            private global::System.Data.DataColumn columnthang;
            
            private global::System.Data.DataColumn columnnam;
            
            private global::System.Data.DataColumn columnghichu;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGDataTable() {
                this.TableName = "TAMUNG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAMUNGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TAMUNGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maqlColumn {
                get {
                    return this.columnmaql;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mabnColumn {
                get {
                    return this.columnmabn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hotenColumn {
                get {
                    return this.columnhoten;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ngaynhapvienColumn {
                get {
                    return this.columnngaynhapvien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tientamungColumn {
                get {
                    return this.columntientamung;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn solandongColumn {
                get {
                    return this.columnsolandong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tienhoantraColumn {
                get {
                    return this.columntienhoantra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tienvienphiColumn {
                get {
                    return this.columntienvienphi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hoantatcaColumn {
                get {
                    return this.columnhoantatca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ngayravienColumn {
                get {
                    return this.columnngayravien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn thangColumn {
                get {
                    return this.columnthang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namColumn {
                get {
                    return this.columnnam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ghichuColumn {
                get {
                    return this.columnghichu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow this[int index] {
                get {
                    return ((TAMUNGRow)(this.Rows[index]));
                }
            }
            
            public event TAMUNGRowChangeEventHandler TAMUNGRowChanging;
            
            public event TAMUNGRowChangeEventHandler TAMUNGRowChanged;
            
            public event TAMUNGRowChangeEventHandler TAMUNGRowDeleting;
            
            public event TAMUNGRowChangeEventHandler TAMUNGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTAMUNGRow(TAMUNGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow AddTAMUNGRow(decimal maql, string mabn, string hoten, System.DateTime ngaynhapvien, decimal tientamung, decimal solandong, decimal tienhoantra, decimal tienvienphi, decimal hoantatca, System.DateTime ngayravien, int thang, int nam, string ghichu) {
                TAMUNGRow rowTAMUNGRow = ((TAMUNGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        maql,
                        mabn,
                        hoten,
                        ngaynhapvien,
                        tientamung,
                        solandong,
                        tienhoantra,
                        tienvienphi,
                        hoantatca,
                        ngayravien,
                        thang,
                        nam,
                        ghichu};
                rowTAMUNGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTAMUNGRow);
                return rowTAMUNGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow FindBymabnmaql(string mabn, decimal maql) {
                return ((TAMUNGRow)(this.Rows.Find(new object[] {
                            mabn,
                            maql})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TAMUNGDataTable cln = ((TAMUNGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TAMUNGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmaql = base.Columns["maql"];
                this.columnmabn = base.Columns["mabn"];
                this.columnhoten = base.Columns["hoten"];
                this.columnngaynhapvien = base.Columns["ngaynhapvien"];
                this.columntientamung = base.Columns["tientamung"];
                this.columnsolandong = base.Columns["solandong"];
                this.columntienhoantra = base.Columns["tienhoantra"];
                this.columntienvienphi = base.Columns["tienvienphi"];
                this.columnhoantatca = base.Columns["hoantatca"];
                this.columnngayravien = base.Columns["ngayravien"];
                this.columnthang = base.Columns["thang"];
                this.columnnam = base.Columns["nam"];
                this.columnghichu = base.Columns["ghichu"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmaql = new global::System.Data.DataColumn("maql", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaql);
                this.columnmabn = new global::System.Data.DataColumn("mabn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmabn);
                this.columnhoten = new global::System.Data.DataColumn("hoten", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhoten);
                this.columnngaynhapvien = new global::System.Data.DataColumn("ngaynhapvien", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnngaynhapvien);
                this.columntientamung = new global::System.Data.DataColumn("tientamung", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntientamung);
                this.columnsolandong = new global::System.Data.DataColumn("solandong", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsolandong);
                this.columntienhoantra = new global::System.Data.DataColumn("tienhoantra", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntienhoantra);
                this.columntienvienphi = new global::System.Data.DataColumn("tienvienphi", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntienvienphi);
                this.columnhoantatca = new global::System.Data.DataColumn("hoantatca", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhoantatca);
                this.columnngayravien = new global::System.Data.DataColumn("ngayravien", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnngayravien);
                this.columnthang = new global::System.Data.DataColumn("thang", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthang);
                this.columnnam = new global::System.Data.DataColumn("nam", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnam);
                this.columnghichu = new global::System.Data.DataColumn("ghichu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnghichu);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnmabn,
                                this.columnmaql}, true));
                this.columnmaql.AllowDBNull = false;
                this.columnmaql.ReadOnly = true;
                this.columnmabn.AllowDBNull = false;
                this.columnmabn.ReadOnly = true;
                this.columnmabn.MaxLength = 10;
                this.columnhoten.ReadOnly = true;
                this.columnhoten.MaxLength = 100;
                this.columnngaynhapvien.ReadOnly = true;
                this.columntientamung.ReadOnly = true;
                this.columntienhoantra.ReadOnly = true;
                this.columntienvienphi.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow NewTAMUNGRow() {
                return ((TAMUNGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TAMUNGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TAMUNGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TAMUNGRowChanged != null)) {
                    this.TAMUNGRowChanged(this, new TAMUNGRowChangeEvent(((TAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TAMUNGRowChanging != null)) {
                    this.TAMUNGRowChanging(this, new TAMUNGRowChangeEvent(((TAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TAMUNGRowDeleted != null)) {
                    this.TAMUNGRowDeleted(this, new TAMUNGRowChangeEvent(((TAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TAMUNGRowDeleting != null)) {
                    this.TAMUNGRowDeleting(this, new TAMUNGRowChangeEvent(((TAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTAMUNGRow(TAMUNGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                datasetDanhsachtontamung ds = new datasetDanhsachtontamung();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TAMUNGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class THANGNAMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnthang;
            
            private global::System.Data.DataColumn columnnam;
            
            private global::System.Data.DataColumn columnthangnam;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMDataTable() {
                this.TableName = "THANGNAM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THANGNAMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected THANGNAMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn thangColumn {
                get {
                    return this.columnthang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namColumn {
                get {
                    return this.columnnam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn thangnamColumn {
                get {
                    return this.columnthangnam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow this[int index] {
                get {
                    return ((THANGNAMRow)(this.Rows[index]));
                }
            }
            
            public event THANGNAMRowChangeEventHandler THANGNAMRowChanging;
            
            public event THANGNAMRowChangeEventHandler THANGNAMRowChanged;
            
            public event THANGNAMRowChangeEventHandler THANGNAMRowDeleting;
            
            public event THANGNAMRowChangeEventHandler THANGNAMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTHANGNAMRow(THANGNAMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow AddTHANGNAMRow(int thang, int nam, string thangnam) {
                THANGNAMRow rowTHANGNAMRow = ((THANGNAMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        thang,
                        nam,
                        thangnam};
                rowTHANGNAMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTHANGNAMRow);
                return rowTHANGNAMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow FindBythangnam(int thang, int nam) {
                return ((THANGNAMRow)(this.Rows.Find(new object[] {
                            thang,
                            nam})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                THANGNAMDataTable cln = ((THANGNAMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new THANGNAMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnthang = base.Columns["thang"];
                this.columnnam = base.Columns["nam"];
                this.columnthangnam = base.Columns["thangnam"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnthang = new global::System.Data.DataColumn("thang", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthang);
                this.columnnam = new global::System.Data.DataColumn("nam", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnam);
                this.columnthangnam = new global::System.Data.DataColumn("thangnam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthangnam);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnthang,
                                this.columnnam}, true));
                this.columnthang.AllowDBNull = false;
                this.columnnam.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow NewTHANGNAMRow() {
                return ((THANGNAMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new THANGNAMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(THANGNAMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.THANGNAMRowChanged != null)) {
                    this.THANGNAMRowChanged(this, new THANGNAMRowChangeEvent(((THANGNAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.THANGNAMRowChanging != null)) {
                    this.THANGNAMRowChanging(this, new THANGNAMRowChangeEvent(((THANGNAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.THANGNAMRowDeleted != null)) {
                    this.THANGNAMRowDeleted(this, new THANGNAMRowChangeEvent(((THANGNAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.THANGNAMRowDeleting != null)) {
                    this.THANGNAMRowDeleting(this, new THANGNAMRowChangeEvent(((THANGNAMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTHANGNAMRow(THANGNAMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                datasetDanhsachtontamung ds = new datasetDanhsachtontamung();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "THANGNAMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CHITIETTAMUNGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmabn;
            
            private global::System.Data.DataColumn columnhoten;
            
            private global::System.Data.DataColumn columnmaql;
            
            private global::System.Data.DataColumn columnmavaovien;
            
            private global::System.Data.DataColumn columnquyenso;
            
            private global::System.Data.DataColumn columnsobienlai;
            
            private global::System.Data.DataColumn columntiendong;
            
            private global::System.Data.DataColumn columnngaydong;
            
            private global::System.Data.DataColumn columnhoantra;
            
            private global::System.Data.DataColumn columnngaytra;
            
            private global::System.Data.DataColumn columndone;
            
            private global::System.Data.DataColumn columntongvienphi;
            
            private global::System.Data.DataColumn columnngayravien;
            
            private global::System.Data.DataColumn columnnguoithu;
            
            private global::System.Data.DataColumn columntenkp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETTAMUNGDataTable() {
                this.TableName = "CHITIETTAMUNG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHITIETTAMUNGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CHITIETTAMUNGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mabnColumn {
                get {
                    return this.columnmabn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hotenColumn {
                get {
                    return this.columnhoten;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maqlColumn {
                get {
                    return this.columnmaql;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mavaovienColumn {
                get {
                    return this.columnmavaovien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quyensoColumn {
                get {
                    return this.columnquyenso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sobienlaiColumn {
                get {
                    return this.columnsobienlai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tiendongColumn {
                get {
                    return this.columntiendong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ngaydongColumn {
                get {
                    return this.columnngaydong;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hoantraColumn {
                get {
                    return this.columnhoantra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ngaytraColumn {
                get {
                    return this.columnngaytra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn doneColumn {
                get {
                    return this.columndone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tongvienphiColumn {
                get {
                    return this.columntongvienphi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ngayravienColumn {
                get {
                    return this.columnngayravien;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nguoithuColumn {
                get {
                    return this.columnnguoithu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tenkpColumn {
                get {
                    return this.columntenkp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETTAMUNGRow this[int index] {
                get {
                    return ((CHITIETTAMUNGRow)(this.Rows[index]));
                }
            }
            
            public event CHITIETTAMUNGRowChangeEventHandler CHITIETTAMUNGRowChanging;
            
            public event CHITIETTAMUNGRowChangeEventHandler CHITIETTAMUNGRowChanged;
            
            public event CHITIETTAMUNGRowChangeEventHandler CHITIETTAMUNGRowDeleting;
            
            public event CHITIETTAMUNGRowChangeEventHandler CHITIETTAMUNGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCHITIETTAMUNGRow(CHITIETTAMUNGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETTAMUNGRow AddCHITIETTAMUNGRow(string mabn, string hoten, TAMUNGRow parentTAMUNGRowByTAMUNG_CHITIETTAMUNG, decimal mavaovien, decimal quyenso, decimal sobienlai, decimal tiendong, System.DateTime ngaydong, decimal hoantra, System.DateTime ngaytra, decimal done, decimal tongvienphi, System.DateTime ngayravien, string nguoithu, string tenkp) {
                CHITIETTAMUNGRow rowCHITIETTAMUNGRow = ((CHITIETTAMUNGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        mabn,
                        hoten,
                        null,
                        mavaovien,
                        quyenso,
                        sobienlai,
                        tiendong,
                        ngaydong,
                        hoantra,
                        ngaytra,
                        done,
                        tongvienphi,
                        ngayravien,
                        nguoithu,
                        tenkp};
                if ((parentTAMUNGRowByTAMUNG_CHITIETTAMUNG != null)) {
                    columnValuesArray[2] = parentTAMUNGRowByTAMUNG_CHITIETTAMUNG[0];
                }
                rowCHITIETTAMUNGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCHITIETTAMUNGRow);
                return rowCHITIETTAMUNGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETTAMUNGRow FindByquyensosobienlaimaql(decimal quyenso, decimal sobienlai, decimal maql) {
                return ((CHITIETTAMUNGRow)(this.Rows.Find(new object[] {
                            quyenso,
                            sobienlai,
                            maql})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CHITIETTAMUNGDataTable cln = ((CHITIETTAMUNGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CHITIETTAMUNGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmabn = base.Columns["mabn"];
                this.columnhoten = base.Columns["hoten"];
                this.columnmaql = base.Columns["maql"];
                this.columnmavaovien = base.Columns["mavaovien"];
                this.columnquyenso = base.Columns["quyenso"];
                this.columnsobienlai = base.Columns["sobienlai"];
                this.columntiendong = base.Columns["tiendong"];
                this.columnngaydong = base.Columns["ngaydong"];
                this.columnhoantra = base.Columns["hoantra"];
                this.columnngaytra = base.Columns["ngaytra"];
                this.columndone = base.Columns["done"];
                this.columntongvienphi = base.Columns["tongvienphi"];
                this.columnngayravien = base.Columns["ngayravien"];
                this.columnnguoithu = base.Columns["nguoithu"];
                this.columntenkp = base.Columns["tenkp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmabn = new global::System.Data.DataColumn("mabn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmabn);
                this.columnhoten = new global::System.Data.DataColumn("hoten", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhoten);
                this.columnmaql = new global::System.Data.DataColumn("maql", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaql);
                this.columnmavaovien = new global::System.Data.DataColumn("mavaovien", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmavaovien);
                this.columnquyenso = new global::System.Data.DataColumn("quyenso", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquyenso);
                this.columnsobienlai = new global::System.Data.DataColumn("sobienlai", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsobienlai);
                this.columntiendong = new global::System.Data.DataColumn("tiendong", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntiendong);
                this.columnngaydong = new global::System.Data.DataColumn("ngaydong", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnngaydong);
                this.columnhoantra = new global::System.Data.DataColumn("hoantra", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhoantra);
                this.columnngaytra = new global::System.Data.DataColumn("ngaytra", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnngaytra);
                this.columndone = new global::System.Data.DataColumn("done", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndone);
                this.columntongvienphi = new global::System.Data.DataColumn("tongvienphi", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntongvienphi);
                this.columnngayravien = new global::System.Data.DataColumn("ngayravien", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnngayravien);
                this.columnnguoithu = new global::System.Data.DataColumn("nguoithu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnguoithu);
                this.columntenkp = new global::System.Data.DataColumn("tenkp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntenkp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnquyenso,
                                this.columnsobienlai,
                                this.columnmaql}, true));
                this.columnmabn.ReadOnly = true;
                this.columnmabn.MaxLength = 10;
                this.columnhoten.ReadOnly = true;
                this.columnhoten.MaxLength = 100;
                this.columnmaql.AllowDBNull = false;
                this.columnmaql.ReadOnly = true;
                this.columnmavaovien.ReadOnly = true;
                this.columnquyenso.AllowDBNull = false;
                this.columnquyenso.ReadOnly = true;
                this.columnsobienlai.AllowDBNull = false;
                this.columnsobienlai.ReadOnly = true;
                this.columntiendong.ReadOnly = true;
                this.columnngaydong.ReadOnly = true;
                this.columnhoantra.ReadOnly = true;
                this.columnngaytra.ReadOnly = true;
                this.columndone.ReadOnly = true;
                this.columntongvienphi.ReadOnly = true;
                this.columnngayravien.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETTAMUNGRow NewCHITIETTAMUNGRow() {
                return ((CHITIETTAMUNGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CHITIETTAMUNGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CHITIETTAMUNGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHITIETTAMUNGRowChanged != null)) {
                    this.CHITIETTAMUNGRowChanged(this, new CHITIETTAMUNGRowChangeEvent(((CHITIETTAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHITIETTAMUNGRowChanging != null)) {
                    this.CHITIETTAMUNGRowChanging(this, new CHITIETTAMUNGRowChangeEvent(((CHITIETTAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHITIETTAMUNGRowDeleted != null)) {
                    this.CHITIETTAMUNGRowDeleted(this, new CHITIETTAMUNGRowChangeEvent(((CHITIETTAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHITIETTAMUNGRowDeleting != null)) {
                    this.CHITIETTAMUNGRowDeleting(this, new CHITIETTAMUNGRowChangeEvent(((CHITIETTAMUNGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCHITIETTAMUNGRow(CHITIETTAMUNGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                datasetDanhsachtontamung ds = new datasetDanhsachtontamung();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CHITIETTAMUNGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TAMUNGRow : global::System.Data.DataRow {
            
            private TAMUNGDataTable tableTAMUNG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TAMUNGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTAMUNG = ((TAMUNGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal maql {
                get {
                    return ((decimal)(this[this.tableTAMUNG.maqlColumn]));
                }
                set {
                    this[this.tableTAMUNG.maqlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mabn {
                get {
                    return ((string)(this[this.tableTAMUNG.mabnColumn]));
                }
                set {
                    this[this.tableTAMUNG.mabnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hoten {
                get {
                    try {
                        return ((string)(this[this.tableTAMUNG.hotenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hoten\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.hotenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ngaynhapvien {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTAMUNG.ngaynhapvienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ngaynhapvien\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.ngaynhapvienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tientamung {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMUNG.tientamungColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tientamung\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.tientamungColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal solandong {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMUNG.solandongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'solandong\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.solandongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tienhoantra {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMUNG.tienhoantraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tienhoantra\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.tienhoantraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tienvienphi {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMUNG.tienvienphiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tienvienphi\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.tienvienphiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal hoantatca {
                get {
                    try {
                        return ((decimal)(this[this.tableTAMUNG.hoantatcaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hoantatca\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.hoantatcaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ngayravien {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTAMUNG.ngayravienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ngayravien\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.ngayravienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int thang {
                get {
                    try {
                        return ((int)(this[this.tableTAMUNG.thangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'thang\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.thangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nam {
                get {
                    try {
                        return ((int)(this[this.tableTAMUNG.namColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nam\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.namColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ghichu {
                get {
                    try {
                        return ((string)(this[this.tableTAMUNG.ghichuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ghichu\' in table \'TAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTAMUNG.ghichuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow THANGNAMRowParent {
                get {
                    return ((THANGNAMRow)(this.GetParentRow(this.Table.ParentRelations["THANGNAM_TAMUNG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["THANGNAM_TAMUNG"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshotenNull() {
                return this.IsNull(this.tableTAMUNG.hotenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethotenNull() {
                this[this.tableTAMUNG.hotenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsngaynhapvienNull() {
                return this.IsNull(this.tableTAMUNG.ngaynhapvienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetngaynhapvienNull() {
                this[this.tableTAMUNG.ngaynhapvienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstientamungNull() {
                return this.IsNull(this.tableTAMUNG.tientamungColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettientamungNull() {
                this[this.tableTAMUNG.tientamungColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssolandongNull() {
                return this.IsNull(this.tableTAMUNG.solandongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsolandongNull() {
                this[this.tableTAMUNG.solandongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstienhoantraNull() {
                return this.IsNull(this.tableTAMUNG.tienhoantraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettienhoantraNull() {
                this[this.tableTAMUNG.tienhoantraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstienvienphiNull() {
                return this.IsNull(this.tableTAMUNG.tienvienphiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettienvienphiNull() {
                this[this.tableTAMUNG.tienvienphiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshoantatcaNull() {
                return this.IsNull(this.tableTAMUNG.hoantatcaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethoantatcaNull() {
                this[this.tableTAMUNG.hoantatcaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsngayravienNull() {
                return this.IsNull(this.tableTAMUNG.ngayravienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetngayravienNull() {
                this[this.tableTAMUNG.ngayravienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsthangNull() {
                return this.IsNull(this.tableTAMUNG.thangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetthangNull() {
                this[this.tableTAMUNG.thangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnamNull() {
                return this.IsNull(this.tableTAMUNG.namColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnamNull() {
                this[this.tableTAMUNG.namColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsghichuNull() {
                return this.IsNull(this.tableTAMUNG.ghichuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetghichuNull() {
                this[this.tableTAMUNG.ghichuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETTAMUNGRow[] GetCHITIETTAMUNGRows() {
                if ((this.Table.ChildRelations["TAMUNG_CHITIETTAMUNG"] == null)) {
                    return new CHITIETTAMUNGRow[0];
                }
                else {
                    return ((CHITIETTAMUNGRow[])(base.GetChildRows(this.Table.ChildRelations["TAMUNG_CHITIETTAMUNG"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class THANGNAMRow : global::System.Data.DataRow {
            
            private THANGNAMDataTable tableTHANGNAM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal THANGNAMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTHANGNAM = ((THANGNAMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int thang {
                get {
                    return ((int)(this[this.tableTHANGNAM.thangColumn]));
                }
                set {
                    this[this.tableTHANGNAM.thangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int nam {
                get {
                    return ((int)(this[this.tableTHANGNAM.namColumn]));
                }
                set {
                    this[this.tableTHANGNAM.namColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string thangnam {
                get {
                    try {
                        return ((string)(this[this.tableTHANGNAM.thangnamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'thangnam\' in table \'THANGNAM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTHANGNAM.thangnamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsthangnamNull() {
                return this.IsNull(this.tableTHANGNAM.thangnamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetthangnamNull() {
                this[this.tableTHANGNAM.thangnamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow[] GetTAMUNGRows() {
                if ((this.Table.ChildRelations["THANGNAM_TAMUNG"] == null)) {
                    return new TAMUNGRow[0];
                }
                else {
                    return ((TAMUNGRow[])(base.GetChildRows(this.Table.ChildRelations["THANGNAM_TAMUNG"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CHITIETTAMUNGRow : global::System.Data.DataRow {
            
            private CHITIETTAMUNGDataTable tableCHITIETTAMUNG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CHITIETTAMUNGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHITIETTAMUNG = ((CHITIETTAMUNGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mabn {
                get {
                    try {
                        return ((string)(this[this.tableCHITIETTAMUNG.mabnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mabn\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.mabnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hoten {
                get {
                    try {
                        return ((string)(this[this.tableCHITIETTAMUNG.hotenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hoten\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.hotenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal maql {
                get {
                    return ((decimal)(this[this.tableCHITIETTAMUNG.maqlColumn]));
                }
                set {
                    this[this.tableCHITIETTAMUNG.maqlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mavaovien {
                get {
                    try {
                        return ((decimal)(this[this.tableCHITIETTAMUNG.mavaovienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mavaovien\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.mavaovienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal quyenso {
                get {
                    return ((decimal)(this[this.tableCHITIETTAMUNG.quyensoColumn]));
                }
                set {
                    this[this.tableCHITIETTAMUNG.quyensoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal sobienlai {
                get {
                    return ((decimal)(this[this.tableCHITIETTAMUNG.sobienlaiColumn]));
                }
                set {
                    this[this.tableCHITIETTAMUNG.sobienlaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tiendong {
                get {
                    try {
                        return ((decimal)(this[this.tableCHITIETTAMUNG.tiendongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tiendong\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.tiendongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ngaydong {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCHITIETTAMUNG.ngaydongColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ngaydong\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.ngaydongColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal hoantra {
                get {
                    try {
                        return ((decimal)(this[this.tableCHITIETTAMUNG.hoantraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hoantra\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.hoantraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ngaytra {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCHITIETTAMUNG.ngaytraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ngaytra\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.ngaytraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal done {
                get {
                    try {
                        return ((decimal)(this[this.tableCHITIETTAMUNG.doneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'done\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.doneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal tongvienphi {
                get {
                    try {
                        return ((decimal)(this[this.tableCHITIETTAMUNG.tongvienphiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tongvienphi\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.tongvienphiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ngayravien {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCHITIETTAMUNG.ngayravienColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ngayravien\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.ngayravienColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nguoithu {
                get {
                    try {
                        return ((string)(this[this.tableCHITIETTAMUNG.nguoithuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nguoithu\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.nguoithuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tenkp {
                get {
                    try {
                        return ((string)(this[this.tableCHITIETTAMUNG.tenkpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tenkp\' in table \'CHITIETTAMUNG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCHITIETTAMUNG.tenkpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow TAMUNGRow {
                get {
                    return ((TAMUNGRow)(this.GetParentRow(this.Table.ParentRelations["TAMUNG_CHITIETTAMUNG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["TAMUNG_CHITIETTAMUNG"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmabnNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.mabnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmabnNull() {
                this[this.tableCHITIETTAMUNG.mabnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshotenNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.hotenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethotenNull() {
                this[this.tableCHITIETTAMUNG.hotenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmavaovienNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.mavaovienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmavaovienNull() {
                this[this.tableCHITIETTAMUNG.mavaovienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstiendongNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.tiendongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettiendongNull() {
                this[this.tableCHITIETTAMUNG.tiendongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsngaydongNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.ngaydongColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetngaydongNull() {
                this[this.tableCHITIETTAMUNG.ngaydongColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshoantraNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.hoantraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethoantraNull() {
                this[this.tableCHITIETTAMUNG.hoantraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsngaytraNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.ngaytraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetngaytraNull() {
                this[this.tableCHITIETTAMUNG.ngaytraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdoneNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.doneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdoneNull() {
                this[this.tableCHITIETTAMUNG.doneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstongvienphiNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.tongvienphiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettongvienphiNull() {
                this[this.tableCHITIETTAMUNG.tongvienphiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsngayravienNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.ngayravienColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetngayravienNull() {
                this[this.tableCHITIETTAMUNG.ngayravienColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnguoithuNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.nguoithuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnguoithuNull() {
                this[this.tableCHITIETTAMUNG.nguoithuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstenkpNull() {
                return this.IsNull(this.tableCHITIETTAMUNG.tenkpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettenkpNull() {
                this[this.tableCHITIETTAMUNG.tenkpColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TAMUNGRowChangeEvent : global::System.EventArgs {
            
            private TAMUNGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRowChangeEvent(TAMUNGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TAMUNGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class THANGNAMRowChangeEvent : global::System.EventArgs {
            
            private THANGNAMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRowChangeEvent(THANGNAMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public THANGNAMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CHITIETTAMUNGRowChangeEvent : global::System.EventArgs {
            
            private CHITIETTAMUNGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETTAMUNGRowChangeEvent(CHITIETTAMUNGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CHITIETTAMUNGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591